!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
A	./src/debugger/CpuDebug.hxx	/^    int PC, SP, PS, A, X, Y;$/;"	m	class:CpuState
A	./src/emucore/m6502/src/M6502.hxx	/^    uInt8 A;    \/\/ Accumulator$/;"	m	class:M6502
ABOUT_DIALOG_HXX	./src/gui/AboutDialog.hxx	23;"	d
ADD_ALINE	./src/gui/AboutDialog.cxx	30;"	d	file:
ADD_ATEXT	./src/gui/AboutDialog.cxx	29;"	d	file:
ADD_BIND	./src/gui/HelpDialog.hxx	30;"	d
ADD_LINE	./src/gui/HelpDialog.hxx	32;"	d
ADD_TEXT	./src/gui/HelpDialog.hxx	31;"	d
ALLOC	./src/emucore/unzip.c	48;"	d	file:
ARRAY_HXX	./src/common/Array.hxx	23;"	d
ATARIVOX_HXX	./src/emucore/AtariVox.hxx	23;"	d
AUDC0	./src/debugger/TIADebug.hxx	/^	AUDC0,$/;"	e	enum:TIALabel
AUDC1	./src/debugger/TIADebug.hxx	/^	AUDC1,$/;"	e	enum:TIALabel
AUDF0	./src/debugger/TIADebug.hxx	/^	AUDF0,$/;"	e	enum:TIALabel
AUDF1	./src/debugger/TIADebug.hxx	/^	AUDF1,  \/\/ $18$/;"	e	enum:TIALabel
AUDIO_DIALOG_HXX	./src/gui/AudioDialog.hxx	23;"	d
AUDIO_WIDGET_HXX	./src/debugger/gui/AudioWidget.hxx	23;"	d
AUDV0	./src/debugger/TIADebug.hxx	/^	AUDV0,$/;"	e	enum:TIALabel
AUDV1	./src/debugger/TIADebug.hxx	/^	AUDV1,$/;"	e	enum:TIALabel
AboutDialog	./src/gui/AboutDialog.cxx	/^AboutDialog::AboutDialog(OSystem* osystem, DialogContainer* parent,$/;"	f	class:AboutDialog
AboutDialog	./src/gui/AboutDialog.hxx	/^class AboutDialog : public Dialog$/;"	c
Absolute	./src/emucore/m6502/src/M6502.hxx	/^      Absolute, AbsoluteX, AbsoluteY, Immediate, Implied,$/;"	e	enum:M6502::AddressingMode
AbsoluteX	./src/emucore/m6502/src/M6502.hxx	/^      Absolute, AbsoluteX, AbsoluteY, Immediate, Implied,$/;"	e	enum:M6502::AddressingMode
AbsoluteY	./src/emucore/m6502/src/M6502.hxx	/^      Absolute, AbsoluteX, AbsoluteY, Immediate, Implied,$/;"	e	enum:M6502::AddressingMode
AbstractFilesystemNode	./src/emucore/FSNode.hxx	/^class AbstractFilesystemNode$/;"	c
ActionList	./src/emucore/EventHandler.hxx	/^    struct ActionList {$/;"	s	class:EventHandler
AddrToLine	./src/debugger/gui/RomWidget.hxx	/^typedef map<int,int> AddrToLine;$/;"	t
AddressingMode	./src/emucore/m6502/src/M6502.hxx	/^    enum AddressingMode $/;"	g	class:M6502
AnalogPin	./src/emucore/Control.hxx	/^    enum AnalogPin$/;"	g	class:Controller
Array	./src/common/Array.hxx	/^    Array<T>() : _capacity(0), _size(0), _data(0) {}$/;"	f	class:Common::Array
Array	./src/common/Array.hxx	/^    Array<T>(const Array<T>& array) : _capacity(0), _size(0), _data(0)$/;"	f	class:Common::Array
Array	./src/common/Array.hxx	/^class Array$/;"	c	namespace:Common
AtariVox	./src/emucore/AtariVox.cxx	/^AtariVox::AtariVox(Jack jack, const Event& event)$/;"	f	class:AtariVox
AtariVox	./src/emucore/AtariVox.hxx	/^class AtariVox : public Controller$/;"	c
AtariVox	./src/emucore/Control.hxx	/^      TrackBall22, AtariVox$/;"	e	enum:Controller::Type
AudioDialog	./src/gui/AudioDialog.cxx	/^AudioDialog::AudioDialog(OSystem* osystem, DialogContainer* parent,$/;"	f	class:AudioDialog
AudioDialog	./src/gui/AudioDialog.hxx	/^class AudioDialog : public Dialog$/;"	c
AudioWidget	./src/debugger/gui/AudioWidget.cxx	/^AudioWidget::AudioWidget(GuiObject* boss, const GUI::Font& font,$/;"	f	class:AudioWidget
AudioWidget	./src/debugger/gui/AudioWidget.hxx	/^class AudioWidget : public Widget, public CommandSender$/;"	c
B	./src/emucore/m6502/src/M6502.hxx	/^    bool B;     \/\/ B flag for processor status register$/;"	m	class:M6502
BANK_ROM_CHEAT_HXX	./src/cheat/BankRomCheat.hxx	20;"	d
BL	./src/debugger/TIADebug.hxx	/^  P0, P1, M0, M1, BL$/;"	e	enum:__anon78
BL	./src/emucore/TIA.hxx	/^      BL,   \/\/ Descriptor for Ball Bit$/;"	e	enum:TIA::TIABit
BOOSTERGRIP_HXX	./src/emucore/Booster.hxx	20;"	d
BROWSER_DIALOG_HXX	./src/gui/BrowserDialog.hxx	23;"	d
BSPF_HXX	./src/emucore/m6502/src/bspf/src/bspf.hxx	20;"	d
BSPF_PATH_SEPARATOR	./src/emucore/m6502/src/bspf/src/bspf.hxx	61;"	d
BSPF_abs	./src/emucore/m6502/src/bspf/src/bspf.hxx	/^template<typename T> inline T BSPF_abs (T x) { return (x>=0) ? x : -x; }$/;"	f
BSPF_isblank	./src/emucore/m6502/src/bspf/src/bspf.hxx	74;"	d
BSPF_max	./src/emucore/m6502/src/bspf/src/bspf.hxx	/^template<typename T> inline T BSPF_max (T a, T b) { return (a>b) ? a : b; }$/;"	f
BSPF_min	./src/emucore/m6502/src/bspf/src/bspf.hxx	/^template<typename T> inline T BSPF_min (T a, T b) { return (a<b) ? a : b; }$/;"	f
BSPF_snprintf	./src/emucore/m6502/src/bspf/src/bspf.hxx	75;"	d
BSPF_strcasecmp	./src/emucore/m6502/src/bspf/src/bspf.hxx	72;"	d
BSPF_strncasecmp	./src/emucore/m6502/src/bspf/src/bspf.hxx	73;"	d
BSPF_swap	./src/emucore/m6502/src/bspf/src/bspf.hxx	/^template<typename T> inline void BSPF_swap(T &a, T &b) { T tmp = a; a = b; b = tmp; }$/;"	f
BSPF_vsnprintf	./src/emucore/m6502/src/bspf/src/bspf.hxx	76;"	d
BUFREADCOMMENT	./src/emucore/unzip.c	261;"	d	file:
BankRomCheat	./src/cheat/BankRomCheat.cxx	/^BankRomCheat::BankRomCheat(OSystem* os, const string& name, const string& code)$/;"	f	class:BankRomCheat
BankRomCheat	./src/cheat/BankRomCheat.hxx	/^class BankRomCheat : public Cheat$/;"	c
BaseFormat	./src/debugger/DebuggerParser.hxx	/^} BaseFormat;$/;"	t	typeref:enum:__anon58
BinAndExpression	./src/debugger/DebuggerExpressions.hxx	/^    BinAndExpression(Expression* left, Expression* right) : Expression(left, right) {}$/;"	f	class:BinAndExpression
BinAndExpression	./src/debugger/DebuggerExpressions.hxx	/^class BinAndExpression : public Expression$/;"	c
BinNotExpression	./src/debugger/DebuggerExpressions.hxx	/^    BinNotExpression(Expression* left) : Expression(left, 0) {}$/;"	f	class:BinNotExpression
BinNotExpression	./src/debugger/DebuggerExpressions.hxx	/^class BinNotExpression : public Expression$/;"	c
BinOrExpression	./src/debugger/DebuggerExpressions.hxx	/^    BinOrExpression(Expression* left, Expression* right) : Expression(left, right) {}$/;"	f	class:BinOrExpression
BinOrExpression	./src/debugger/DebuggerExpressions.hxx	/^class BinOrExpression : public Expression$/;"	c
BinXorExpression	./src/debugger/DebuggerExpressions.hxx	/^    BinXorExpression(Expression* left, Expression* right) : Expression(left, right) {}$/;"	f	class:BinXorExpression
BinXorExpression	./src/debugger/DebuggerExpressions.hxx	/^class BinXorExpression : public Expression$/;"	c
BoolArray	./src/common/Array.hxx	/^typedef Common::Array<bool>  BoolArray;$/;"	t
BoosterGrip	./src/emucore/Booster.cxx	/^BoosterGrip::BoosterGrip(Jack jack, const Event& event)$/;"	f	class:BoosterGrip
BoosterGrip	./src/emucore/Booster.hxx	/^class BoosterGrip : public Controller$/;"	c
BoosterGrip	./src/emucore/Control.hxx	/^      BoosterGrip, Driving, Keyboard, Paddles, Joystick,$/;"	e	enum:Controller::Type
BrowserDialog	./src/gui/BrowserDialog.cxx	/^BrowserDialog::BrowserDialog(GuiObject* boss, const GUI::Font& font,$/;"	f	class:BrowserDialog
BrowserDialog	./src/gui/BrowserDialog.hxx	/^class BrowserDialog : public Dialog, public CommandSender$/;"	c
BufferType	./src/emucore/FrameBuffer.hxx	/^enum BufferType {$/;"	g
ButtonWidget	./src/gui/Widget.cxx	/^ButtonWidget::ButtonWidget(GuiObject *boss, const GUI::Font& font,$/;"	f	class:ButtonWidget
ButtonWidget	./src/gui/Widget.hxx	/^class ButtonWidget : public StaticTextWidget, public CommandSender$/;"	c
ByteArray	./src/common/Array.hxx	/^typedef Common::Array<uInt8> ByteArray;$/;"	t
ByteDerefExpression	./src/debugger/DebuggerExpressions.hxx	/^    ByteDerefExpression(Expression* left): Expression(left, 0) {}$/;"	f	class:ByteDerefExpression
ByteDerefExpression	./src/debugger/DebuggerExpressions.hxx	/^class ByteDerefExpression : public Expression$/;"	c
ByteDerefOffsetExpression	./src/debugger/DebuggerExpressions.hxx	/^    ByteDerefOffsetExpression(Expression* left, Expression* right) : Expression(left, right) {}$/;"	f	class:ByteDerefOffsetExpression
ByteDerefOffsetExpression	./src/debugger/DebuggerExpressions.hxx	/^class ByteDerefOffsetExpression : public Expression$/;"	c
C	./src/emucore/m6502/src/M6502.hxx	/^    bool C;     \/\/ C flag for processor status register$/;"	m	class:M6502
CALL_CPUDEBUG_METHOD	./src/debugger/CpuDebug.hxx	32;"	d
CALL_METHOD	./src/debugger/DebuggerParser.cxx	39;"	d	file:
CALL_TIADEBUG_METHOD	./src/debugger/TIADebug.hxx	34;"	d
CARTRIDGE0840_HXX	./src/emucore/Cart0840.hxx	20;"	d
CARTRIDGE2K_HXX	./src/emucore/Cart2K.hxx	20;"	d
CARTRIDGE3E_HXX	./src/emucore/Cart3E.hxx	20;"	d
CARTRIDGE3F_HXX	./src/emucore/Cart3F.hxx	20;"	d
CARTRIDGE4A50_HXX	./src/emucore/Cart4A50.hxx	20;"	d
CARTRIDGE4K_HXX	./src/emucore/Cart4K.hxx	20;"	d
CARTRIDGEAR_HXX	./src/emucore/CartAR.hxx	20;"	d
CARTRIDGECV_HXX	./src/emucore/CartCV.hxx	20;"	d
CARTRIDGEDCP_HXX	./src/emucore/CartDPC.hxx	20;"	d
CARTRIDGEE0_HXX	./src/emucore/CartE0.hxx	20;"	d
CARTRIDGEE7_HXX	./src/emucore/CartE7.hxx	20;"	d
CARTRIDGEF4SC_HXX	./src/emucore/CartF4SC.hxx	20;"	d
CARTRIDGEF4_HXX	./src/emucore/CartF4.hxx	20;"	d
CARTRIDGEF6SC_HXX	./src/emucore/CartF6SC.hxx	20;"	d
CARTRIDGEF6_HXX	./src/emucore/CartF6.hxx	20;"	d
CARTRIDGEF8SC_HXX	./src/emucore/CartF8SC.hxx	20;"	d
CARTRIDGEF8_HXX	./src/emucore/CartF8.hxx	20;"	d
CARTRIDGEFASC_HXX	./src/emucore/CartFASC.hxx	20;"	d
CARTRIDGEFE_HXX	./src/emucore/CartFE.hxx	20;"	d
CARTRIDGEMB_HXX	./src/emucore/CartMB.hxx	20;"	d
CARTRIDGEMC_HXX	./src/emucore/CartMC.hxx	20;"	d
CARTRIDGESB_HXX	./src/emucore/CartSB.hxx	20;"	d
CARTRIDGEUA_HXX	./src/emucore/CartUA.hxx	20;"	d
CARTRIDGEX07_HXX	./src/emucore/CartX07.hxx	20;"	d
CARTRIDGE_HXX	./src/emucore/Cart.hxx	20;"	d
CASESENSITIVITYDEFAULTVALUE	./src/emucore/unzip.c	231;"	d	file:
CASESENSITIVITYDEFAULTVALUE	./src/emucore/unzip.c	233;"	d	file:
CASESENSITIVITYDEFAULT_NO	./src/emucore/unzip.c	35;"	d	file:
CHEAT_CODE_DIALOG_HXX	./src/cheat/CheatCodeDialog.hxx	23;"	d
CHEAT_HXX	./src/cheat/Cheat.hxx	20;"	d
CHEAT_MANAGER_HXX	./src/cheat/CheatManager.hxx	20;"	d
CHECK_LIST_WIDGET_HXX	./src/gui/CheckListWidget.hxx	23;"	d
CHECK_SPACING	./src/emucore/rsynth/holmes.c	124;"	d	file:
CHEETAH_CHEAT_HXX	./src/cheat/CheetahCheat.hxx	20;"	d
COLOR_WIDGET_HXX	./src/debugger/gui/ColorWidget.hxx	23;"	d
COLUBK	./src/debugger/TIADebug.hxx	/^	COLUBK,$/;"	e	enum:TIALabel
COLUP0	./src/debugger/TIADebug.hxx	/^	COLUP0,$/;"	e	enum:TIALabel
COLUP1	./src/debugger/TIADebug.hxx	/^	COLUP1,$/;"	e	enum:TIALabel
COLUPF	./src/debugger/TIADebug.hxx	/^	COLUPF, \/\/ $08$/;"	e	enum:TIALabel
COMMAND_DIALOG_HXX	./src/gui/CommandDialog.hxx	23;"	d
COMMAND_HXX	./src/gui/Command.hxx	23;"	d
COMMAND_MENU_HXX	./src/gui/CommandMenu.hxx	20;"	d
COMMENT	./src/emucore/rsynth/phtoelm.c	53;"	d	file:
CONSOLE_FONT_DATA_HXX	./src/gui/ConsoleFont.hxx	23;"	d
CONSOLE_HXX	./src/emucore/Console.hxx	20;"	d
CONTEXT_MENU_HXX	./src/debugger/gui/ContextMenu.hxx	23;"	d
CONTROLLER_HXX	./src/emucore/Control.hxx	20;"	d
CPUDEBUG_INT_METHOD	./src/debugger/CpuDebug.hxx	/^typedef int (CpuDebug::*CPUDEBUG_INT_METHOD)();$/;"	t
CPU_DEBUG_HXX	./src/debugger/CpuDebug.hxx	20;"	d
CPU_METHOD	./src/yacc/y.tab.c	/^     CPU_METHOD = 261,$/;"	e	enum:yytokentype	file:
CPU_METHOD	./src/yacc/y.tab.c	92;"	d	file:
CPU_WIDGET_HXX	./src/debugger/gui/CpuWidget.hxx	23;"	d
CTRLPF	./src/debugger/TIADebug.hxx	/^	CTRLPF,$/;"	e	enum:TIALabel
CXCLR	./src/debugger/TIADebug.hxx	/^	CXCLR   \/\/ $2C$/;"	e	enum:TIALabel
Cartridge	./src/emucore/Cart.cxx	/^Cartridge::Cartridge()$/;"	f	class:Cartridge
Cartridge	./src/emucore/Cart.cxx	/^Cartridge::Cartridge(const Cartridge&)$/;"	f	class:Cartridge
Cartridge	./src/emucore/Cart.hxx	/^class Cartridge : public Device$/;"	c
Cartridge0840	./src/emucore/Cart0840.cxx	/^Cartridge0840::Cartridge0840(const uInt8* image)$/;"	f	class:Cartridge0840
Cartridge0840	./src/emucore/Cart0840.hxx	/^class Cartridge0840 : public Cartridge$/;"	c
Cartridge2K	./src/emucore/Cart2K.cxx	/^Cartridge2K::Cartridge2K(const uInt8* image)$/;"	f	class:Cartridge2K
Cartridge2K	./src/emucore/Cart2K.hxx	/^class Cartridge2K : public Cartridge$/;"	c
Cartridge3E	./src/emucore/Cart3E.cxx	/^Cartridge3E::Cartridge3E(const uInt8* image, uInt32 size)$/;"	f	class:Cartridge3E
Cartridge3E	./src/emucore/Cart3E.hxx	/^class Cartridge3E : public Cartridge$/;"	c
Cartridge3F	./src/emucore/Cart3F.cxx	/^Cartridge3F::Cartridge3F(const uInt8* image, uInt32 size)$/;"	f	class:Cartridge3F
Cartridge3F	./src/emucore/Cart3F.hxx	/^class Cartridge3F : public Cartridge$/;"	c
Cartridge4A50	./src/emucore/Cart4A50.cxx	/^Cartridge4A50::Cartridge4A50(const uInt8* image, uInt32 size)$/;"	f	class:Cartridge4A50
Cartridge4A50	./src/emucore/Cart4A50.hxx	/^class Cartridge4A50 : public Cartridge$/;"	c
Cartridge4K	./src/emucore/Cart4K.cxx	/^Cartridge4K::Cartridge4K(const uInt8* image)$/;"	f	class:Cartridge4K
Cartridge4K	./src/emucore/Cart4K.hxx	/^class Cartridge4K : public Cartridge$/;"	c
CartridgeAR	./src/emucore/CartAR.cxx	/^CartridgeAR::CartridgeAR(const uInt8* image, uInt32 size, bool fastbios)$/;"	f	class:CartridgeAR
CartridgeAR	./src/emucore/CartAR.hxx	/^class CartridgeAR : public Cartridge$/;"	c
CartridgeCV	./src/emucore/CartCV.cxx	/^CartridgeCV::CartridgeCV(const uInt8* image, uInt32 size)$/;"	f	class:CartridgeCV
CartridgeCV	./src/emucore/CartCV.hxx	/^class CartridgeCV : public Cartridge$/;"	c
CartridgeDPC	./src/emucore/CartDPC.cxx	/^CartridgeDPC::CartridgeDPC(const uInt8* image, uInt32 size)$/;"	f	class:CartridgeDPC
CartridgeDPC	./src/emucore/CartDPC.hxx	/^class CartridgeDPC : public Cartridge$/;"	c
CartridgeE0	./src/emucore/CartE0.cxx	/^CartridgeE0::CartridgeE0(const uInt8* image)$/;"	f	class:CartridgeE0
CartridgeE0	./src/emucore/CartE0.hxx	/^class CartridgeE0 : public Cartridge$/;"	c
CartridgeE7	./src/emucore/CartE7.cxx	/^CartridgeE7::CartridgeE7(const uInt8* image)$/;"	f	class:CartridgeE7
CartridgeE7	./src/emucore/CartE7.hxx	/^class CartridgeE7 : public Cartridge$/;"	c
CartridgeF4	./src/emucore/CartF4.cxx	/^CartridgeF4::CartridgeF4(const uInt8* image)$/;"	f	class:CartridgeF4
CartridgeF4	./src/emucore/CartF4.hxx	/^class CartridgeF4 : public Cartridge$/;"	c
CartridgeF4SC	./src/emucore/CartF4SC.cxx	/^CartridgeF4SC::CartridgeF4SC(const uInt8* image)$/;"	f	class:CartridgeF4SC
CartridgeF4SC	./src/emucore/CartF4SC.hxx	/^class CartridgeF4SC : public Cartridge$/;"	c
CartridgeF6	./src/emucore/CartF6.cxx	/^CartridgeF6::CartridgeF6(const uInt8* image)$/;"	f	class:CartridgeF6
CartridgeF6	./src/emucore/CartF6.hxx	/^class CartridgeF6 : public Cartridge$/;"	c
CartridgeF6SC	./src/emucore/CartF6SC.cxx	/^CartridgeF6SC::CartridgeF6SC(const uInt8* image)$/;"	f	class:CartridgeF6SC
CartridgeF6SC	./src/emucore/CartF6SC.hxx	/^class CartridgeF6SC : public Cartridge$/;"	c
CartridgeF8	./src/emucore/CartF8.cxx	/^CartridgeF8::CartridgeF8(const uInt8* image, bool swapbanks)$/;"	f	class:CartridgeF8
CartridgeF8	./src/emucore/CartF8.hxx	/^class CartridgeF8 : public Cartridge$/;"	c
CartridgeF8SC	./src/emucore/CartF8SC.cxx	/^CartridgeF8SC::CartridgeF8SC(const uInt8* image)$/;"	f	class:CartridgeF8SC
CartridgeF8SC	./src/emucore/CartF8SC.hxx	/^class CartridgeF8SC : public Cartridge$/;"	c
CartridgeFASC	./src/emucore/CartFASC.cxx	/^CartridgeFASC::CartridgeFASC(const uInt8* image)$/;"	f	class:CartridgeFASC
CartridgeFASC	./src/emucore/CartFASC.hxx	/^class CartridgeFASC : public Cartridge$/;"	c
CartridgeFE	./src/emucore/CartFE.cxx	/^CartridgeFE::CartridgeFE(const uInt8* image)$/;"	f	class:CartridgeFE
CartridgeFE	./src/emucore/CartFE.hxx	/^class CartridgeFE : public Cartridge$/;"	c
CartridgeMB	./src/emucore/CartMB.cxx	/^CartridgeMB::CartridgeMB(const uInt8* image)$/;"	f	class:CartridgeMB
CartridgeMB	./src/emucore/CartMB.hxx	/^class CartridgeMB : public Cartridge$/;"	c
CartridgeMC	./src/emucore/CartMC.cxx	/^CartridgeMC::CartridgeMC(const uInt8* image, uInt32 size)$/;"	f	class:CartridgeMC
CartridgeMC	./src/emucore/CartMC.hxx	/^class CartridgeMC : public Cartridge$/;"	c
CartridgeSB	./src/emucore/CartSB.cxx	/^CartridgeSB::CartridgeSB(const uInt8* image, uInt32 size)$/;"	f	class:CartridgeSB
CartridgeSB	./src/emucore/CartSB.hxx	/^class CartridgeSB : public Cartridge$/;"	c
CartridgeUA	./src/emucore/CartUA.cxx	/^CartridgeUA::CartridgeUA(const uInt8* image)$/;"	f	class:CartridgeUA
CartridgeUA	./src/emucore/CartUA.hxx	/^class CartridgeUA : public Cartridge$/;"	c
CartridgeX07	./src/emucore/CartX07.cxx	/^CartridgeX07::CartridgeX07(const uInt8* image)$/;"	f	class:CartridgeX07
CartridgeX07	./src/emucore/CartX07.hxx	/^class CartridgeX07 : public Cartridge$/;"	c
Cartridge_MD5	./src/emucore/Props.hxx	/^  Cartridge_MD5,$/;"	e	enum:PropertyType
Cartridge_Manufacturer	./src/emucore/Props.hxx	/^  Cartridge_Manufacturer,$/;"	e	enum:PropertyType
Cartridge_ModelNo	./src/emucore/Props.hxx	/^  Cartridge_ModelNo,$/;"	e	enum:PropertyType
Cartridge_Name	./src/emucore/Props.hxx	/^  Cartridge_Name,$/;"	e	enum:PropertyType
Cartridge_Note	./src/emucore/Props.hxx	/^  Cartridge_Note,$/;"	e	enum:PropertyType
Cartridge_Rarity	./src/emucore/Props.hxx	/^  Cartridge_Rarity,$/;"	e	enum:PropertyType
Cartridge_Sound	./src/emucore/Props.hxx	/^  Cartridge_Sound,$/;"	e	enum:PropertyType
Cartridge_Type	./src/emucore/Props.hxx	/^  Cartridge_Type,$/;"	e	enum:PropertyType
ChangeState	./src/emucore/Event.hxx	/^      ChangeState, LoadState, SaveState, TakeSnapshot, Quit,$/;"	e	enum:Event::Type
Cheat	./src/cheat/Cheat.hxx	/^    Cheat(OSystem* osystem, const string& name, const string& code)$/;"	f	class:Cheat
Cheat	./src/cheat/Cheat.hxx	/^class Cheat$/;"	c
CheatCodeDialog	./src/cheat/CheatCodeDialog.cxx	/^CheatCodeDialog::CheatCodeDialog(OSystem* osystem, DialogContainer* parent,$/;"	f	class:CheatCodeDialog
CheatCodeDialog	./src/cheat/CheatCodeDialog.hxx	/^class CheatCodeDialog : public Dialog$/;"	c
CheatCodeMap	./src/cheat/CheatManager.hxx	/^typedef map<string,string> CheatCodeMap;$/;"	t
CheatList	./src/cheat/CheatManager.hxx	/^typedef Common::Array<Cheat*> CheatList;$/;"	t
CheatManager	./src/cheat/CheatManager.cxx	/^CheatManager::CheatManager(OSystem* osystem)$/;"	f	class:CheatManager
CheatManager	./src/cheat/CheatManager.hxx	/^class CheatManager$/;"	c
CheckListWidget	./src/gui/CheckListWidget.cxx	/^CheckListWidget::CheckListWidget(GuiObject* boss, const GUI::Font& font,$/;"	f	class:CheckListWidget
CheckListWidget	./src/gui/CheckListWidget.hxx	/^class CheckListWidget : public ListWidget$/;"	c
CheckStyle	./src/gui/CheckListWidget.hxx	/^enum CheckStyle {$/;"	g
CheckboxArray	./src/gui/CheckListWidget.hxx	/^typedef Common::Array<CheckboxWidget*> CheckboxArray;$/;"	t
CheckboxWidget	./src/gui/Widget.cxx	/^CheckboxWidget::CheckboxWidget(GuiObject *boss, const GUI::Font& font,$/;"	f	class:CheckboxWidget
CheckboxWidget	./src/gui/Widget.hxx	/^class CheckboxWidget : public ButtonWidget$/;"	c
CheetahCheat	./src/cheat/CheetahCheat.cxx	/^CheetahCheat::CheetahCheat(OSystem* os, const string& name, const string& code)$/;"	f	class:CheetahCheat
CheetahCheat	./src/cheat/CheetahCheat.hxx	/^class CheetahCheat : public Cheat$/;"	c
Cleanup	./src/common/mainSDL.cxx	/^void Cleanup()$/;"	f
CmdMenuMode	./src/emucore/Event.hxx	/^      PauseMode, MenuMode, CmdMenuMode, DebuggerMode, LauncherMode,$/;"	e	enum:Event::Type
ColorWidget	./src/debugger/gui/ColorWidget.cxx	/^ColorWidget::ColorWidget(GuiObject* boss, const GUI::Font& font,$/;"	f	class:ColorWidget
ColorWidget	./src/debugger/gui/ColorWidget.hxx	/^class ColorWidget : public Widget, public CommandSender$/;"	c
Command	./src/debugger/DebuggerParser.hxx	/^    struct Command {$/;"	s	class:DebuggerParser
CommandDialog	./src/gui/CommandDialog.cxx	/^CommandDialog::CommandDialog(OSystem* osystem, DialogContainer* parent)$/;"	f	class:CommandDialog
CommandDialog	./src/gui/CommandDialog.hxx	/^class CommandDialog : public Dialog$/;"	c
CommandMenu	./src/gui/CommandMenu.cxx	/^CommandMenu::CommandMenu(OSystem* osystem)$/;"	f	class:CommandMenu
CommandMenu	./src/gui/CommandMenu.hxx	/^class CommandMenu : public DialogContainer$/;"	c
CommandReceiver	./src/gui/Command.hxx	/^class CommandReceiver$/;"	c
CommandSender	./src/gui/Command.hxx	/^    CommandSender(CommandReceiver* target)$/;"	f	class:CommandSender
CommandSender	./src/gui/Command.hxx	/^class CommandSender$/;"	c
Common	./src/common/Array.hxx	/^namespace Common {$/;"	n
Console	./src/emucore/Console.cxx	/^Console::Console(OSystem* osystem, Cartridge* cart, const Properties& props)$/;"	f	class:Console
Console	./src/emucore/Console.cxx	/^Console::Console(const Console& console)$/;"	f	class:Console
Console	./src/emucore/Console.hxx	/^class Console : public Serializable$/;"	c
ConsoleBlackWhite	./src/emucore/Event.hxx	/^      ConsoleOn, ConsoleOff, ConsoleColor, ConsoleBlackWhite,$/;"	e	enum:Event::Type
ConsoleColor	./src/emucore/Event.hxx	/^      ConsoleOn, ConsoleOff, ConsoleColor, ConsoleBlackWhite,$/;"	e	enum:Event::Type
ConsoleLeftDifficultyA	./src/emucore/Event.hxx	/^      ConsoleLeftDifficultyA, ConsoleLeftDifficultyB,$/;"	e	enum:Event::Type
ConsoleLeftDifficultyB	./src/emucore/Event.hxx	/^      ConsoleLeftDifficultyA, ConsoleLeftDifficultyB,$/;"	e	enum:Event::Type
ConsoleOff	./src/emucore/Event.hxx	/^      ConsoleOn, ConsoleOff, ConsoleColor, ConsoleBlackWhite,$/;"	e	enum:Event::Type
ConsoleOn	./src/emucore/Event.hxx	/^      ConsoleOn, ConsoleOff, ConsoleColor, ConsoleBlackWhite,$/;"	e	enum:Event::Type
ConsoleReset	./src/emucore/Event.hxx	/^      ConsoleSelect, ConsoleReset,$/;"	e	enum:Event::Type
ConsoleRightDifficultyA	./src/emucore/Event.hxx	/^      ConsoleRightDifficultyA, ConsoleRightDifficultyB,$/;"	e	enum:Event::Type
ConsoleRightDifficultyB	./src/emucore/Event.hxx	/^      ConsoleRightDifficultyA, ConsoleRightDifficultyB,$/;"	e	enum:Event::Type
ConsoleSelect	./src/emucore/Event.hxx	/^      ConsoleSelect, ConsoleReset,$/;"	e	enum:Event::Type
Console_LeftDifficulty	./src/emucore/Props.hxx	/^  Console_LeftDifficulty,$/;"	e	enum:PropertyType
Console_RightDifficulty	./src/emucore/Props.hxx	/^  Console_RightDifficulty,$/;"	e	enum:PropertyType
Console_SwapPorts	./src/emucore/Props.hxx	/^  Console_SwapPorts,$/;"	e	enum:PropertyType
Console_TelevisionType	./src/emucore/Props.hxx	/^  Console_TelevisionType,$/;"	e	enum:PropertyType
ConstExpression	./src/debugger/DebuggerExpressions.hxx	/^    ConstExpression(const int value) : Expression(0, 0), myValue(value) {}$/;"	f	class:ConstExpression
ConstExpression	./src/debugger/DebuggerExpressions.hxx	/^class ConstExpression : public Expression$/;"	c
ContextMenu	./src/debugger/gui/ContextMenu.cxx	/^ContextMenu::ContextMenu(GuiObject* boss, const GUI::Font& font)$/;"	f	class:ContextMenu
ContextMenu	./src/debugger/gui/ContextMenu.hxx	/^class ContextMenu : public Dialog, public CommandSender$/;"	c
Controller	./src/emucore/Control.cxx	/^Controller::Controller(Jack jack, const Event& event, Type type)$/;"	f	class:Controller
Controller	./src/emucore/Control.cxx	/^Controller::Controller(const Controller& c)$/;"	f	class:Controller
Controller	./src/emucore/Control.hxx	/^class Controller : public Serializable$/;"	c
Controller_Left	./src/emucore/Props.hxx	/^  Controller_Left,$/;"	e	enum:PropertyType
Controller_Right	./src/emucore/Props.hxx	/^  Controller_Right,$/;"	e	enum:PropertyType
Controller_SwapPaddles	./src/emucore/Props.hxx	/^  Controller_SwapPaddles,$/;"	e	enum:PropertyType
CpuDebug	./src/debugger/CpuDebug.cxx	/^CpuDebug::CpuDebug(Debugger* dbg, Console* console)$/;"	f	class:CpuDebug
CpuDebug	./src/debugger/CpuDebug.hxx	/^class CpuDebug : public DebuggerSystem$/;"	c
CpuMethodExpression	./src/debugger/DebuggerExpressions.hxx	/^    CpuMethodExpression(CPUDEBUG_INT_METHOD method) : Expression(0, 0), myMethod(method) {}$/;"	f	class:CpuMethodExpression
CpuMethodExpression	./src/debugger/DebuggerExpressions.hxx	/^class CpuMethodExpression : public Expression$/;"	c
CpuState	./src/debugger/CpuDebug.hxx	/^class CpuState : public DebuggerState$/;"	c
CpuWidget	./src/debugger/gui/CpuWidget.cxx	/^CpuWidget::CpuWidget(GuiObject* boss, const GUI::Font& font, int x, int y)$/;"	f	class:CpuWidget
CpuWidget	./src/debugger/gui/CpuWidget.hxx	/^class CpuWidget : public Widget, public CommandSender$/;"	c
D	./src/emucore/m6502/src/M6502.hxx	/^    bool D;     \/\/ D flag for processor status register$/;"	m	class:M6502
DATA_GRID_OPS_WIDGET_HXX	./src/debugger/gui/DataGridOpsWidget.hxx	23;"	d
DATA_GRID_WIDGET_HXX	./src/debugger/gui/DataGridWidget.hxx	23;"	d
DBtoLIN	./src/emucore/rsynth/opsynth.c	/^DBtoLIN(float dB)$/;"	f	file:
DEBUGGER_DIALOG_HXX	./src/debugger/gui/DebuggerDialog.hxx	23;"	d
DEBUGGER_EXPRESSIONS_HXX	./src/debugger/DebuggerExpressions.hxx	20;"	d
DEBUGGER_HXX	./src/debugger/Debugger.hxx	20;"	d
DEBUGGER_PARSER_HXX	./src/debugger/DebuggerParser.hxx	20;"	d
DEBUGGER_SYSTEM_HXX	./src/debugger/DebuggerSystem.hxx	20;"	d
DEBUG_ATARIVOX	./src/emucore/AtariVox.cxx	25;"	d	file:
DEBUG_EXP	./src/yacc/y.tab.c	120;"	d	file:
DEF_PROPS_HXX	./src/emucore/DefProps.hxx	2;"	d
DEF_PROPS_SIZE	./src/emucore/DefProps.hxx	11;"	d
DEREF	./src/yacc/y.tab.c	/^     DEREF = 273,$/;"	e	enum:yytokentype	file:
DEREF	./src/yacc/y.tab.c	104;"	d	file:
DESERIALIZER_HXX	./src/emucore/Deserializer.hxx	20;"	d
DEVICE_HXX	./src/emucore/m6502/src/Device.hxx	20;"	d
DIALOG_CONTAINER_HXX	./src/gui/DialogContainer.hxx	20;"	d
DIALOG_HXX	./src/gui/Dialog.hxx	23;"	d
DIR_SEPERATOR	./src/win32/SDL_win32_main.c	14;"	d	file:
DIR_SEPERATOR	./src/win32/SDL_win32_main.c	23;"	d	file:
DRIVING_HXX	./src/emucore/Driving.hxx	20;"	d
Darray_find	./src/emucore/rsynth/darray.c	/^Darray_find(darray_t * a, unsigned int n)$/;"	f
DataGridOpsWidget	./src/debugger/gui/DataGridOpsWidget.cxx	/^DataGridOpsWidget::DataGridOpsWidget(GuiObject* boss, const GUI::Font& font,$/;"	f	class:DataGridOpsWidget
DataGridOpsWidget	./src/debugger/gui/DataGridOpsWidget.hxx	/^class DataGridOpsWidget : public Widget, public CommandSender$/;"	c
DataGridWidget	./src/debugger/gui/DataGridWidget.cxx	/^DataGridWidget::DataGridWidget(GuiObject* boss, const GUI::Font& font,$/;"	f	class:DataGridWidget
DataGridWidget	./src/debugger/gui/DataGridWidget.hxx	/^class DataGridWidget : public EditableWidget$/;"	c
Debugger	./src/debugger/Debugger.cxx	/^Debugger::Debugger(OSystem* osystem)$/;"	f	class:Debugger
Debugger	./src/debugger/Debugger.hxx	/^class Debugger : public DialogContainer$/;"	c
DebuggerDialog	./src/debugger/gui/DebuggerDialog.cxx	/^DebuggerDialog::DebuggerDialog(OSystem* osystem, DialogContainer* parent,$/;"	f	class:DebuggerDialog
DebuggerDialog	./src/debugger/gui/DebuggerDialog.hxx	/^class DebuggerDialog : public Dialog$/;"	c
DebuggerMode	./src/emucore/Event.hxx	/^      PauseMode, MenuMode, CmdMenuMode, DebuggerMode, LauncherMode,$/;"	e	enum:Event::Type
DebuggerParser	./src/debugger/DebuggerParser.cxx	/^DebuggerParser::DebuggerParser(Debugger* d)$/;"	f	class:DebuggerParser
DebuggerParser	./src/debugger/DebuggerParser.hxx	/^class DebuggerParser$/;"	c
DebuggerState	./src/debugger/DebuggerSystem.hxx	/^    DebuggerState()  { }$/;"	f	class:DebuggerState
DebuggerState	./src/debugger/DebuggerSystem.hxx	/^class DebuggerState$/;"	c
DebuggerSystem	./src/debugger/DebuggerSystem.hxx	/^    DebuggerSystem(Debugger* dbg, Console* console) { myDebugger = dbg; }$/;"	f	class:DebuggerSystem
DebuggerSystem	./src/debugger/DebuggerSystem.hxx	/^class DebuggerSystem$/;"	c
Decode	./src/emucore/MD5.cxx	/^static void Decode(UINT4* output, const unsigned char* input, unsigned int len)$/;"	f	file:
DefProps	./src/emucore/DefProps.hxx	/^static const char* DefProps[DEF_PROPS_SIZE][21] = {$/;"	v
Deserializer	./src/emucore/Deserializer.cxx	/^Deserializer::Deserializer(void)$/;"	f	class:Deserializer
Deserializer	./src/emucore/Deserializer.hxx	/^class Deserializer$/;"	c
Device	./src/emucore/m6502/src/Device.cxx	/^Device::Device()$/;"	f	class:Device
Device	./src/emucore/m6502/src/Device.hxx	/^class Device : public Serializable$/;"	c
Dialog	./src/gui/Dialog.cxx	/^Dialog::Dialog(OSystem* instance, DialogContainer* parent,$/;"	f	class:Dialog
Dialog	./src/gui/Dialog.hxx	/^class Dialog : public GuiObject$/;"	c
DialogContainer	./src/gui/DialogContainer.cxx	/^DialogContainer::DialogContainer(OSystem* osystem)$/;"	f	class:DialogContainer
DialogContainer	./src/gui/DialogContainer.hxx	/^class DialogContainer$/;"	c
DigitalPin	./src/emucore/Control.hxx	/^    enum DigitalPin$/;"	g	class:Controller
Display_Format	./src/emucore/Props.hxx	/^  Display_Format,$/;"	e	enum:PropertyType
Display_Height	./src/emucore/Props.hxx	/^  Display_Height,$/;"	e	enum:PropertyType
Display_PPBlend	./src/emucore/Props.hxx	/^  Display_PPBlend,$/;"	e	enum:PropertyType
Display_Phosphor	./src/emucore/Props.hxx	/^  Display_Phosphor,$/;"	e	enum:PropertyType
Display_YStart	./src/emucore/Props.hxx	/^  Display_YStart,$/;"	e	enum:PropertyType
DivExpression	./src/debugger/DebuggerExpressions.hxx	/^    DivExpression(Expression* left, Expression* right) : Expression(left, right) {}$/;"	f	class:DivExpression
DivExpression	./src/debugger/DebuggerExpressions.hxx	/^class DivExpression : public Expression$/;"	c
Driving	./src/emucore/Control.hxx	/^      BoosterGrip, Driving, Keyboard, Paddles, Joystick,$/;"	e	enum:Controller::Type
Driving	./src/emucore/Driving.cxx	/^Driving::Driving(Jack jack, const Event& event)$/;"	f	class:Driving
Driving	./src/emucore/Driving.hxx	/^class Driving : public Controller$/;"	c
EDITABLE_WIDGET_HXX	./src/gui/EditableWidget.hxx	23;"	d
EDIT_TEXT_WIDGET_HXX	./src/gui/EditTextWidget.hxx	23;"	d
ENABL	./src/debugger/TIADebug.hxx	/^	ENABL,$/;"	e	enum:TIALabel
ENAM0	./src/debugger/TIADebug.hxx	/^	ENAM0,$/;"	e	enum:TIALabel
ENAM1	./src/debugger/TIADebug.hxx	/^	ENAM1,$/;"	e	enum:TIALabel
EQ	./src/yacc/y.tab.c	/^     EQ = 269,$/;"	e	enum:yytokentype	file:
EQ	./src/yacc/y.tab.c	100;"	d	file:
EQF_ANY	./src/debugger/Equate.hxx	/^  EQF_ANY   = 1 << 0,   \/\/ matches any type of label$/;"	e	enum:__anon57
EQF_RAM	./src/debugger/Equate.hxx	/^  EQF_RAM = EQF_WRITE | EQF_READ | EQF_USER$/;"	e	enum:__anon57
EQF_READ	./src/debugger/Equate.hxx	/^  EQF_READ  = 1 << 1,   \/\/ address can be read from$/;"	e	enum:__anon57
EQF_ROM	./src/debugger/Equate.hxx	/^  EQF_ROM = EQF_READ | EQF_USER,$/;"	e	enum:__anon57
EQF_USER	./src/debugger/Equate.hxx	/^  EQF_USER  = 1 << 3,   \/\/ equate is user-defined, not built-in$/;"	e	enum:__anon57
EQF_WRITE	./src/debugger/Equate.hxx	/^  EQF_WRITE = 1 << 2,   \/\/ address can be written to$/;"	e	enum:__anon57
EQUATE	./src/yacc/y.tab.c	/^     EQUATE = 260,$/;"	e	enum:yytokentype	file:
EQUATE	./src/yacc/y.tab.c	91;"	d	file:
EQUATELIST_HXX	./src/debugger/EquateList.hxx	20;"	d
EQUATE_HXX	./src/debugger/Equate.hxx	20;"	d
ERR	./src/yacc/y.tab.c	/^     ERR = 259,$/;"	e	enum:yytokentype	file:
ERR	./src/yacc/y.tab.c	90;"	d	file:
EVENTHANDLER_HXX	./src/emucore/EventHandler.hxx	20;"	d
EVENT_HXX	./src/emucore/Event.hxx	20;"	d
EVENT_LBUTTONDOWN	./src/emucore/EventHandler.hxx	/^  EVENT_LBUTTONDOWN,$/;"	e	enum:MouseButton
EVENT_LBUTTONUP	./src/emucore/EventHandler.hxx	/^  EVENT_LBUTTONUP,$/;"	e	enum:MouseButton
EVENT_MAPPING_WIDGET_HXX	./src/gui/EventMappingWidget.hxx	23;"	d
EVENT_RBUTTONDOWN	./src/emucore/EventHandler.hxx	/^  EVENT_RBUTTONDOWN,$/;"	e	enum:MouseButton
EVENT_RBUTTONUP	./src/emucore/EventHandler.hxx	/^  EVENT_RBUTTONUP,$/;"	e	enum:MouseButton
EVENT_WHEELDOWN	./src/emucore/EventHandler.hxx	/^  EVENT_WHEELDOWN,$/;"	e	enum:MouseButton
EVENT_WHEELUP	./src/emucore/EventHandler.hxx	/^  EVENT_WHEELUP$/;"	e	enum:MouseButton
EXPRESSION_HXX	./src/debugger/Expression.hxx	20;"	d
EditTextWidget	./src/gui/EditTextWidget.cxx	/^EditTextWidget::EditTextWidget(GuiObject* boss, const GUI::Font& font,$/;"	f	class:EditTextWidget
EditTextWidget	./src/gui/EditTextWidget.hxx	/^class EditTextWidget : public EditableWidget$/;"	c
EditableWidget	./src/gui/EditableWidget.cxx	/^EditableWidget::EditableWidget(GuiObject* boss, const GUI::Font& font,$/;"	f	class:EditableWidget
EditableWidget	./src/gui/EditableWidget.hxx	/^class EditableWidget : public Widget, public CommandSender$/;"	c
Elements	./src/emucore/rsynth/elements.c	/^Elm_t Elements[] = {$/;"	v
Emulation_HmoveBlanks	./src/emucore/Props.hxx	/^  Emulation_HmoveBlanks,$/;"	e	enum:PropertyType
Encode	./src/emucore/MD5.cxx	/^static void Encode(unsigned char* output, UINT4* input, unsigned int len)$/;"	f	file:
Entry	./src/gui/GameList.hxx	/^    class Entry {$/;"	c	class:GameList
Entry	./src/gui/PopUpWidget.hxx	/^  struct Entry {$/;"	s	class:PopUpWidget
EntryList	./src/gui/PopUpWidget.hxx	/^  typedef Common::Array<Entry> EntryList;$/;"	t	class:PopUpWidget
Ep_name	./src/emucore/rsynth/elements.c	/^char *Ep_name[nEparm] = {$/;"	v
EqualsExpression	./src/debugger/DebuggerExpressions.hxx	/^    EqualsExpression(Expression* left, Expression* right) : Expression(left, right) {}$/;"	f	class:EqualsExpression
EqualsExpression	./src/debugger/DebuggerExpressions.hxx	/^class EqualsExpression : public Expression$/;"	c
Equate	./src/debugger/Equate.hxx	/^struct Equate {$/;"	s
EquateExpression	./src/debugger/DebuggerExpressions.hxx	/^    EquateExpression(const string& label) : Expression(0, 0), myLabel(label) {}$/;"	f	class:EquateExpression
EquateExpression	./src/debugger/DebuggerExpressions.hxx	/^class EquateExpression : public Expression$/;"	c
EquateList	./src/debugger/EquateList.cxx	/^EquateList::EquateList()$/;"	f	class:EquateList
EquateList	./src/debugger/EquateList.hxx	/^class EquateList$/;"	c
Equates	./src/debugger/EquateList.hxx	/^    typedef Common::Array<Equate> Equates;$/;"	t	class:EquateList
Event	./src/emucore/Event.cxx	/^Event::Event()$/;"	f	class:Event
Event	./src/emucore/Event.hxx	/^class Event$/;"	c
EventHandler	./src/emucore/EventHandler.cxx	/^EventHandler::EventHandler(OSystem* osystem)$/;"	f	class:EventHandler
EventHandler	./src/emucore/EventHandler.hxx	/^class EventHandler$/;"	c
EventMappingWidget	./src/gui/EventMappingWidget.cxx	/^EventMappingWidget::EventMappingWidget(GuiObject* boss, const GUI::Font& font,$/;"	f	class:EventMappingWidget
EventMappingWidget	./src/gui/EventMappingWidget.hxx	/^class EventMappingWidget : public Widget, public CommandSender$/;"	c
EventMode	./src/emucore/EventHandler.hxx	/^enum EventMode {$/;"	g
Expression	./src/debugger/Expression.cxx	/^Expression::Expression(Expression* lhs, Expression* rhs)$/;"	f	class:Expression
Expression	./src/debugger/Expression.hxx	/^class Expression$/;"	c
ExpressionList	./src/emucore/m6502/src/M6502.hxx	/^typedef Common::Array<Expression*> ExpressionList;$/;"	t
F	./src/emucore/MD5.cxx	94;"	d	file:
F0Hz	./src/emucore/rsynth/opsynth.c	/^    float F0Hz;$/;"	m	struct:rsynth_private	file:
FF	./src/emucore/MD5.cxx	104;"	d	file:
FILE_SNAP_DIALOG_HXX	./src/gui/FileSnapDialog.hxx	23;"	d
FONT_HXX	./src/gui/Font.hxx	23;"	d
FORMAT_555	./src/wince/FrameBufferWinCE.hxx	33;"	d
FORMAT_565	./src/wince/FrameBufferWinCE.hxx	32;"	d
FORMAT_OTHER	./src/wince/FrameBufferWinCE.hxx	34;"	d
FPCHECK	./src/emucore/rsynth/opsynth.c	37;"	d	file:
FPCHECK	./src/emucore/rsynth/opsynth.c	45;"	d	file:
FRAMEBUFFER_GL_HXX	./src/common/FrameBufferGL.hxx	20;"	d
FRAMEBUFFER_GP2X_HXX	./src/gp2x/FrameBufferGP2X.hxx	20;"	d
FRAMEBUFFER_HXX	./src/emucore/FrameBuffer.hxx	20;"	d
FRAMEBUFFER_SOFT_HXX	./src/common/FrameBufferSoft.hxx	20;"	d
FRAMEBUFFER_WINCE_HXX	./src/wince/FrameBufferWinCE.hxx	21;"	d
FSList	./src/emucore/FSNode.hxx	/^class FSList : public Common::Array<FilesystemNode>$/;"	c
FS_NODE_HXX	./src/emucore/FSNode.hxx	23;"	d
FUNCTION	./src/yacc/y.tab.c	/^     FUNCTION = 263,$/;"	e	enum:yytokentype	file:
FUNCTION	./src/yacc/y.tab.c	94;"	d	file:
FalsePattern	./src/emucore/Deserializer.hxx	/^      FalsePattern = 0x01$/;"	e	enum:Deserializer::__anon21
FalsePattern	./src/emucore/Serializer.hxx	/^      FalsePattern = 0x01$/;"	e	enum:Serializer::__anon4
FatalErrorBit	./src/emucore/m6502/src/M6502.hxx	/^      FatalErrorBit = 0x02,$/;"	e	enum:M6502::__anon3
FileSnapDialog	./src/gui/FileSnapDialog.cxx	/^FileSnapDialog::FileSnapDialog($/;"	f	class:FileSnapDialog
FileSnapDialog	./src/gui/FileSnapDialog.hxx	/^class FileSnapDialog : public Dialog, public CommandSender$/;"	c
FilesystemNode	./src/emucore/FSNode.cxx	/^FilesystemNode::FilesystemNode()$/;"	f	class:FilesystemNode
FilesystemNode	./src/emucore/FSNode.cxx	/^FilesystemNode::FilesystemNode(const FilesystemNode &node)$/;"	f	class:FilesystemNode
FilesystemNode	./src/emucore/FSNode.cxx	/^FilesystemNode::FilesystemNode(const string& p)$/;"	f	class:FilesystemNode
FilesystemNode	./src/emucore/FSNode.hxx	/^class FilesystemNode : public AbstractFilesystemNode$/;"	c
Five	./src/emucore/Control.hxx	/^      Five, Nine$/;"	e	enum:Controller::AnalogPin
FixedStack	./src/gui/Stack.hxx	/^    FixedStack<T, MAX_SIZE>() : _size(0) {}$/;"	f	class:FixedStack
FixedStack	./src/gui/Stack.hxx	/^class FixedStack$/;"	c
Focus	./src/gui/Dialog.hxx	/^  struct Focus {$/;"	s	class:Dialog
FocusList	./src/gui/Dialog.hxx	/^  typedef Common::Array<Focus> FocusList;$/;"	t	class:Dialog
Font	./src/common/FrameBufferGL.hxx	/^class GUI::Font;$/;"	m	class:GUI	typeref:class:GUI::
Font	./src/common/FrameBufferSoft.hxx	/^class GUI::Font;$/;"	m	class:GUI	typeref:class:GUI::
Font	./src/gp2x/FrameBufferGP2X.hxx	/^class GUI::Font;$/;"	m	class:GUI	typeref:class:GUI::
Font	./src/gui/Font.cxx	/^Font::Font(FontDesc desc)$/;"	f	class:GUI::Font
Font	./src/gui/Font.hxx	/^class Font$/;"	c	namespace:GUI
FontDesc	./src/gui/Font.hxx	/^} FontDesc;$/;"	t	typeref:struct:__anon35
Four	./src/emucore/Control.hxx	/^      One, Two, Three, Four, Six$/;"	e	enum:Controller::DigitalPin
FrameBuffer	./src/emucore/FrameBuffer.cxx	/^FrameBuffer::FrameBuffer(OSystem* osystem)$/;"	f	class:FrameBuffer
FrameBuffer	./src/emucore/FrameBuffer.hxx	/^class FrameBuffer$/;"	c
FrameBufferGL	./src/common/FrameBufferGL.cxx	/^FrameBufferGL::FrameBufferGL(OSystem* osystem)$/;"	f	class:FrameBufferGL
FrameBufferGL	./src/common/FrameBufferGL.hxx	/^class FrameBufferGL : public FrameBuffer$/;"	c
FrameBufferGP2X	./src/gp2x/FrameBufferGP2X.cxx	/^FrameBufferGP2X::FrameBufferGP2X(OSystem* osystem)$/;"	f	class:FrameBufferGP2X
FrameBufferGP2X	./src/gp2x/FrameBufferGP2X.hxx	/^class FrameBufferGP2X : public FrameBuffer$/;"	c
FrameBufferSoft	./src/common/FrameBufferSoft.cxx	/^FrameBufferSoft::FrameBufferSoft(OSystem* osystem)$/;"	f	class:FrameBufferSoft
FrameBufferSoft	./src/common/FrameBufferSoft.hxx	/^class FrameBufferSoft : public FrameBuffer$/;"	c
FrameBufferWinCE	./src/wince/FrameBufferWinCE.hxx	/^class FrameBufferWinCE : public FrameBuffer$/;"	c
FrameStyle	./src/emucore/FrameBuffer.hxx	/^enum FrameStyle {$/;"	g
FreqDiv	./src/emucore/TIASnd.hxx	/^        FreqDiv()$/;"	f	class:TIASound::FreqDiv
FreqDiv	./src/emucore/TIASnd.hxx	/^    class FreqDiv$/;"	c	class:TIASound
Fry	./src/emucore/Event.hxx	/^      Fry, VolumeDecrease, VolumeIncrease,$/;"	e	enum:Event::Type
FunctionDefMap	./src/debugger/Debugger.hxx	/^typedef map<string,string> FunctionDefMap;$/;"	t
FunctionExpression	./src/debugger/DebuggerExpressions.hxx	/^    FunctionExpression(const string& label) : Expression(0, 0), myLabel(label) {}$/;"	f	class:FunctionExpression
FunctionExpression	./src/debugger/DebuggerExpressions.hxx	/^class FunctionExpression : public Expression$/;"	c
FunctionMap	./src/debugger/Debugger.hxx	/^typedef map<string,Expression*> FunctionMap;$/;"	t
G	./src/emucore/MD5.cxx	95;"	d	file:
GAME_INFO_DIALOG_HXX	./src/gui/GameInfoDialog.hxx	23;"	d
GAME_LIST_HXX	./src/gui/GameList.hxx	23;"	d
GETRAWFRAMEBUFFER	./src/wince/FrameBufferWinCE.hxx	30;"	d
GG	./src/emucore/MD5.cxx	109;"	d	file:
GRP0	./src/debugger/TIADebug.hxx	/^	GRP0,$/;"	e	enum:TIALabel
GRP1	./src/debugger/TIADebug.hxx	/^	GRP1,$/;"	e	enum:TIALabel
GTE	./src/yacc/y.tab.c	/^     GTE = 272,$/;"	e	enum:yytokentype	file:
GTE	./src/yacc/y.tab.c	103;"	d	file:
GUI	./src/emucore/FrameBuffer.hxx	/^namespace GUI {$/;"	n
GUI	./src/emucore/OSystem.hxx	/^namespace GUI {$/;"	n
GUI	./src/gui/ConsoleFont.hxx	/^namespace GUI {$/;"	n
GUI	./src/gui/Font.cxx	/^namespace GUI {$/;"	n	file:
GUI	./src/gui/Font.hxx	/^namespace GUI {$/;"	n
GUI	./src/gui/Rect.hxx	/^namespace GUI {$/;"	n
GUI	./src/gui/StellaFont.hxx	/^namespace GUI {$/;"	n
GUI	./src/gui/StellaLargeFont.hxx	/^namespace GUI {$/;"	n
GUI	./src/gui/Surface.cxx	/^namespace GUI {$/;"	n	file:
GUI	./src/gui/Surface.hxx	/^namespace GUI {$/;"	n
GUI_OBJECT_HXX	./src/gui/GuiObject.hxx	23;"	d
GUI_SURFACE_HXX	./src/gui/Surface.hxx	20;"	d
GameInfoDialog	./src/gui/GameInfoDialog.cxx	/^GameInfoDialog::GameInfoDialog($/;"	f	class:GameInfoDialog
GameInfoDialog	./src/gui/GameInfoDialog.hxx	/^class GameInfoDialog : public Dialog, public CommandSender$/;"	c
GameList	./src/gui/GameList.cxx	/^GameList::GameList()$/;"	f	class:GameList
GameList	./src/gui/GameList.hxx	/^class GameList$/;"	c
GetScreenExtents	./src/wince/FrameBufferWinCE.hxx	/^	void GetScreenExtents(uInt16 *x, uInt16 *y) { *x = scrwidth; *y = scrheight; return; }$/;"	f	class:FrameBufferWinCE
GreaterEqualsExpression	./src/debugger/DebuggerExpressions.hxx	/^    GreaterEqualsExpression(Expression* left, Expression* right) : Expression(left, right) {}$/;"	f	class:GreaterEqualsExpression
GreaterEqualsExpression	./src/debugger/DebuggerExpressions.hxx	/^class GreaterEqualsExpression : public Expression$/;"	c
GreaterExpression	./src/debugger/DebuggerExpressions.hxx	/^    GreaterExpression(Expression* left, Expression* right) : Expression(left, right) {}$/;"	f	class:GreaterExpression
GreaterExpression	./src/debugger/DebuggerExpressions.hxx	/^class GreaterExpression : public Expression$/;"	c
GuiObject	./src/gui/GuiObject.hxx	/^    GuiObject(OSystem* osystem, DialogContainer* parent, int x, int y, int w, int h)$/;"	f	class:GuiObject
GuiObject	./src/gui/GuiObject.hxx	/^class GuiObject : public CommandReceiver$/;"	c
H	./src/emucore/MD5.cxx	96;"	d	file:
HBLANK	./src/emucore/TIA.cxx	36;"	d	file:
HELP_DIALOG_HXX	./src/gui/HelpDialog.hxx	23;"	d
HH	./src/emucore/MD5.cxx	114;"	d	file:
HMBL	./src/debugger/TIADebug.hxx	/^	HMBL,$/;"	e	enum:TIALabel
HMCLR	./src/debugger/TIADebug.hxx	/^	HMCLR,$/;"	e	enum:TIALabel
HMM0	./src/debugger/TIADebug.hxx	/^	HMM0,$/;"	e	enum:TIALabel
HMM1	./src/debugger/TIADebug.hxx	/^	HMM1,$/;"	e	enum:TIALabel
HMOVE	./src/debugger/TIADebug.hxx	/^	HMOVE,$/;"	e	enum:TIALabel
HMP0	./src/debugger/TIADebug.hxx	/^	HMP0,   \/\/ $20$/;"	e	enum:TIALabel
HMP1	./src/debugger/TIADebug.hxx	/^	HMP1,$/;"	e	enum:TIALabel
HelpDialog	./src/gui/HelpDialog.cxx	/^HelpDialog::HelpDialog(OSystem* osystem, DialogContainer* parent,$/;"	f	class:HelpDialog
HelpDialog	./src/gui/HelpDialog.hxx	/^class HelpDialog : public Dialog$/;"	c
HiByteExpression	./src/debugger/DebuggerExpressions.hxx	/^    HiByteExpression(Expression* left) : Expression(left, 0) {}$/;"	f	class:HiByteExpression
HiByteExpression	./src/debugger/DebuggerExpressions.hxx	/^class HiByteExpression : public Expression$/;"	c
HitTrapInfo	./src/emucore/m6502/src/M6502.hxx	/^    struct HitTrapInfo {$/;"	s	class:M6502
I	./src/emucore/MD5.cxx	97;"	d	file:
I	./src/emucore/m6502/src/M6502.hxx	/^    bool I;     \/\/ I flag for processor status register$/;"	m	class:M6502
II	./src/emucore/MD5.cxx	119;"	d	file:
INPUT_BUFFER_SIZE	./src/emucore/SpeakJet.hxx	/^enum { INPUT_BUFFER_SIZE = 128 };$/;"	e	enum:__anon15
INPUT_DIALOG_HXX	./src/gui/InputDialog.hxx	20;"	d
INPUT_TEXT_DIALOG_HXX	./src/gui/InputTextDialog.hxx	23;"	d
IR	./src/emucore/m6502/src/M6502.hxx	/^    uInt8 IR;   \/\/ Instruction register$/;"	m	class:M6502
Immediate	./src/emucore/m6502/src/M6502.hxx	/^      Absolute, AbsoluteX, AbsoluteY, Immediate, Implied,$/;"	e	enum:M6502::AddressingMode
Implied	./src/emucore/m6502/src/M6502.hxx	/^      Absolute, AbsoluteX, AbsoluteY, Immediate, Implied,$/;"	e	enum:M6502::AddressingMode
Indirect	./src/emucore/m6502/src/M6502.hxx	/^      Indirect, IndirectX, IndirectY, Invalid, Relative,$/;"	e	enum:M6502::AddressingMode
IndirectX	./src/emucore/m6502/src/M6502.hxx	/^      Indirect, IndirectX, IndirectY, Invalid, Relative,$/;"	e	enum:M6502::AddressingMode
IndirectY	./src/emucore/m6502/src/M6502.hxx	/^      Indirect, IndirectX, IndirectY, Invalid, Relative,$/;"	e	enum:M6502::AddressingMode
InputDialog	./src/gui/InputDialog.cxx	/^InputDialog::InputDialog(OSystem* osystem, DialogContainer* parent,$/;"	f	class:InputDialog
InputDialog	./src/gui/InputDialog.hxx	/^class InputDialog : public Dialog$/;"	c
InputTextDialog	./src/gui/InputTextDialog.cxx	/^InputTextDialog::InputTextDialog(GuiObject* boss, const GUI::Font& font,$/;"	f	class:InputTextDialog
InputTextDialog	./src/gui/InputTextDialog.hxx	/^class InputTextDialog : public Dialog, public CommandSender$/;"	c
InputWidget	./src/gui/InputTextDialog.hxx	/^typedef Common::Array<EditTextWidget*> InputWidget;$/;"	t
Int16	./src/emucore/m6502/src/bspf/src/bspf.hxx	/^typedef signed short Int16;$/;"	t
Int32	./src/emucore/m6502/src/bspf/src/bspf.hxx	/^typedef signed int Int32;$/;"	t
Int8	./src/emucore/m6502/src/bspf/src/bspf.hxx	/^typedef signed char Int8;$/;"	t
IntArray	./src/common/Array.hxx	/^typedef Common::Array<int>   IntArray;$/;"	t
Invalid	./src/emucore/m6502/src/M6502.hxx	/^      Indirect, IndirectX, IndirectY, Invalid, Relative,$/;"	e	enum:M6502::AddressingMode
IsLandscape	./src/wince/FrameBufferWinCE.hxx	/^	bool IsLandscape(void) { return islandscape; }$/;"	f	class:FrameBufferWinCE
IsSmartphone	./src/wince/FrameBufferWinCE.hxx	/^	bool IsSmartphone(void) { return issmartphone; }$/;"	f	class:FrameBufferWinCE
IsSmartphoneLowRes	./src/wince/FrameBufferWinCE.hxx	/^	bool IsSmartphoneLowRes(void) { return (issmartphone && devres==SM_LOW); }$/;"	f	class:FrameBufferWinCE
IsVGA	./src/wince/FrameBufferWinCE.hxx	/^	bool IsVGA(void) { return (devres==VGA); }$/;"	f	class:FrameBufferWinCE
JOYSTICK_HXX	./src/emucore/Joystick.hxx	20;"	d
JOY_DEADZONE	./src/emucore/EventHandler.cxx	58;"	d	file:
JOY_DEADZONE	./src/gui/DialogContainer.cxx	26;"	d	file:
JT_NONE	./src/emucore/EventHandler.hxx	/^      JT_NONE,$/;"	e	enum:EventHandler::JoyType
JT_REGULAR	./src/emucore/EventHandler.hxx	/^      JT_REGULAR,$/;"	e	enum:EventHandler::JoyType
JT_STELLADAPTOR_LEFT	./src/emucore/EventHandler.hxx	/^      JT_STELLADAPTOR_LEFT,$/;"	e	enum:EventHandler::JoyType
JT_STELLADAPTOR_RIGHT	./src/emucore/EventHandler.hxx	/^      JT_STELLADAPTOR_RIGHT$/;"	e	enum:EventHandler::JoyType
Jack	./src/emucore/Control.hxx	/^    enum Jack$/;"	g	class:Controller
JoyHat	./src/emucore/EventHandler.hxx	/^    enum JoyHat {$/;"	g	class:EventHandler
JoyMouse	./src/emucore/EventHandler.hxx	/^    struct JoyMouse {   \/\/ Used for joystick to mouse emulation$/;"	s	class:EventHandler
JoyType	./src/emucore/EventHandler.hxx	/^    enum JoyType {$/;"	g	class:EventHandler
Joystick	./src/emucore/Control.hxx	/^      BoosterGrip, Driving, Keyboard, Paddles, Joystick,$/;"	e	enum:Controller::Type
Joystick	./src/emucore/Joystick.cxx	/^Joystick::Joystick(Jack jack, const Event& event)$/;"	f	class:Joystick
Joystick	./src/emucore/Joystick.hxx	/^class Joystick : public Controller$/;"	c
JoystickOneDown	./src/emucore/Event.hxx	/^      JoystickOneUp, JoystickOneDown, JoystickOneLeft, JoystickOneRight,$/;"	e	enum:Event::Type
JoystickOneFire1	./src/emucore/Event.hxx	/^        JoystickOneFire1, JoystickOneFire2, JoystickOneFire3,$/;"	e	enum:Event::Type
JoystickOneFire2	./src/emucore/Event.hxx	/^        JoystickOneFire1, JoystickOneFire2, JoystickOneFire3,$/;"	e	enum:Event::Type
JoystickOneFire3	./src/emucore/Event.hxx	/^        JoystickOneFire1, JoystickOneFire2, JoystickOneFire3,$/;"	e	enum:Event::Type
JoystickOneLeft	./src/emucore/Event.hxx	/^      JoystickOneUp, JoystickOneDown, JoystickOneLeft, JoystickOneRight,$/;"	e	enum:Event::Type
JoystickOneRight	./src/emucore/Event.hxx	/^      JoystickOneUp, JoystickOneDown, JoystickOneLeft, JoystickOneRight,$/;"	e	enum:Event::Type
JoystickOneUp	./src/emucore/Event.hxx	/^      JoystickOneUp, JoystickOneDown, JoystickOneLeft, JoystickOneRight,$/;"	e	enum:Event::Type
JoystickZeroDown	./src/emucore/Event.hxx	/^      JoystickZeroUp, JoystickZeroDown, JoystickZeroLeft, JoystickZeroRight,$/;"	e	enum:Event::Type
JoystickZeroFire1	./src/emucore/Event.hxx	/^        JoystickZeroFire1, JoystickZeroFire2, JoystickZeroFire3,$/;"	e	enum:Event::Type
JoystickZeroFire2	./src/emucore/Event.hxx	/^        JoystickZeroFire1, JoystickZeroFire2, JoystickZeroFire3,$/;"	e	enum:Event::Type
JoystickZeroFire3	./src/emucore/Event.hxx	/^        JoystickZeroFire1, JoystickZeroFire2, JoystickZeroFire3,$/;"	e	enum:Event::Type
JoystickZeroLeft	./src/emucore/Event.hxx	/^      JoystickZeroUp, JoystickZeroDown, JoystickZeroLeft, JoystickZeroRight,$/;"	e	enum:Event::Type
JoystickZeroRight	./src/emucore/Event.hxx	/^      JoystickZeroUp, JoystickZeroDown, JoystickZeroLeft, JoystickZeroRight,$/;"	e	enum:Event::Type
JoystickZeroUp	./src/emucore/Event.hxx	/^      JoystickZeroUp, JoystickZeroDown, JoystickZeroLeft, JoystickZeroRight,$/;"	e	enum:Event::Type
KEYBOARD_HXX	./src/emucore/Keyboard.hxx	20;"	d
Keyboard	./src/emucore/Control.hxx	/^      BoosterGrip, Driving, Keyboard, Paddles, Joystick,$/;"	e	enum:Controller::Type
Keyboard	./src/emucore/Keyboard.cxx	/^Keyboard::Keyboard(Jack jack, const Event& event)$/;"	f	class:Keyboard
Keyboard	./src/emucore/Keyboard.hxx	/^class Keyboard : public Controller$/;"	c
KeyboardOne0	./src/emucore/Event.hxx	/^      KeyboardOneStar, KeyboardOne0, KeyboardOnePound,$/;"	e	enum:Event::Type
KeyboardOne1	./src/emucore/Event.hxx	/^      KeyboardOne1, KeyboardOne2, KeyboardOne3,$/;"	e	enum:Event::Type
KeyboardOne2	./src/emucore/Event.hxx	/^      KeyboardOne1, KeyboardOne2, KeyboardOne3,$/;"	e	enum:Event::Type
KeyboardOne3	./src/emucore/Event.hxx	/^      KeyboardOne1, KeyboardOne2, KeyboardOne3,$/;"	e	enum:Event::Type
KeyboardOne4	./src/emucore/Event.hxx	/^      KeyboardOne4, KeyboardOne5, KeyboardOne6,$/;"	e	enum:Event::Type
KeyboardOne5	./src/emucore/Event.hxx	/^      KeyboardOne4, KeyboardOne5, KeyboardOne6,$/;"	e	enum:Event::Type
KeyboardOne6	./src/emucore/Event.hxx	/^      KeyboardOne4, KeyboardOne5, KeyboardOne6,$/;"	e	enum:Event::Type
KeyboardOne7	./src/emucore/Event.hxx	/^      KeyboardOne7, KeyboardOne8, KeyboardOne9,$/;"	e	enum:Event::Type
KeyboardOne8	./src/emucore/Event.hxx	/^      KeyboardOne7, KeyboardOne8, KeyboardOne9,$/;"	e	enum:Event::Type
KeyboardOne9	./src/emucore/Event.hxx	/^      KeyboardOne7, KeyboardOne8, KeyboardOne9,$/;"	e	enum:Event::Type
KeyboardOnePound	./src/emucore/Event.hxx	/^      KeyboardOneStar, KeyboardOne0, KeyboardOnePound,$/;"	e	enum:Event::Type
KeyboardOneStar	./src/emucore/Event.hxx	/^      KeyboardOneStar, KeyboardOne0, KeyboardOnePound,$/;"	e	enum:Event::Type
KeyboardZero0	./src/emucore/Event.hxx	/^      KeyboardZeroStar, KeyboardZero0, KeyboardZeroPound,$/;"	e	enum:Event::Type
KeyboardZero1	./src/emucore/Event.hxx	/^      KeyboardZero1, KeyboardZero2, KeyboardZero3,$/;"	e	enum:Event::Type
KeyboardZero2	./src/emucore/Event.hxx	/^      KeyboardZero1, KeyboardZero2, KeyboardZero3,$/;"	e	enum:Event::Type
KeyboardZero3	./src/emucore/Event.hxx	/^      KeyboardZero1, KeyboardZero2, KeyboardZero3,$/;"	e	enum:Event::Type
KeyboardZero4	./src/emucore/Event.hxx	/^      KeyboardZero4, KeyboardZero5, KeyboardZero6,$/;"	e	enum:Event::Type
KeyboardZero5	./src/emucore/Event.hxx	/^      KeyboardZero4, KeyboardZero5, KeyboardZero6,$/;"	e	enum:Event::Type
KeyboardZero6	./src/emucore/Event.hxx	/^      KeyboardZero4, KeyboardZero5, KeyboardZero6,$/;"	e	enum:Event::Type
KeyboardZero7	./src/emucore/Event.hxx	/^      KeyboardZero7, KeyboardZero8, KeyboardZero9,$/;"	e	enum:Event::Type
KeyboardZero8	./src/emucore/Event.hxx	/^      KeyboardZero7, KeyboardZero8, KeyboardZero9,$/;"	e	enum:Event::Type
KeyboardZero9	./src/emucore/Event.hxx	/^      KeyboardZero7, KeyboardZero8, KeyboardZero9,$/;"	e	enum:Event::Type
KeyboardZeroPound	./src/emucore/Event.hxx	/^      KeyboardZeroStar, KeyboardZero0, KeyboardZeroPound,$/;"	e	enum:Event::Type
KeyboardZeroStar	./src/emucore/Event.hxx	/^      KeyboardZeroStar, KeyboardZero0, KeyboardZeroPound,$/;"	e	enum:Event::Type
LAUNCHER_DIALOG_HXX	./src/gui/LauncherDialog.hxx	23;"	d
LAUNCHER_HXX	./src/gui/Launcher.hxx	20;"	d
LINES_PER_PAGE	./src/gui/AboutDialog.hxx	25;"	d
LINES_PER_PAGE	./src/gui/HelpDialog.hxx	34;"	d
LIST_WIDGET_HXX	./src/gui/ListWidget.hxx	23;"	d
LOG_AND	./src/yacc/y.tab.c	/^     LOG_AND = 265,$/;"	e	enum:yytokentype	file:
LOG_AND	./src/yacc/y.tab.c	96;"	d	file:
LOG_NOT	./src/yacc/y.tab.c	/^     LOG_NOT = 266,$/;"	e	enum:yytokentype	file:
LOG_NOT	./src/yacc/y.tab.c	97;"	d	file:
LOG_OR	./src/yacc/y.tab.c	/^     LOG_OR = 264,$/;"	e	enum:yytokentype	file:
LOG_OR	./src/yacc/y.tab.c	95;"	d	file:
LTE	./src/yacc/y.tab.c	/^     LTE = 271,$/;"	e	enum:yytokentype	file:
LTE	./src/yacc/y.tab.c	102;"	d	file:
LastPropType	./src/emucore/Props.hxx	/^  LastPropType$/;"	e	enum:PropertyType
LastType	./src/emucore/Event.hxx	/^      LastType$/;"	e	enum:Event::Type
Launcher	./src/gui/Launcher.cxx	/^Launcher::Launcher(OSystem* osystem)$/;"	f	class:Launcher
Launcher	./src/gui/Launcher.hxx	/^class Launcher : public DialogContainer$/;"	c
LauncherDialog	./src/gui/LauncherDialog.cxx	/^LauncherDialog::LauncherDialog(OSystem* osystem, DialogContainer* parent,$/;"	f	class:LauncherDialog
LauncherDialog	./src/gui/LauncherDialog.hxx	/^class LauncherDialog : public Dialog$/;"	c
LauncherMode	./src/emucore/Event.hxx	/^      PauseMode, MenuMode, CmdMenuMode, DebuggerMode, LauncherMode,$/;"	e	enum:Event::Type
Left	./src/emucore/Control.hxx	/^      Left, Right$/;"	e	enum:Controller::Jack
LessEqualsExpression	./src/debugger/DebuggerExpressions.hxx	/^    LessEqualsExpression(Expression* left, Expression* right) : Expression(left, right) {}$/;"	f	class:LessEqualsExpression
LessEqualsExpression	./src/debugger/DebuggerExpressions.hxx	/^class LessEqualsExpression : public Expression$/;"	c
LessExpression	./src/debugger/DebuggerExpressions.hxx	/^    LessExpression(Expression* left, Expression* right) : Expression(left, right) {}$/;"	f	class:LessExpression
LessExpression	./src/debugger/DebuggerExpressions.hxx	/^class LessExpression : public Expression$/;"	c
ListFile	./src/debugger/Debugger.hxx	/^    typedef multimap<string,string> ListFile;$/;"	t	class:Debugger
ListIter	./src/debugger/Debugger.hxx	/^    typedef ListFile::const_iterator ListIter;$/;"	t	class:Debugger
ListMode	./src/emucore/FSNode.hxx	/^    } ListMode;$/;"	t	class:AbstractFilesystemNode	typeref:enum:AbstractFilesystemNode::__anon18
ListWidget	./src/gui/ListWidget.cxx	/^ListWidget::ListWidget(GuiObject* boss, const GUI::Font& font,$/;"	f	class:ListWidget
ListWidget	./src/gui/ListWidget.hxx	/^class ListWidget : public EditableWidget$/;"	c
LoByteExpression	./src/debugger/DebuggerExpressions.hxx	/^    LoByteExpression(Expression* left) : Expression(left, 0) {}$/;"	f	class:LoByteExpression
LoByteExpression	./src/debugger/DebuggerExpressions.hxx	/^class LoByteExpression : public Expression$/;"	c
LoadState	./src/emucore/Event.hxx	/^      ChangeState, LoadState, SaveState, TakeSnapshot, Quit,$/;"	e	enum:Event::Type
LogAndExpression	./src/debugger/DebuggerExpressions.hxx	/^    LogAndExpression(Expression* left, Expression* right) : Expression(left, right) {}$/;"	f	class:LogAndExpression
LogAndExpression	./src/debugger/DebuggerExpressions.hxx	/^class LogAndExpression : public Expression$/;"	c
LogNotExpression	./src/debugger/DebuggerExpressions.hxx	/^    LogNotExpression(Expression* left) : Expression(left, 0) {}$/;"	f	class:LogNotExpression
LogNotExpression	./src/debugger/DebuggerExpressions.hxx	/^class LogNotExpression : public Expression$/;"	c
LogOrExpression	./src/debugger/DebuggerExpressions.hxx	/^    LogOrExpression(Expression* left, Expression* right) : Expression(left, right) {}$/;"	f	class:LogOrExpression
LogOrExpression	./src/debugger/DebuggerExpressions.hxx	/^class LogOrExpression : public Expression$/;"	c
M0	./src/debugger/TIADebug.hxx	/^  P0, P1, M0, M1, BL$/;"	e	enum:__anon78
M0	./src/emucore/TIA.hxx	/^      M0,   \/\/ Descriptor for Missle 0 Bit$/;"	e	enum:TIA::TIABit
M1	./src/debugger/TIADebug.hxx	/^  P0, P1, M0, M1, BL$/;"	e	enum:__anon78
M1	./src/emucore/TIA.hxx	/^      M1,   \/\/ Descriptor for Missle 1 Bit$/;"	e	enum:TIA::TIABit
M6502	./src/emucore/m6502/src/M6502.cxx	/^M6502::M6502(uInt32 systemCyclesPerProcessorCycle)$/;"	f	class:M6502
M6502	./src/emucore/m6502/src/M6502.hxx	/^class M6502$/;"	c
M6502HIGH_HXX	./src/emucore/m6502/src/M6502Hi.hxx	20;"	d
M6502High	./src/emucore/m6502/src/M6502Hi.cxx	/^M6502High::M6502High(uInt32 systemCyclesPerProcessorCycle)$/;"	f	class:M6502High
M6502High	./src/emucore/m6502/src/M6502Hi.hxx	/^class M6502High : public M6502$/;"	c
M6502LOW_HXX	./src/emucore/m6502/src/M6502Low.hxx	20;"	d
M6502Low	./src/emucore/m6502/src/M6502Low.cxx	/^M6502Low::M6502Low(uInt32 systemCyclesPerProcessorCycle)$/;"	f	class:M6502Low
M6502Low	./src/emucore/m6502/src/M6502Low.hxx	/^class M6502Low : public M6502$/;"	c
M6502_HXX	./src/emucore/m6502/src/M6502.hxx	20;"	d
M6532	./src/emucore/M6532.cxx	/^M6532::M6532(const Console& console)$/;"	f	class:M6532
M6532	./src/emucore/M6532.cxx	/^M6532::M6532(const M6532& c)$/;"	f	class:M6532
M6532	./src/emucore/M6532.hxx	/^class M6532 : public Device$/;"	c
M6532_HXX	./src/emucore/M6532.hxx	20;"	d
MAX_ROM_SIZE	./src/emucore/OSystem.cxx	55;"	d	file:
MD5	./src/emucore/MD5.cxx	/^string MD5(const uInt8* buffer, uInt32 length)$/;"	f
MD5Final	./src/emucore/MD5.cxx	/^static void MD5Final(unsigned char digest[16], MD5_CTX* context)$/;"	f	file:
MD5FromFile	./src/emucore/OSystem.cxx	/^string OSystem::MD5FromFile(const string& filename)$/;"	f	class:OSystem
MD5Init	./src/emucore/MD5.cxx	/^static void MD5Init(MD5_CTX* context)$/;"	f	file:
MD5Transform	./src/emucore/MD5.cxx	/^static void MD5Transform(UINT4 state[4], const unsigned char block[64])$/;"	f	file:
MD5Update	./src/emucore/MD5.cxx	/^static void MD5Update(MD5_CTX* context, const unsigned char* input, $/;"	f	file:
MD5_CTX	./src/emucore/MD5.cxx	/^} MD5_CTX;$/;"	t	typeref:struct:__anon19	file:
MD5_HXX	./src/emucore/MD5.hxx	20;"	d
MD5_memcpy	./src/emucore/MD5.cxx	/^static void MD5_memcpy(POINTER output, POINTER input, unsigned int len)$/;"	f	file:
MD5_memset	./src/emucore/MD5.cxx	/^static void MD5_memset(POINTER output, int value, unsigned int len)$/;"	f	file:
MEDIASOURCE_HXX	./src/emucore/MediaSrc.hxx	20;"	d
MEDIA_FACTORY_HXX	./src/emucore/MediaFactory.hxx	20;"	d
MENU_HXX	./src/gui/Menu.hxx	20;"	d
METHOD	./src/debugger/DebuggerParser.hxx	/^    typedef void (DebuggerParser::*METHOD)();$/;"	t	class:DebuggerParser
MOVIE_HEADER	./src/emucore/StateManager.cxx	33;"	d	file:
MaskableInterruptBit	./src/emucore/m6502/src/M6502.hxx	/^      MaskableInterruptBit = 0x04,$/;"	e	enum:M6502::__anon3
MediaFactory	./src/emucore/MediaFactory.hxx	/^class MediaFactory$/;"	c
MediaSource	./src/emucore/MediaSrc.cxx	/^MediaSource::MediaSource()$/;"	f	class:MediaSource
MediaSource	./src/emucore/MediaSrc.cxx	/^MediaSource::MediaSource(const MediaSource&)$/;"	f	class:MediaSource
MediaSource	./src/emucore/MediaSrc.hxx	/^class MediaSource$/;"	c
Menu	./src/gui/Menu.cxx	/^Menu::Menu(OSystem* osystem)$/;"	f	class:Menu
Menu	./src/gui/Menu.hxx	/^class Menu : public DialogContainer$/;"	c
MenuMode	./src/emucore/Event.hxx	/^      PauseMode, MenuMode, CmdMenuMode, DebuggerMode, LauncherMode,$/;"	e	enum:Event::Type
Message	./src/emucore/FrameBuffer.hxx	/^    struct Message {$/;"	s	class:FrameBuffer
MessagePosition	./src/emucore/FrameBuffer.hxx	/^enum MessagePosition {$/;"	g
MinusExpression	./src/debugger/DebuggerExpressions.hxx	/^    MinusExpression(Expression* left, Expression* right) : Expression(left, right) {}$/;"	f	class:MinusExpression
MinusExpression	./src/debugger/DebuggerExpressions.hxx	/^class MinusExpression : public Expression$/;"	c
ModExpression	./src/debugger/DebuggerExpressions.hxx	/^    ModExpression(Expression* left, Expression* right) : Expression(left, right) {}$/;"	f	class:ModExpression
ModExpression	./src/debugger/DebuggerExpressions.hxx	/^class ModExpression : public Expression$/;"	c
Mode	./src/emucore/StateManager.hxx	/^    enum Mode {$/;"	g	class:StateManager
MouseAxisXValue	./src/emucore/Event.hxx	/^      MouseAxisXValue, MouseAxisYValue, MouseButtonValue,$/;"	e	enum:Event::Type
MouseAxisYValue	./src/emucore/Event.hxx	/^      MouseAxisXValue, MouseAxisYValue, MouseButtonValue,$/;"	e	enum:Event::Type
MouseButton	./src/emucore/EventHandler.hxx	/^enum MouseButton {$/;"	g
MouseButtonValue	./src/emucore/Event.hxx	/^      MouseAxisXValue, MouseAxisYValue, MouseButtonValue,$/;"	e	enum:Event::Type
MultExpression	./src/debugger/DebuggerExpressions.hxx	/^    MultExpression(Expression* left, Expression* right) : Expression(left, right) {}$/;"	f	class:MultExpression
MultExpression	./src/debugger/DebuggerExpressions.hxx	/^class MultExpression : public Expression$/;"	c
N	./src/emucore/m6502/src/M6502.hxx	/^    bool N;     \/\/ N flag for processor status register$/;"	m	class:M6502
NE	./src/yacc/y.tab.c	/^     NE = 270,$/;"	e	enum:yytokentype	file:
NE	./src/yacc/y.tab.c	101;"	d	file:
NULLDEVICE_HXX	./src/emucore/m6502/src/NullDev.hxx	20;"	d
NUMBER	./src/yacc/y.tab.c	/^     NUMBER = 258,$/;"	e	enum:yytokentype	file:
NUMBER	./src/yacc/y.tab.c	89;"	d	file:
NUSIZ0	./src/debugger/TIADebug.hxx	/^	NUSIZ0,$/;"	e	enum:TIALabel
NUSIZ1	./src/debugger/TIADebug.hxx	/^	NUSIZ1,$/;"	e	enum:TIALabel
Nine	./src/emucore/Control.hxx	/^      Five, Nine$/;"	e	enum:Controller::AnalogPin
NoType	./src/emucore/Event.hxx	/^      NoType,$/;"	e	enum:Event::Type
NonmaskableInterruptBit	./src/emucore/m6502/src/M6502.hxx	/^      NonmaskableInterruptBit = 0x08$/;"	e	enum:M6502::__anon3
NotEqualsExpression	./src/debugger/DebuggerExpressions.hxx	/^    NotEqualsExpression(Expression* left, Expression* right) : Expression(left, right) {}$/;"	f	class:NotEqualsExpression
NotEqualsExpression	./src/debugger/DebuggerExpressions.hxx	/^class NotEqualsExpression : public Expression$/;"	c
NullDevice	./src/emucore/m6502/src/NullDev.cxx	/^NullDevice::NullDevice()$/;"	f	class:NullDevice
NullDevice	./src/emucore/m6502/src/NullDev.hxx	/^class NullDevice : public Device$/;"	c
NumberingMode	./src/gui/StringListWidget.hxx	/^enum NumberingMode {$/;"	g
OPTIONS_DIALOG_HXX	./src/gui/OptionsDialog.hxx	23;"	d
OSYSTEM_GP2X_HXX	./src/gp2x/OSystemGP2X.hxx	21;"	d
OSYSTEM_HXX	./src/emucore/OSystem.hxx	20;"	d
OSYSTEM_MACOSX_HXX	./src/macosx/OSystemMACOSX.hxx	20;"	d
OSYSTEM_UNIX_HXX	./src/unix/OSystemUNIX.hxx	20;"	d
OSYSTEM_WIN32_HXX	./src/win32/OSystemWin32.hxx	20;"	d
OSYSTEM_WINCE_HXX	./src/wince/OSystemWinCE.hxx	21;"	d
OSystem	./src/emucore/OSystem.cxx	/^OSystem::OSystem()$/;"	f	class:OSystem
OSystem	./src/emucore/OSystem.cxx	/^OSystem::OSystem(const OSystem& osystem)$/;"	f	class:OSystem
OSystem	./src/emucore/OSystem.hxx	/^class OSystem$/;"	c
OSystemGP2X	./src/gp2x/OSystemGP2X.cxx	/^OSystemGP2X::OSystemGP2X() : OSystem()$/;"	f	class:OSystemGP2X
OSystemGP2X	./src/gp2x/OSystemGP2X.hxx	/^class OSystemGP2X : public OSystem$/;"	c
OSystemMACOSX	./src/macosx/OSystemMACOSX.cxx	/^OSystemMACOSX::OSystemMACOSX()$/;"	f	class:OSystemMACOSX
OSystemMACOSX	./src/macosx/OSystemMACOSX.hxx	/^class OSystemMACOSX : public OSystem$/;"	c
OSystemUNIX	./src/unix/OSystemUNIX.cxx	/^OSystemUNIX::OSystemUNIX()$/;"	f	class:OSystemUNIX
OSystemUNIX	./src/unix/OSystemUNIX.hxx	/^class OSystemUNIX : public OSystem$/;"	c
OSystemWin32	./src/win32/OSystemWin32.cxx	/^OSystemWin32::OSystemWin32()$/;"	f	class:OSystemWin32
OSystemWin32	./src/win32/OSystemWin32.hxx	/^class OSystemWin32 : public OSystem$/;"	c
OSystemWinCE	./src/wince/OSystemWinCE.cxx	/^OSystemWinCE::OSystemWinCE(const string& path) : OSystem()$/;"	f	class:OSystemWinCE
OSystemWinCE	./src/wince/OSystemWinCE.hxx	/^class OSystemWinCE : public OSystem$/;"	c
OUTPUT_BUFFER_SIZE	./src/emucore/SpeakJet.hxx	/^enum { OUTPUT_BUFFER_SIZE = 128 };$/;"	e	enum:__anon16
One	./src/emucore/Control.hxx	/^      One, Two, Three, Four, Six$/;"	e	enum:Controller::DigitalPin
OptionsDialog	./src/gui/OptionsDialog.cxx	/^OptionsDialog::OptionsDialog(OSystem* osystem, DialogContainer* parent,$/;"	f	class:OptionsDialog
OptionsDialog	./src/gui/OptionsDialog.hxx	/^class OptionsDialog : public Dialog$/;"	c
OutOfMemory	./src/win32/SDL_win32_main.c	/^static BOOL OutOfMemory(void)$/;"	f	file:
P0	./src/debugger/TIADebug.hxx	/^  P0, P1, M0, M1, BL$/;"	e	enum:__anon78
P0	./src/emucore/TIA.hxx	/^      P0,   \/\/ Descriptor for Player 0 Bit$/;"	e	enum:TIA::TIABit
P1	./src/debugger/TIADebug.hxx	/^  P0, P1, M0, M1, BL$/;"	e	enum:__anon78
P1	./src/emucore/TIA.hxx	/^      P1,   \/\/ Descriptor for Player 1 Bit$/;"	e	enum:TIA::TIABit
PACKEDBITARRAY_HXX	./src/debugger/PackedBitArray.hxx	20;"	d
PADDING	./src/emucore/MD5.cxx	/^static unsigned char PADDING[64] = {$/;"	v	file:
PADDLES_HXX	./src/emucore/Paddles.hxx	20;"	d
PARSER_HXX	./src/yacc/YaccParser.hxx	23;"	d
PC	./src/debugger/CpuDebug.hxx	/^    int PC, SP, PS, A, X, Y;$/;"	m	class:CpuState
PC	./src/emucore/m6502/src/M6502.hxx	/^    uInt16 PC;  \/\/ Program Counter$/;"	m	class:M6502
PF	./src/emucore/TIA.hxx	/^      PF    \/\/ Descriptor for Playfield Bit$/;"	e	enum:TIA::TIABit
PF0	./src/debugger/TIADebug.hxx	/^	PF0,$/;"	e	enum:TIALabel
PF1	./src/debugger/TIADebug.hxx	/^	PF1,$/;"	e	enum:TIALabel
PF2	./src/debugger/TIADebug.hxx	/^	PF2,$/;"	e	enum:TIALabel
PHONE	./src/emucore/rsynth/phones.c	32;"	d	file:
PHONE	./src/emucore/rsynth/phones.c	38;"	d	file:
PHONE	./src/emucore/rsynth/phones.c	40;"	d	file:
PHONE	./src/emucore/rsynth/phones.c	45;"	d	file:
PHONE	./src/emucore/rsynth/phones.c	47;"	d	file:
PHONE	./src/emucore/rsynth/phones.c	52;"	d	file:
PI	./src/emucore/rsynth/opsynth.c	26;"	d	file:
POINTER	./src/emucore/MD5.cxx	/^typedef unsigned char* POINTER;$/;"	t	file:
POPUP_WIDGET_HXX	./src/gui/PopUpWidget.hxx	23;"	d
POSIXFilesystemNode	./src/gp2x/FSNodeGP2X.cxx	/^POSIXFilesystemNode::POSIXFilesystemNode()$/;"	f	class:POSIXFilesystemNode
POSIXFilesystemNode	./src/gp2x/FSNodeGP2X.cxx	/^POSIXFilesystemNode::POSIXFilesystemNode(const POSIXFilesystemNode* node)$/;"	f	class:POSIXFilesystemNode
POSIXFilesystemNode	./src/gp2x/FSNodeGP2X.cxx	/^POSIXFilesystemNode::POSIXFilesystemNode(const string& p)$/;"	f	class:POSIXFilesystemNode
POSIXFilesystemNode	./src/gp2x/FSNodeGP2X.cxx	/^class POSIXFilesystemNode : public AbstractFilesystemNode$/;"	c	file:
POSIXFilesystemNode	./src/unix/FSNodePOSIX.cxx	/^POSIXFilesystemNode::POSIXFilesystemNode()$/;"	f	class:POSIXFilesystemNode
POSIXFilesystemNode	./src/unix/FSNodePOSIX.cxx	/^POSIXFilesystemNode::POSIXFilesystemNode(const POSIXFilesystemNode* node)$/;"	f	class:POSIXFilesystemNode
POSIXFilesystemNode	./src/unix/FSNodePOSIX.cxx	/^POSIXFilesystemNode::POSIXFilesystemNode(const string& p)$/;"	f	class:POSIXFilesystemNode
POSIXFilesystemNode	./src/unix/FSNodePOSIX.cxx	/^class POSIXFilesystemNode : public AbstractFilesystemNode$/;"	c	file:
PROGRESS_DIALOG_HXX	./src/gui/ProgressDialog.hxx	23;"	d
PROMPT	./src/debugger/gui/PromptWidget.cxx	36;"	d	file:
PROMPT_WIDGET_HXX	./src/debugger/gui/PromptWidget.hxx	23;"	d
PROPERTIES_HXX	./src/emucore/Props.hxx	20;"	d
PROPERTIES_SET_HXX	./src/emucore/PropsSet.hxx	20;"	d
PS	./src/debugger/CpuDebug.hxx	/^    int PC, SP, PS, A, X, Y;$/;"	m	class:CpuState
PS	./src/emucore/m6502/src/M6502.cxx	/^uInt8 M6502::PS() const$/;"	f	class:M6502
PS	./src/emucore/m6502/src/M6502.cxx	/^void M6502::PS(uInt8 ps)$/;"	f	class:M6502
PSbits	./src/debugger/CpuDebug.hxx	/^    BoolArray PSbits;$/;"	m	class:CpuState
PVT	./src/emucore/rsynth/opsynth.c	32;"	d	file:
PackedBitArray	./src/debugger/PackedBitArray.cxx	/^PackedBitArray::PackedBitArray(int length) {$/;"	f	class:PackedBitArray
PackedBitArray	./src/debugger/PackedBitArray.hxx	/^class PackedBitArray {$/;"	c
PaddleOneAnalog	./src/emucore/Event.hxx	/^      PaddleOneDecrease, PaddleOneIncrease, PaddleOneAnalog, PaddleOneFire,$/;"	e	enum:Event::Type
PaddleOneDecrease	./src/emucore/Event.hxx	/^      PaddleOneDecrease, PaddleOneIncrease, PaddleOneAnalog, PaddleOneFire,$/;"	e	enum:Event::Type
PaddleOneFire	./src/emucore/Event.hxx	/^      PaddleOneDecrease, PaddleOneIncrease, PaddleOneAnalog, PaddleOneFire,$/;"	e	enum:Event::Type
PaddleOneIncrease	./src/emucore/Event.hxx	/^      PaddleOneDecrease, PaddleOneIncrease, PaddleOneAnalog, PaddleOneFire,$/;"	e	enum:Event::Type
PaddleThreeAnalog	./src/emucore/Event.hxx	/^      PaddleThreeDecrease, PaddleThreeIncrease, PaddleThreeAnalog, PaddleThreeFire,$/;"	e	enum:Event::Type
PaddleThreeDecrease	./src/emucore/Event.hxx	/^      PaddleThreeDecrease, PaddleThreeIncrease, PaddleThreeAnalog, PaddleThreeFire,$/;"	e	enum:Event::Type
PaddleThreeFire	./src/emucore/Event.hxx	/^      PaddleThreeDecrease, PaddleThreeIncrease, PaddleThreeAnalog, PaddleThreeFire,$/;"	e	enum:Event::Type
PaddleThreeIncrease	./src/emucore/Event.hxx	/^      PaddleThreeDecrease, PaddleThreeIncrease, PaddleThreeAnalog, PaddleThreeFire,$/;"	e	enum:Event::Type
PaddleTwoAnalog	./src/emucore/Event.hxx	/^      PaddleTwoDecrease, PaddleTwoIncrease, PaddleTwoAnalog, PaddleTwoFire,$/;"	e	enum:Event::Type
PaddleTwoDecrease	./src/emucore/Event.hxx	/^      PaddleTwoDecrease, PaddleTwoIncrease, PaddleTwoAnalog, PaddleTwoFire,$/;"	e	enum:Event::Type
PaddleTwoFire	./src/emucore/Event.hxx	/^      PaddleTwoDecrease, PaddleTwoIncrease, PaddleTwoAnalog, PaddleTwoFire,$/;"	e	enum:Event::Type
PaddleTwoIncrease	./src/emucore/Event.hxx	/^      PaddleTwoDecrease, PaddleTwoIncrease, PaddleTwoAnalog, PaddleTwoFire,$/;"	e	enum:Event::Type
PaddleZeroAnalog	./src/emucore/Event.hxx	/^      PaddleZeroDecrease, PaddleZeroIncrease, PaddleZeroAnalog, PaddleZeroFire,$/;"	e	enum:Event::Type
PaddleZeroDecrease	./src/emucore/Event.hxx	/^      PaddleZeroDecrease, PaddleZeroIncrease, PaddleZeroAnalog, PaddleZeroFire,$/;"	e	enum:Event::Type
PaddleZeroFire	./src/emucore/Event.hxx	/^      PaddleZeroDecrease, PaddleZeroIncrease, PaddleZeroAnalog, PaddleZeroFire,$/;"	e	enum:Event::Type
PaddleZeroIncrease	./src/emucore/Event.hxx	/^      PaddleZeroDecrease, PaddleZeroIncrease, PaddleZeroAnalog, PaddleZeroFire,$/;"	e	enum:Event::Type
Paddles	./src/emucore/Control.hxx	/^      BoosterGrip, Driving, Keyboard, Paddles, Joystick,$/;"	e	enum:Controller::Type
Paddles	./src/emucore/Paddles.cxx	/^Paddles::Paddles(Jack jack, const Event& event, bool swap)$/;"	f	class:Paddles
Paddles	./src/emucore/Paddles.hxx	/^class Paddles : public Controller$/;"	c
PageAccess	./src/emucore/m6502/src/System.hxx	/^    struct PageAccess$/;"	s	class:System
ParseCommandLine	./src/win32/SDL_win32_main.c	/^static int ParseCommandLine(char *cmdline, char **argv)$/;"	f	file:
Part	./src/gui/ScrollBarWidget.hxx	/^    } Part;$/;"	t	class:ScrollBarWidget	typeref:enum:ScrollBarWidget::__anon34
PauseMode	./src/emucore/Event.hxx	/^      PauseMode, MenuMode, CmdMenuMode, DebuggerMode, LauncherMode,$/;"	e	enum:Event::Type
PlusExpression	./src/debugger/DebuggerExpressions.hxx	/^    PlusExpression(Expression* left, Expression* right) : Expression(left, right) {}$/;"	f	class:PlusExpression
PlusExpression	./src/debugger/DebuggerExpressions.hxx	/^class PlusExpression : public Expression$/;"	c
Point	./src/gui/Rect.hxx	/^  Point() : x(0), y(0) {};$/;"	f	struct:GUI::Point
Point	./src/gui/Rect.hxx	/^  Point(const Point & p) : x(p.x), y(p.y) {};$/;"	f	struct:GUI::Point
Point	./src/gui/Rect.hxx	/^  explicit Point(int x1, int y1) : x(x1), y(y1) {};$/;"	f	struct:GUI::Point
Point	./src/gui/Rect.hxx	/^struct Point$/;"	s	namespace:GUI
PopUpDialog	./src/gui/PopUpWidget.cxx	/^PopUpDialog::PopUpDialog(PopUpWidget* boss, int clickX, int clickY)$/;"	f	class:PopUpDialog
PopUpDialog	./src/gui/PopUpWidget.hxx	/^class PopUpDialog : public Dialog$/;"	c
PopUpWidget	./src/gui/PopUpWidget.cxx	/^PopUpWidget::PopUpWidget(GuiObject* boss, const GUI::Font& font,$/;"	f	class:PopUpWidget
PopUpWidget	./src/gui/PopUpWidget.hxx	/^class PopUpWidget : public Widget, public CommandSender$/;"	c
PriorityBit	./src/emucore/TIA.hxx	/^      PriorityBit = 0x080     \/\/ Bit for Playfield priority$/;"	e	enum:TIA::__anon6
ProgressDialog	./src/gui/ProgressDialog.cxx	/^ProgressDialog::ProgressDialog(GuiObject* boss, const GUI::Font& font,$/;"	f	class:ProgressDialog
ProgressDialog	./src/gui/ProgressDialog.hxx	/^class ProgressDialog : public Dialog$/;"	c
PromptWidget	./src/debugger/gui/PromptWidget.cxx	/^PromptWidget::PromptWidget(GuiObject* boss, const GUI::Font& font,$/;"	f	class:PromptWidget
PromptWidget	./src/debugger/gui/PromptWidget.hxx	/^class PromptWidget : public Widget, public CommandSender$/;"	c
PropType	./src/gui/GameInfoDialog.hxx	/^    struct PropType {$/;"	s	class:GameInfoDialog
Properties	./src/emucore/Props.cxx	/^Properties::Properties()$/;"	f	class:Properties
Properties	./src/emucore/Props.cxx	/^Properties::Properties(const Properties& properties)$/;"	f	class:Properties
Properties	./src/emucore/Props.hxx	/^class Properties$/;"	c
PropertiesSet	./src/emucore/PropsSet.cxx	/^PropertiesSet::PropertiesSet(OSystem* osystem)$/;"	f	class:PropertiesSet
PropertiesSet	./src/emucore/PropsSet.hxx	/^class PropertiesSet$/;"	c
PropertyType	./src/emucore/Props.hxx	/^enum PropertyType {$/;"	g
QVGA	./src/wince/FrameBufferWinCE.hxx	/^	enum {SM_LOW, QVGA, VGA} devres;$/;"	e	enum:FrameBufferWinCE::__anon22
Quit	./src/emucore/Event.hxx	/^      ChangeState, LoadState, SaveState, TakeSnapshot, Quit,$/;"	e	enum:Event::Type
RAM_CHEAT_HXX	./src/cheat/RamCheat.hxx	20;"	d
RAM_DEBUG_HXX	./src/debugger/RamDebug.hxx	20;"	d
RAM_WIDGET_HXX	./src/debugger/gui/RamWidget.hxx	23;"	d
RANDOM_HXX	./src/emucore/Random.hxx	20;"	d
RECTLIST_HXX	./src/common/RectList.hxx	20;"	d
RECT_HXX	./src/gui/Rect.hxx	23;"	d
REFP0	./src/debugger/TIADebug.hxx	/^	REFP0,$/;"	e	enum:TIALabel
REFP1	./src/debugger/TIADebug.hxx	/^	REFP1,$/;"	e	enum:TIALabel
RES	./src/emucore/rsynth/opsynth.c	33;"	d	file:
RESBL	./src/debugger/TIADebug.hxx	/^	RESBL,$/;"	e	enum:TIALabel
RESM0	./src/debugger/TIADebug.hxx	/^	RESM0,$/;"	e	enum:TIALabel
RESM1	./src/debugger/TIADebug.hxx	/^	RESM1,$/;"	e	enum:TIALabel
RESMP0	./src/debugger/TIADebug.hxx	/^	RESMP0, \/\/ $28$/;"	e	enum:TIALabel
RESMP1	./src/debugger/TIADebug.hxx	/^	RESMP1,$/;"	e	enum:TIALabel
RESP0	./src/debugger/TIADebug.hxx	/^	RESP0,  \/\/ $10$/;"	e	enum:TIALabel
RESP1	./src/debugger/TIADebug.hxx	/^	RESP1,$/;"	e	enum:TIALabel
RGCHECK	./src/emucore/rsynth/opsynth.c	53;"	d	file:
RGCHECK	./src/emucore/rsynth/opsynth.c	64;"	d	file:
ROM_AUDIT_DIALOG_HXX	./src/gui/RomAuditDialog.hxx	23;"	d
ROM_INFO_WIDGET_HXX	./src/gui/RomInfoWidget.hxx	20;"	d
ROM_LIST_WIDGET_HXX	./src/debugger/gui/RomListWidget.hxx	23;"	d
ROM_WIDGET_HXX	./src/debugger/gui/RomWidget.hxx	23;"	d
ROTATE_LEFT	./src/emucore/MD5.cxx	100;"	d	file:
RSYNC	./src/debugger/TIADebug.hxx	/^	RSYNC,$/;"	e	enum:TIALabel
RamCheat	./src/cheat/RamCheat.cxx	/^RamCheat::RamCheat(OSystem* os, const string& name, const string& code)$/;"	f	class:RamCheat
RamCheat	./src/cheat/RamCheat.hxx	/^class RamCheat : public Cheat$/;"	c
RamDebug	./src/debugger/RamDebug.cxx	/^RamDebug::RamDebug(Debugger* dbg, Console* console)$/;"	f	class:RamDebug
RamDebug	./src/debugger/RamDebug.hxx	/^class RamDebug : public DebuggerSystem$/;"	c
RamState	./src/debugger/RamDebug.hxx	/^class RamState : public DebuggerState$/;"	c
RamWidget	./src/debugger/gui/RamWidget.cxx	/^RamWidget::RamWidget(GuiObject* boss, const GUI::Font& font, int x, int y)$/;"	f	class:RamWidget
RamWidget	./src/debugger/gui/RamWidget.hxx	/^class RamWidget : public Widget, public CommandSender$/;"	c
Random	./src/emucore/Random.cxx	/^Random::Random()$/;"	f	class:Random
Random	./src/emucore/Random.hxx	/^class Random$/;"	c
RawFrameBufferInfo	./src/wince/FrameBufferWinCE.hxx	/^} RawFrameBufferInfo;$/;"	t	typeref:struct:_RawFrameBufferInfo
Rect	./src/gui/Rect.hxx	/^  Rect() : top(0), left(0), bottom(0), right(0) {}$/;"	f	struct:GUI::Rect
Rect	./src/gui/Rect.hxx	/^  Rect(int w, int h) : top(0), left(0), bottom(h), right(w) {}$/;"	f	struct:GUI::Rect
Rect	./src/gui/Rect.hxx	/^  Rect(int x1, int y1, int x2, int y2) : top(y1), left(x1), bottom(y2), right(x2)$/;"	f	struct:GUI::Rect
Rect	./src/gui/Rect.hxx	/^struct Rect$/;"	s	namespace:GUI
RectList	./src/common/RectList.cxx	/^RectList::RectList(Uint32 size)$/;"	f	class:RectList
RectList	./src/common/RectList.hxx	/^class RectList$/;"	c
RegWrite	./src/common/SoundSDL.hxx	/^    struct RegWrite$/;"	s	class:SoundSDL
RegWrite	./src/wince/SoundWinCE.hxx	/^struct RegWrite$/;"	s
RegWriteQueue	./src/common/SoundSDL.cxx	/^SoundSDL::RegWriteQueue::RegWriteQueue(uInt32 capacity)$/;"	f	class:SoundSDL::RegWriteQueue
RegWriteQueue	./src/common/SoundSDL.hxx	/^    class RegWriteQueue$/;"	c	class:SoundSDL
RegWriteQueue	./src/wince/SoundWinCE.cxx	/^SoundWinCE::RegWriteQueue::RegWriteQueue(uInt32 capacity)$/;"	f	class:SoundWinCE::RegWriteQueue
RegWriteQueue	./src/wince/SoundWinCE.hxx	/^    class RegWriteQueue$/;"	c	class:SoundWinCE
Relative	./src/emucore/m6502/src/M6502.hxx	/^      Indirect, IndirectX, IndirectY, Invalid, Relative,$/;"	e	enum:M6502::AddressingMode
RenderType	./src/common/FrameBufferSoft.hxx	/^    enum RenderType {$/;"	g	class:FrameBufferSoft
Resolution	./src/emucore/OSystem.hxx	/^struct Resolution {$/;"	s
ResolutionList	./src/emucore/OSystem.hxx	/^typedef Common::Array<Resolution> ResolutionList;$/;"	t
Right	./src/emucore/Control.hxx	/^      Left, Right$/;"	e	enum:Controller::Jack
RomAuditDialog	./src/gui/RomAuditDialog.cxx	/^RomAuditDialog::RomAuditDialog(OSystem* osystem, DialogContainer* parent,$/;"	f	class:RomAuditDialog
RomAuditDialog	./src/gui/RomAuditDialog.hxx	/^class RomAuditDialog : public Dialog$/;"	c
RomInfoWidget	./src/gui/RomInfoWidget.cxx	/^RomInfoWidget::RomInfoWidget(GuiObject* boss, const GUI::Font& font,$/;"	f	class:RomInfoWidget
RomInfoWidget	./src/gui/RomInfoWidget.hxx	/^class RomInfoWidget : public Widget$/;"	c
RomListWidget	./src/debugger/gui/RomListWidget.cxx	/^RomListWidget::RomListWidget(GuiObject* boss, const GUI::Font& font,$/;"	f	class:RomListWidget
RomListWidget	./src/debugger/gui/RomListWidget.hxx	/^class RomListWidget : public CheckListWidget$/;"	c
RomWidget	./src/debugger/gui/RomWidget.cxx	/^RomWidget::RomWidget(GuiObject* boss, const GUI::Font& font, int x, int y)$/;"	f	class:RomWidget
RomWidget	./src/debugger/gui/RomWidget.hxx	/^class RomWidget : public Widget, public CommandSender$/;"	c
S11	./src/emucore/MD5.cxx	61;"	d	file:
S12	./src/emucore/MD5.cxx	62;"	d	file:
S13	./src/emucore/MD5.cxx	63;"	d	file:
S14	./src/emucore/MD5.cxx	64;"	d	file:
S21	./src/emucore/MD5.cxx	65;"	d	file:
S22	./src/emucore/MD5.cxx	66;"	d	file:
S23	./src/emucore/MD5.cxx	67;"	d	file:
S24	./src/emucore/MD5.cxx	68;"	d	file:
S31	./src/emucore/MD5.cxx	69;"	d	file:
S32	./src/emucore/MD5.cxx	70;"	d	file:
S33	./src/emucore/MD5.cxx	71;"	d	file:
S34	./src/emucore/MD5.cxx	72;"	d	file:
S41	./src/emucore/MD5.cxx	73;"	d	file:
S42	./src/emucore/MD5.cxx	74;"	d	file:
S43	./src/emucore/MD5.cxx	75;"	d	file:
S44	./src/emucore/MD5.cxx	76;"	d	file:
SALeftAxis0Value	./src/emucore/Event.hxx	/^      SALeftAxis0Value, SALeftAxis1Value,$/;"	e	enum:Event::Type
SALeftAxis1Value	./src/emucore/Event.hxx	/^      SALeftAxis0Value, SALeftAxis1Value,$/;"	e	enum:Event::Type
SARightAxis0Value	./src/emucore/Event.hxx	/^      SARightAxis0Value, SARightAxis1Value,$/;"	e	enum:Event::Type
SARightAxis1Value	./src/emucore/Event.hxx	/^      SARightAxis0Value, SARightAxis1Value,$/;"	e	enum:Event::Type
SA_Axis	./src/emucore/EventHandler.cxx	/^const Event::Type EventHandler::SA_Axis[2][2] = {$/;"	m	class:EventHandler	file:
SA_Axis	./src/emucore/EventHandler.hxx	/^    static const Event::Type SA_Axis[2][2];$/;"	m	class:EventHandler
SA_Button	./src/emucore/EventHandler.cxx	/^const Event::Type EventHandler::SA_Button[2][2] = {$/;"	m	class:EventHandler	file:
SA_Button	./src/emucore/EventHandler.hxx	/^    static const Event::Type SA_Button[2][2];$/;"	m	class:EventHandler
SCROLL_BAR_WIDGET_HXX	./src/gui/ScrollBarWidget.hxx	23;"	d
SEEK_CUR	./src/emucore/unzip.c	61;"	d	file:
SEEK_END	./src/emucore/unzip.c	65;"	d	file:
SEEK_SET	./src/emucore/unzip.c	69;"	d	file:
SERIALIZABLE_HXX	./src/emucore/Serializable.hxx	20;"	d
SERIALIZER_HXX	./src/emucore/Serializer.hxx	20;"	d
SETTINGS_GP2X_HXX	./src/gp2x/SettingsGP2X.hxx	21;"	d
SETTINGS_HXX	./src/emucore/Settings.hxx	20;"	d
SETTINGS_MAX_OSX_HXX	./src/macosx/SettingsMACOSX.hxx	20;"	d
SETTINGS_UNIX_HXX	./src/unix/SettingsUNIX.hxx	20;"	d
SETTINGS_WIN32_HXX	./src/win32/SettingsWin32.hxx	20;"	d
SETTINGS_WINCE_HXX	./src/wince/SettingsWinCE.hxx	20;"	d
SHL	./src/yacc/y.tab.c	/^     SHL = 267,$/;"	e	enum:yytokentype	file:
SHL	./src/yacc/y.tab.c	98;"	d	file:
SHR	./src/yacc/y.tab.c	/^     SHR = 268,$/;"	e	enum:yytokentype	file:
SHR	./src/yacc/y.tab.c	99;"	d	file:
SIZECENTRALDIRITEM	./src/emucore/unzip.c	54;"	d	file:
SIZEZIPLOCALHEADER	./src/emucore/unzip.c	55;"	d	file:
SM_LOW	./src/wince/FrameBufferWinCE.hxx	/^	enum {SM_LOW, QVGA, VGA} devres;$/;"	e	enum:FrameBufferWinCE::__anon22
SNAPSHOT_HXX	./src/common/Snapshot.hxx	20;"	d
SOUNDWINCE_HXX	./src/wince/SoundWinCE.hxx	20;"	d
SOUND_HXX	./src/emucore/Sound.hxx	20;"	d
SOUND_NULL_HXX	./src/common/SoundNull.hxx	20;"	d
SOUND_SDL_HXX	./src/common/SoundSDL.hxx	20;"	d
SP	./src/debugger/CpuDebug.hxx	/^    int PC, SP, PS, A, X, Y;$/;"	m	class:CpuState
SP	./src/emucore/m6502/src/M6502.hxx	/^    uInt8 SP;   \/\/ Stack Pointer$/;"	m	class:M6502
SPEAKJET_HXX	./src/emucore/SpeakJet.hxx	22;"	d
SPEECH_BUFFERS	./src/emucore/SpeakJet.hxx	/^enum { SPEECH_BUFFERS = 1024 };$/;"	e	enum:__anon17
STACK_HXX	./src/gui/Stack.hxx	23;"	d
STATE_HEADER	./src/emucore/StateManager.cxx	32;"	d	file:
STATE_MANAGER_HXX	./src/emucore/StateManager.hxx	20;"	d
STDERR_FILE	./src/win32/SDL_win32_main.c	39;"	d	file:
STDOUT_FILE	./src/win32/SDL_win32_main.c	38;"	d	file:
STELLALARGE_FONT_DATA_HXX	./src/gui/StellaLargeFont.hxx	23;"	d
STELLA_BASE_VERSION	./src/common/Version.hxx	22;"	d
STELLA_FONT_DATA_HXX	./src/gui/StellaFont.hxx	23;"	d
STELLA_VERSION	./src/common/Version.hxx	25;"	d
STELLA_VERSION	./src/common/Version.hxx	27;"	d
STRCMPCASENOSENTIVEFUNCTION	./src/emucore/unzip.c	237;"	d	file:
STRING_LIST_HXX	./src/gui/StringList.hxx	23;"	d
STRING_LIST_WIDGET_HXX	./src/gui/StringListWidget.hxx	23;"	d
ST_DEFAULT	./src/yacc/YaccParser.cxx	/^	ST_DEFAULT,$/;"	e	enum:YaccParser::__anon79	file:
ST_IDENTIFIER	./src/yacc/YaccParser.cxx	/^	ST_IDENTIFIER,$/;"	e	enum:YaccParser::__anon79	file:
ST_OPERATOR	./src/yacc/YaccParser.cxx	/^	ST_OPERATOR,$/;"	e	enum:YaccParser::__anon79	file:
ST_SPACE	./src/yacc/YaccParser.cxx	/^	ST_SPACE$/;"	e	enum:YaccParser::__anon79	file:
SWITCHES_HXX	./src/emucore/Switches.hxx	20;"	d
SYNC_CASCADE	./src/emucore/rsynth/opsynth.c	30;"	d	file:
SYSTEM_HXX	./src/emucore/m6502/src/System.hxx	20;"	d
S_CMDMENU	./src/emucore/EventHandler.hxx	/^      S_CMDMENU,$/;"	e	enum:EventHandler::State
S_DEBUGGER	./src/emucore/EventHandler.hxx	/^      S_DEBUGGER$/;"	e	enum:EventHandler::State
S_EMULATE	./src/emucore/EventHandler.hxx	/^      S_EMULATE,$/;"	e	enum:EventHandler::State
S_LAUNCHER	./src/emucore/EventHandler.hxx	/^      S_LAUNCHER,$/;"	e	enum:EventHandler::State
S_MENU	./src/emucore/EventHandler.hxx	/^      S_MENU,$/;"	e	enum:EventHandler::State
S_NONE	./src/emucore/EventHandler.hxx	/^      S_NONE,$/;"	e	enum:EventHandler::State
S_PAUSE	./src/emucore/EventHandler.hxx	/^      S_PAUSE,$/;"	e	enum:EventHandler::State
SaveState	./src/emucore/Event.hxx	/^      ChangeState, LoadState, SaveState, TakeSnapshot, Quit,$/;"	e	enum:Event::Type
ScoreBit	./src/emucore/TIA.hxx	/^      ScoreBit = 0x40,        \/\/ Bit for Playfield score mode$/;"	e	enum:TIA::__anon6
ScrollBarWidget	./src/gui/ScrollBarWidget.cxx	/^ScrollBarWidget::ScrollBarWidget(GuiObject* boss, const GUI::Font& font,$/;"	f	class:ScrollBarWidget
ScrollBarWidget	./src/gui/ScrollBarWidget.hxx	/^class ScrollBarWidget : public Widget, public CommandSender$/;"	c
Serializable	./src/emucore/Serializable.hxx	/^    Serializable() { }$/;"	f	class:Serializable
Serializable	./src/emucore/Serializable.hxx	/^class Serializable$/;"	c
Serializer	./src/emucore/Serializer.cxx	/^Serializer::Serializer(void)$/;"	f	class:Serializer
Serializer	./src/emucore/Serializer.hxx	/^class Serializer$/;"	c
Setting	./src/emucore/Settings.hxx	/^    struct Setting$/;"	s	class:Settings
Settings	./src/emucore/Settings.cxx	/^Settings::Settings(OSystem* osystem)$/;"	f	class:Settings
Settings	./src/emucore/Settings.cxx	/^Settings::Settings(const Settings&)$/;"	f	class:Settings
Settings	./src/emucore/Settings.hxx	/^class Settings$/;"	c
SettingsArray	./src/emucore/Settings.hxx	/^    typedef Common::Array<Setting> SettingsArray;$/;"	t	class:Settings
SettingsGP2X	./src/gp2x/SettingsGP2X.cxx	/^SettingsGP2X::SettingsGP2X(OSystem* osystem)$/;"	f	class:SettingsGP2X
SettingsGP2X	./src/gp2x/SettingsGP2X.hxx	/^class SettingsGP2X : public Settings$/;"	c
SettingsMACOSX	./src/macosx/SettingsMACOSX.cxx	/^SettingsMACOSX::SettingsMACOSX(OSystem* osystem)$/;"	f	class:SettingsMACOSX
SettingsMACOSX	./src/macosx/SettingsMACOSX.hxx	/^class SettingsMACOSX : public Settings$/;"	c
SettingsUNIX	./src/unix/SettingsUNIX.cxx	/^SettingsUNIX::SettingsUNIX(OSystem* osystem)$/;"	f	class:SettingsUNIX
SettingsUNIX	./src/unix/SettingsUNIX.hxx	/^class SettingsUNIX : public Settings$/;"	c
SettingsWin32	./src/win32/SettingsWin32.cxx	/^SettingsWin32::SettingsWin32(OSystem* osystem)$/;"	f	class:SettingsWin32
SettingsWin32	./src/win32/SettingsWin32.hxx	/^class SettingsWin32 : public Settings$/;"	c
SettingsWinCE	./src/wince/SettingsWinCE.hxx	/^class SettingsWinCE : public Settings$/;"	c
ShiftLeftExpression	./src/debugger/DebuggerExpressions.hxx	/^    ShiftLeftExpression(Expression* left, Expression* right) : Expression(left, right) {}$/;"	f	class:ShiftLeftExpression
ShiftLeftExpression	./src/debugger/DebuggerExpressions.hxx	/^class ShiftLeftExpression : public Expression$/;"	c
ShiftRightExpression	./src/debugger/DebuggerExpressions.hxx	/^    ShiftRightExpression(Expression* left, Expression* right) : Expression(left, right) {}$/;"	f	class:ShiftRightExpression
ShiftRightExpression	./src/debugger/DebuggerExpressions.hxx	/^class ShiftRightExpression : public Expression$/;"	c
ShowError	./src/win32/SDL_win32_main.c	/^static void ShowError(const char *title, const char *message)$/;"	f	file:
Six	./src/emucore/Control.hxx	/^      One, Two, Three, Four, Six$/;"	e	enum:Controller::DigitalPin
SliderWidget	./src/gui/Widget.cxx	/^SliderWidget::SliderWidget(GuiObject *boss, const GUI::Font& font,$/;"	f	class:SliderWidget
SliderWidget	./src/gui/Widget.hxx	/^class SliderWidget : public ButtonWidget$/;"	c
Snapshot	./src/common/Snapshot.hxx	/^class Snapshot$/;"	c
Sound	./src/emucore/Sound.hxx	/^    Sound(OSystem* osystem) { myOSystem = osystem; }$/;"	f	class:Sound
Sound	./src/emucore/Sound.hxx	/^class Sound$/;"	c
SoundNull	./src/common/SoundNull.cxx	/^SoundNull::SoundNull(OSystem* osystem)$/;"	f	class:SoundNull
SoundNull	./src/common/SoundNull.hxx	/^class SoundNull : public Sound$/;"	c
SoundSDL	./src/common/SoundSDL.cxx	/^SoundSDL::SoundSDL(OSystem* osystem)$/;"	f	class:SoundSDL
SoundSDL	./src/common/SoundSDL.hxx	/^class SoundSDL : public Sound$/;"	c
SoundWinCE	./src/wince/SoundWinCE.cxx	/^SoundWinCE::SoundWinCE(OSystem* osystem)$/;"	f	class:SoundWinCE
SoundWinCE	./src/wince/SoundWinCE.hxx	/^class SoundWinCE : public Sound$/;"	c
SpeakJet	./src/emucore/SpeakJet.cxx	/^SpeakJet::SpeakJet()$/;"	f	class:SpeakJet
SpeakJet	./src/emucore/SpeakJet.hxx	/^class SpeakJet$/;"	c
SpeechBuffer	./src/emucore/SpeakJet.hxx	/^struct SpeechBuffer$/;"	s
State	./src/emucore/EventHandler.hxx	/^    enum State {$/;"	g	class:EventHandler
StateManager	./src/emucore/StateManager.cxx	/^StateManager::StateManager(OSystem* osystem)$/;"	f	class:StateManager
StateManager	./src/emucore/StateManager.cxx	/^StateManager::StateManager(const StateManager&)$/;"	f	class:StateManager
StateManager	./src/emucore/StateManager.hxx	/^class StateManager$/;"	c
StaticTextWidget	./src/gui/Widget.cxx	/^StaticTextWidget::StaticTextWidget(GuiObject *boss, const GUI::Font& font,$/;"	f	class:StaticTextWidget
StaticTextWidget	./src/gui/Widget.hxx	/^class StaticTextWidget : public Widget$/;"	c
Stella_Joystick	./src/emucore/EventHandler.hxx	/^    struct Stella_Joystick {$/;"	s	class:EventHandler
StopExecutionBit	./src/emucore/m6502/src/M6502.hxx	/^      StopExecutionBit = 0x01,$/;"	e	enum:M6502::__anon3
StressDur	./src/emucore/rsynth/phtoelm.c	124;"	d	file:
StressDur	./src/emucore/rsynth/phtoelm.c	126;"	d	file:
StringList	./src/gui/StringList.hxx	/^class StringList : public Common::Array<string>$/;"	c
StringListWidget	./src/gui/StringListWidget.cxx	/^StringListWidget::StringListWidget(GuiObject* boss, const GUI::Font& font,$/;"	f	class:StringListWidget
StringListWidget	./src/gui/StringListWidget.hxx	/^class StringListWidget : public ListWidget$/;"	c
SubsystemInited	./src/wince/FrameBufferWinCE.hxx	/^	bool SubsystemInited;$/;"	m	class:FrameBufferWinCE
Surface	./src/gui/RomInfoWidget.hxx	/^class GUI::Surface;$/;"	m	class:GUI	typeref:class:GUI::
Surface	./src/gui/Surface.cxx	/^Surface::Surface(int width, int height, SDL_Surface* data)$/;"	f	class:GUI::Surface
Surface	./src/gui/Surface.hxx	/^class Surface$/;"	c	namespace:GUI
Switches	./src/emucore/Switches.cxx	/^Switches::Switches(const Event& event, const Properties& properties)$/;"	f	class:Switches
Switches	./src/emucore/Switches.hxx	/^class Switches : public Serializable$/;"	c
System	./src/emucore/m6502/src/System.cxx	/^System::System(const System& s)$/;"	f	class:System
System	./src/emucore/m6502/src/System.cxx	/^System::System(uInt16 n, uInt16 m)$/;"	f	class:System
System	./src/emucore/m6502/src/System.hxx	/^class System : public Serializable$/;"	c
T0	./src/emucore/rsynth/opsynth.c	/^    long T0;			\/* Fundamental period in output samples times 4 *\/$/;"	m	struct:rsynth_private	file:
TAB_WIDGET_HXX	./src/gui/TabWidget.hxx	23;"	d
TIA	./src/emucore/TIA.cxx	/^TIA::TIA(const Console& console, Settings& settings)$/;"	f	class:TIA
TIA	./src/emucore/TIA.cxx	/^TIA::TIA(const TIA& c)$/;"	f	class:TIA
TIA	./src/emucore/TIA.hxx	/^class TIA : public Device , public MediaSource$/;"	c
TIABit	./src/emucore/TIA.hxx	/^    enum TIABit {$/;"	g	class:TIA
TIADEBUG_INT_METHOD	./src/debugger/TIADebug.hxx	/^typedef int (TIADebug::*TIADEBUG_INT_METHOD)();$/;"	t
TIADebug	./src/debugger/TIADebug.cxx	/^TIADebug::TIADebug(Debugger* dbg, Console* console)$/;"	f	class:TIADebug
TIADebug	./src/debugger/TIADebug.hxx	/^class TIADebug : public DebuggerSystem$/;"	c
TIALabel	./src/debugger/TIADebug.hxx	/^enum TIALabel {$/;"	g
TIASOUND_HXX	./src/emucore/TIASnd.hxx	20;"	d
TIASound	./src/emucore/TIASnd.cxx	/^TIASound::TIASound(Int32 outputFrequency, Int32 tiaFrequency, uInt32 channels)$/;"	f	class:TIASound
TIASound	./src/emucore/TIASnd.hxx	/^class TIASound$/;"	c
TIA_DEBUG_HXX	./src/debugger/TIADebug.hxx	20;"	d
TIA_HXX	./src/emucore/TIA.hxx	20;"	d
TIA_INFO_WIDGET_HXX	./src/debugger/gui/TiaInfoWidget.hxx	23;"	d
TIA_METHOD	./src/yacc/y.tab.c	/^     TIA_METHOD = 262,$/;"	e	enum:yytokentype	file:
TIA_METHOD	./src/yacc/y.tab.c	93;"	d	file:
TIA_OUTPUT_WIDGET_HXX	./src/debugger/gui/TiaOutputWidget.hxx	23;"	d
TIA_WIDGET_HXX	./src/debugger/gui/TiaWidget.hxx	23;"	d
TIA_ZOOM_WIDGET_HXX	./src/debugger/gui/TiaZoomWidget.hxx	23;"	d
TIMING_SLOP	./src/emucore/AtariVox.hxx	/^    enum { TIMING_SLOP = 0 };$/;"	e	enum:AtariVox::__anon12
TOGGLE_BIT_WIDGET_HXX	./src/debugger/gui/ToggleBitWidget.hxx	23;"	d
TOGGLE_PIXEL_WIDGET_HXX	./src/debugger/gui/TogglePixelWidget.hxx	23;"	d
TOGGLE_WIDGET_HXX	./src/debugger/gui/ToggleWidget.hxx	23;"	d
TRACKBALL22_HXX	./src/emucore/TrackBall22.hxx	20;"	d
TRIGMAX	./src/emucore/Paddles.cxx	19;"	d	file:
TRIGMIN	./src/emucore/Paddles.cxx	20;"	d	file:
TRYFREE	./src/emucore/unzip.c	51;"	d	file:
Tab	./src/gui/TabWidget.hxx	/^  struct Tab {$/;"	s	class:TabWidget
TabList	./src/gui/TabWidget.hxx	/^  typedef Common::Array<Tab> TabList;$/;"	t	class:TabWidget
TabWidget	./src/gui/TabWidget.cxx	/^TabWidget::TabWidget(GuiObject* boss, const GUI::Font& font,$/;"	f	class:TabWidget
TabWidget	./src/gui/TabWidget.hxx	/^class TabWidget : public Widget, public CommandSender$/;"	c
TakeSnapshot	./src/emucore/Event.hxx	/^      ChangeState, LoadState, SaveState, TakeSnapshot, Quit,$/;"	e	enum:Event::Type
TextAlignment	./src/emucore/FrameBuffer.hxx	/^enum TextAlignment {$/;"	g
Three	./src/emucore/Control.hxx	/^      One, Two, Three, Four, Six$/;"	e	enum:Controller::DigitalPin
TiaInfoWidget	./src/debugger/gui/TiaInfoWidget.cxx	/^TiaInfoWidget::TiaInfoWidget(GuiObject* boss, const GUI::Font& font,$/;"	f	class:TiaInfoWidget
TiaInfoWidget	./src/debugger/gui/TiaInfoWidget.hxx	/^class TiaInfoWidget : public Widget, public CommandSender$/;"	c
TiaMethodExpression	./src/debugger/DebuggerExpressions.hxx	/^    TiaMethodExpression(TIADEBUG_INT_METHOD method) : Expression(0, 0), myMethod(method) {}$/;"	f	class:TiaMethodExpression
TiaMethodExpression	./src/debugger/DebuggerExpressions.hxx	/^class TiaMethodExpression : public Expression$/;"	c
TiaOutputWidget	./src/debugger/gui/TiaOutputWidget.cxx	/^TiaOutputWidget::TiaOutputWidget(GuiObject* boss, const GUI::Font& font,$/;"	f	class:TiaOutputWidget
TiaOutputWidget	./src/debugger/gui/TiaOutputWidget.hxx	/^class TiaOutputWidget : public Widget, public CommandSender$/;"	c
TiaState	./src/debugger/TIADebug.hxx	/^class TiaState : public DebuggerState$/;"	c
TiaWidget	./src/debugger/gui/TiaWidget.cxx	/^TiaWidget::TiaWidget(GuiObject* boss, const GUI::Font& font,$/;"	f	class:TiaWidget
TiaWidget	./src/debugger/gui/TiaWidget.hxx	/^class TiaWidget : public Widget, public CommandSender$/;"	c
TiaZoomWidget	./src/debugger/gui/TiaZoomWidget.cxx	/^TiaZoomWidget::TiaZoomWidget(GuiObject* boss, const GUI::Font& font,$/;"	f	class:TiaZoomWidget
TiaZoomWidget	./src/debugger/gui/TiaZoomWidget.hxx	/^class TiaZoomWidget : public Widget, public CommandSender$/;"	c
TimingInfo	./src/emucore/OSystem.hxx	/^    struct TimingInfo {$/;"	s	class:OSystem
ToggleBitWidget	./src/debugger/gui/ToggleBitWidget.cxx	/^ToggleBitWidget::ToggleBitWidget(GuiObject* boss, const GUI::Font& font,$/;"	f	class:ToggleBitWidget
ToggleBitWidget	./src/debugger/gui/ToggleBitWidget.hxx	/^class ToggleBitWidget : public ToggleWidget$/;"	c
TogglePixelWidget	./src/debugger/gui/TogglePixelWidget.cxx	/^TogglePixelWidget::TogglePixelWidget(GuiObject* boss, const GUI::Font& font,$/;"	f	class:TogglePixelWidget
TogglePixelWidget	./src/debugger/gui/TogglePixelWidget.hxx	/^class TogglePixelWidget : public ToggleWidget$/;"	c
ToggleWidget	./src/debugger/gui/ToggleWidget.cxx	/^ToggleWidget::ToggleWidget(GuiObject* boss, const GUI::Font& font,$/;"	f	class:ToggleWidget
ToggleWidget	./src/debugger/gui/ToggleWidget.hxx	/^class ToggleWidget : public Widget, public CommandSender$/;"	c
TrackBall22	./src/emucore/Control.hxx	/^      TrackBall22, AtariVox$/;"	e	enum:Controller::Type
TrackBall22	./src/emucore/TrackBall22.cxx	/^TrackBall22::TrackBall22(Jack jack, const Event& event)$/;"	f	class:TrackBall22
TrackBall22	./src/emucore/TrackBall22.hxx	/^class TrackBall22 : public Controller$/;"	c
TreeNode	./src/emucore/PropsSet.hxx	/^    struct TreeNode {$/;"	s	class:PropertiesSet
TruePattern	./src/emucore/Deserializer.hxx	/^      TruePattern  = 0xfe,$/;"	e	enum:Deserializer::__anon21
TruePattern	./src/emucore/Serializer.hxx	/^      TruePattern  = 0xfe,$/;"	e	enum:Serializer::__anon4
Two	./src/emucore/Control.hxx	/^      One, Two, Three, Four, Six$/;"	e	enum:Controller::DigitalPin
Type	./src/emucore/Control.hxx	/^    enum Type$/;"	g	class:Controller
Type	./src/emucore/Event.hxx	/^    enum Type$/;"	g	class:Event
UICancel	./src/emucore/Event.hxx	/^      UISelect, UINavPrev, UINavNext, UIOK, UICancel,$/;"	e	enum:Event::Type
UIDialog	./src/gui/UIDialog.cxx	/^UIDialog::UIDialog(OSystem* osystem, DialogContainer* parent,$/;"	f	class:UIDialog
UIDialog	./src/gui/UIDialog.hxx	/^class UIDialog : public Dialog$/;"	c
UIDown	./src/emucore/Event.hxx	/^      UIUp, UIDown, UILeft, UIRight, UIHome, UIEnd, UIPgUp, UIPgDown,$/;"	e	enum:Event::Type
UIEnd	./src/emucore/Event.hxx	/^      UIUp, UIDown, UILeft, UIRight, UIHome, UIEnd, UIPgUp, UIPgDown,$/;"	e	enum:Event::Type
UIHome	./src/emucore/Event.hxx	/^      UIUp, UIDown, UILeft, UIRight, UIHome, UIEnd, UIPgUp, UIPgDown,$/;"	e	enum:Event::Type
UILeft	./src/emucore/Event.hxx	/^      UIUp, UIDown, UILeft, UIRight, UIHome, UIEnd, UIPgUp, UIPgDown,$/;"	e	enum:Event::Type
UINT2	./src/emucore/MD5.cxx	/^typedef uInt16 UINT2;$/;"	t	file:
UINT4	./src/emucore/MD5.cxx	/^typedef uInt32 UINT4;$/;"	t	file:
UINavNext	./src/emucore/Event.hxx	/^      UISelect, UINavPrev, UINavNext, UIOK, UICancel,$/;"	e	enum:Event::Type
UINavPrev	./src/emucore/Event.hxx	/^      UISelect, UINavPrev, UINavNext, UIOK, UICancel,$/;"	e	enum:Event::Type
UIOK	./src/emucore/Event.hxx	/^      UISelect, UINavPrev, UINavNext, UIOK, UICancel,$/;"	e	enum:Event::Type
UIPgDown	./src/emucore/Event.hxx	/^      UIUp, UIDown, UILeft, UIRight, UIHome, UIEnd, UIPgUp, UIPgDown,$/;"	e	enum:Event::Type
UIPgUp	./src/emucore/Event.hxx	/^      UIUp, UIDown, UILeft, UIRight, UIHome, UIEnd, UIPgUp, UIPgDown,$/;"	e	enum:Event::Type
UIRight	./src/emucore/Event.hxx	/^      UIUp, UIDown, UILeft, UIRight, UIHome, UIEnd, UIPgUp, UIPgDown,$/;"	e	enum:Event::Type
UISelect	./src/emucore/Event.hxx	/^      UISelect, UINavPrev, UINavNext, UIOK, UICancel,$/;"	e	enum:Event::Type
UIUp	./src/emucore/Event.hxx	/^      UIUp, UIDown, UILeft, UIRight, UIHome, UIEnd, UIPgUp, UIPgDown,$/;"	e	enum:Event::Type
UI_DIALOG_HXX	./src/gui/UIDialog.hxx	23;"	d
UMINUS	./src/yacc/y.tab.c	/^     UMINUS = 274$/;"	e	enum:yytokentype	file:
UMINUS	./src/yacc/y.tab.c	105;"	d	file:
UNZ_BUFSIZE	./src/emucore/unzip.c	40;"	d	file:
UNZ_MAXFILENAMEINZIP	./src/emucore/unzip.c	44;"	d	file:
UP_DOWN_BOX_HEIGHT	./src/gui/PopUpWidget.cxx	33;"	d	file:
UP_DOWN_BOX_HEIGHT	./src/gui/ScrollBarWidget.cxx	35;"	d	file:
UnEscapeQuotes	./src/win32/SDL_win32_main.c	/^static void UnEscapeQuotes( char *arg )$/;"	f	file:
UnaryMinusExpression	./src/debugger/DebuggerExpressions.hxx	/^    UnaryMinusExpression(Expression* left) : Expression(left, 0) {}$/;"	f	class:UnaryMinusExpression
UnaryMinusExpression	./src/debugger/DebuggerExpressions.hxx	/^class UnaryMinusExpression : public Expression$/;"	c
V	./src/emucore/m6502/src/M6502.hxx	/^    bool V;     \/\/ V flag for processor status register$/;"	m	class:M6502
VBLANK	./src/debugger/TIADebug.hxx	/^	VBLANK,$/;"	e	enum:TIALabel
VDELBL	./src/debugger/TIADebug.hxx	/^	VDELBL,$/;"	e	enum:TIALabel
VDELP0	./src/debugger/TIADebug.hxx	/^	VDELP0,$/;"	e	enum:TIALabel
VDELP1	./src/debugger/TIADebug.hxx	/^	VDELP1,$/;"	e	enum:TIALabel
VERSION_HXX	./src/common/Version.hxx	20;"	d
VGA	./src/wince/FrameBufferWinCE.hxx	/^	enum {SM_LOW, QVGA, VGA} devres;$/;"	e	enum:FrameBufferWinCE::__anon22
VIDEO_DIALOG_HXX	./src/gui/VideoDialog.hxx	23;"	d
VIDMODE_LIST_HXX	./src/common/VideoModeList.hxx	20;"	d
VSYNC	./src/debugger/TIADebug.hxx	/^	VSYNC = 0,$/;"	e	enum:TIALabel
VideoDialog	./src/gui/VideoDialog.cxx	/^VideoDialog::VideoDialog(OSystem* osystem, DialogContainer* parent,$/;"	f	class:VideoDialog
VideoDialog	./src/gui/VideoDialog.hxx	/^class VideoDialog : public Dialog$/;"	c
VideoMode	./src/common/VideoModeList.hxx	/^struct VideoMode {$/;"	s
VideoModeList	./src/common/VideoModeList.hxx	/^    VideoModeList() : myIdx(-1) { }$/;"	f	class:VideoModeList
VideoModeList	./src/common/VideoModeList.hxx	/^class VideoModeList$/;"	c
VolumeDecrease	./src/emucore/Event.hxx	/^      Fry, VolumeDecrease, VolumeIncrease,$/;"	e	enum:Event::Type
VolumeIncrease	./src/emucore/Event.hxx	/^      Fry, VolumeDecrease, VolumeIncrease,$/;"	e	enum:Event::Type
WIDGET_BORDER	./src/gui/Widget.hxx	/^  WIDGET_BORDER        = 1 << 3,$/;"	e	enum:__anon45
WIDGET_CLEARBG	./src/gui/Widget.hxx	/^  WIDGET_CLEARBG       = 1 << 4,$/;"	e	enum:__anon45
WIDGET_ENABLED	./src/gui/Widget.hxx	/^  WIDGET_ENABLED       = 1 << 0,$/;"	e	enum:__anon45
WIDGET_HILITED	./src/gui/Widget.hxx	/^  WIDGET_HILITED       = 1 << 2,$/;"	e	enum:__anon45
WIDGET_HXX	./src/gui/Widget.hxx	23;"	d
WIDGET_INVISIBLE	./src/gui/Widget.hxx	/^  WIDGET_INVISIBLE     = 1 << 1,$/;"	e	enum:__anon45
WIDGET_RETAIN_FOCUS	./src/gui/Widget.hxx	/^  WIDGET_RETAIN_FOCUS  = 1 << 6,$/;"	e	enum:__anon45
WIDGET_TRACK_MOUSE	./src/gui/Widget.hxx	/^  WIDGET_TRACK_MOUSE   = 1 << 5,$/;"	e	enum:__anon45
WIDGET_WANTS_RAWDATA	./src/gui/Widget.hxx	/^  WIDGET_WANTS_RAWDATA = 1 << 8$/;"	e	enum:__anon45
WIDGET_WANTS_TAB	./src/gui/Widget.hxx	/^  WIDGET_WANTS_TAB     = 1 << 7,$/;"	e	enum:__anon45
WIN32_LEAN_AND_MEAN	./src/win32/SDL_win32_main.c	10;"	d	file:
WSYNC	./src/debugger/TIADebug.hxx	/^	WSYNC,$/;"	e	enum:TIALabel
Widget	./src/gui/Widget.cxx	/^Widget::Widget(GuiObject* boss, const GUI::Font& font,$/;"	f	class:Widget
Widget	./src/gui/Widget.hxx	/^class Widget : public GuiObject$/;"	c
WidgetArray	./src/gui/GuiObject.hxx	/^typedef Common::Array<Widget*> WidgetArray;$/;"	t
WinMain	./src/win32/SDL_win32_main.c	/^int WINAPI WinMain(HINSTANCE hInst, HINSTANCE hPrev, LPWSTR szCmdLine, int sw)$/;"	f
WindowsFilesystemNode	./src/win32/FSNodeWin32.cxx	/^WindowsFilesystemNode::WindowsFilesystemNode()$/;"	f	class:WindowsFilesystemNode
WindowsFilesystemNode	./src/win32/FSNodeWin32.cxx	/^WindowsFilesystemNode::WindowsFilesystemNode(const WindowsFilesystemNode* node)$/;"	f	class:WindowsFilesystemNode
WindowsFilesystemNode	./src/win32/FSNodeWin32.cxx	/^WindowsFilesystemNode::WindowsFilesystemNode(const string& path)$/;"	f	class:WindowsFilesystemNode
WindowsFilesystemNode	./src/win32/FSNodeWin32.cxx	/^class WindowsFilesystemNode : public AbstractFilesystemNode$/;"	c	file:
WindowsFilesystemNode	./src/wince/FSNodeWinCE.cxx	/^WindowsFilesystemNode::WindowsFilesystemNode()$/;"	f	class:WindowsFilesystemNode
WindowsFilesystemNode	./src/wince/FSNodeWinCE.cxx	/^WindowsFilesystemNode::WindowsFilesystemNode(const WindowsFilesystemNode* node)$/;"	f	class:WindowsFilesystemNode
WindowsFilesystemNode	./src/wince/FSNodeWinCE.cxx	/^WindowsFilesystemNode::WindowsFilesystemNode(const string& path)$/;"	f	class:WindowsFilesystemNode
WindowsFilesystemNode	./src/wince/FSNodeWinCE.cxx	/^class WindowsFilesystemNode : public AbstractFilesystemNode$/;"	c	file:
WordDerefExpression	./src/debugger/DebuggerExpressions.hxx	/^    WordDerefExpression(Expression* left) : Expression(left, 0) {}$/;"	f	class:WordDerefExpression
WordDerefExpression	./src/debugger/DebuggerExpressions.hxx	/^class WordDerefExpression : public Expression$/;"	c
X	./src/debugger/CpuDebug.hxx	/^    int PC, SP, PS, A, X, Y;$/;"	m	class:CpuState
X	./src/emucore/m6502/src/M6502.hxx	/^    uInt8 X;    \/\/ X index register$/;"	m	class:M6502
Y	./src/debugger/CpuDebug.hxx	/^    int PC, SP, PS, A, X, Y;$/;"	m	class:CpuState
Y	./src/emucore/m6502/src/M6502.hxx	/^    uInt8 Y;    \/\/ Y index register$/;"	m	class:M6502
YYABORT	./src/yacc/y.tab.c	648;"	d	file:
YYACCEPT	./src/yacc/y.tab.c	647;"	d	file:
YYBACKUP	./src/yacc/y.tab.c	660;"	d	file:
YYBISON	./src/yacc/y.tab.c	47;"	d	file:
YYBISON_VERSION	./src/yacc/y.tab.c	50;"	d	file:
YYCOPY	./src/yacc/y.tab.c	363;"	d	file:
YYCOPY	./src/yacc/y.tab.c	366;"	d	file:
YYDEBUG	./src/yacc/y.tab.c	142;"	d	file:
YYDPRINTF	./src/yacc/y.tab.c	740;"	d	file:
YYDPRINTF	./src/yacc/y.tab.c	886;"	d	file:
YYEMPTY	./src/yacc/y.tab.c	644;"	d	file:
YYEOF	./src/yacc/y.tab.c	645;"	d	file:
YYERRCODE	./src/yacc/y.tab.c	679;"	d	file:
YYERROR	./src/yacc/y.tab.c	649;"	d	file:
YYERROR_VERBOSE	./src/yacc/y.tab.c	117;"	d	file:
YYERROR_VERBOSE	./src/yacc/y.tab.c	147;"	d	file:
YYERROR_VERBOSE	./src/yacc/y.tab.c	148;"	d	file:
YYERROR_VERBOSE	./src/yacc/y.tab.c	150;"	d	file:
YYFAIL	./src/yacc/y.tab.c	656;"	d	file:
YYFINAL	./src/yacc/y.tab.c	396;"	d	file:
YYFPRINTF	./src/yacc/y.tab.c	737;"	d	file:
YYFREE	./src/yacc/y.tab.c	329;"	d	file:
YYID	./src/yacc/y.tab.c	/^YYID (int i)$/;"	f	file:
YYID	./src/yacc/y.tab.c	253;"	d	file:
YYINITDEPTH	./src/yacc/y.tab.c	895;"	d	file:
YYLAST	./src/yacc/y.tab.c	398;"	d	file:
YYLEX	./src/yacc/y.tab.c	727;"	d	file:
YYLEX	./src/yacc/y.tab.c	729;"	d	file:
YYLLOC_DEFAULT	./src/yacc/y.tab.c	688;"	d	file:
YYLSP_NEEDED	./src/yacc/y.tab.c	59;"	d	file:
YYMALLOC	./src/yacc/y.tab.c	322;"	d	file:
YYMAXDEPTH	./src/yacc/y.tab.c	906;"	d	file:
YYMAXUTOK	./src/yacc/y.tab.c	411;"	d	file:
YYNNTS	./src/yacc/y.tab.c	403;"	d	file:
YYNRULES	./src/yacc/y.tab.c	405;"	d	file:
YYNSTATES	./src/yacc/y.tab.c	407;"	d	file:
YYNTOKENS	./src/yacc/y.tab.c	401;"	d	file:
YYPACT_NINF	./src/yacc/y.tab.c	552;"	d	file:
YYPOPSTACK	./src/yacc/y.tab.c	1244;"	d	file:
YYPURE	./src/yacc/y.tab.c	56;"	d	file:
YYRECOVERING	./src/yacc/y.tab.c	658;"	d	file:
YYRHSLOC	./src/yacc/y.tab.c	686;"	d	file:
YYSIZE_MAXIMUM	./src/yacc/y.tab.c	230;"	d	file:
YYSIZE_T	./src/yacc/y.tab.c	218;"	d	file:
YYSIZE_T	./src/yacc/y.tab.c	220;"	d	file:
YYSIZE_T	./src/yacc/y.tab.c	224;"	d	file:
YYSIZE_T	./src/yacc/y.tab.c	226;"	d	file:
YYSKELETON_NAME	./src/yacc/y.tab.c	53;"	d	file:
YYSTACK_ALLOC	./src/yacc/y.tab.c	276;"	d	file:
YYSTACK_ALLOC	./src/yacc/y.tab.c	280;"	d	file:
YYSTACK_ALLOC	./src/yacc/y.tab.c	285;"	d	file:
YYSTACK_ALLOC	./src/yacc/y.tab.c	308;"	d	file:
YYSTACK_ALLOC_MAXIMUM	./src/yacc/y.tab.c	305;"	d	file:
YYSTACK_ALLOC_MAXIMUM	./src/yacc/y.tab.c	311;"	d	file:
YYSTACK_BYTES	./src/yacc/y.tab.c	355;"	d	file:
YYSTACK_FREE	./src/yacc/y.tab.c	299;"	d	file:
YYSTACK_FREE	./src/yacc/y.tab.c	309;"	d	file:
YYSTACK_GAP_MAXIMUM	./src/yacc/y.tab.c	351;"	d	file:
YYSTACK_RELOCATE	./src/yacc/y.tab.c	382;"	d	file:
YYSTYPE	./src/yacc/y.tab.c	/^	YYSTYPE;$/;"	t	typeref:union:YYSTYPE	file:
YYSTYPE	./src/yacc/y.tab.c	/^typedef union YYSTYPE$/;"	u	file:
YYSTYPE_IS_DECLARED	./src/yacc/y.tab.c	173;"	d	file:
YYSTYPE_IS_TRIVIAL	./src/yacc/y.tab.c	174;"	d	file:
YYTABLE_NINF	./src/yacc/y.tab.c	574;"	d	file:
YYTERROR	./src/yacc/y.tab.c	678;"	d	file:
YYTOKENTYPE	./src/yacc/y.tab.c	65;"	d	file:
YYTOKEN_TABLE	./src/yacc/y.tab.c	155;"	d	file:
YYTRANSLATE	./src/yacc/y.tab.c	413;"	d	file:
YYUNDEFTOK	./src/yacc/y.tab.c	410;"	d	file:
YYUSE	./src/yacc/y.tab.c	246;"	d	file:
YYUSE	./src/yacc/y.tab.c	248;"	d	file:
YY_	./src/yacc/y.tab.c	236;"	d	file:
YY_	./src/yacc/y.tab.c	240;"	d	file:
YY_LOCATION_PRINT	./src/yacc/y.tab.c	714;"	d	file:
YY_LOCATION_PRINT	./src/yacc/y.tab.c	719;"	d	file:
YY_REDUCE_PRINT	./src/yacc/y.tab.c	876;"	d	file:
YY_REDUCE_PRINT	./src/yacc/y.tab.c	889;"	d	file:
YY_STACK_PRINT	./src/yacc/y.tab.c	838;"	d	file:
YY_STACK_PRINT	./src/yacc/y.tab.c	888;"	d	file:
YY_SYMBOL_PRINT	./src/yacc/y.tab.c	746;"	d	file:
YY_SYMBOL_PRINT	./src/yacc/y.tab.c	887;"	d	file:
YaccParser	./src/yacc/YaccParser.cxx	/^namespace YaccParser {$/;"	n	file:
YaccParser	./src/yacc/YaccParser.hxx	/^namespace YaccParser {$/;"	n
Zero	./src/emucore/m6502/src/M6502.hxx	/^      Zero, ZeroX, ZeroY$/;"	e	enum:M6502::AddressingMode
ZeroX	./src/emucore/m6502/src/M6502.hxx	/^      Zero, ZeroX, ZeroY$/;"	e	enum:M6502::AddressingMode
ZeroY	./src/emucore/m6502/src/M6502.hxx	/^      Zero, ZeroX, ZeroY$/;"	e	enum:M6502::AddressingMode
_MOUSEX_PADDLE	./src/emucore/Paddles.cxx	/^int Paddles::_MOUSEX_PADDLE = -1;$/;"	m	class:Paddles	file:
_MOUSEX_PADDLE	./src/emucore/Paddles.hxx	/^    static int _MOUSEX_PADDLE;$/;"	m	class:Paddles
_MOUSEY_PADDLE	./src/emucore/Paddles.cxx	/^int Paddles::_MOUSEY_PADDLE = -1;$/;"	m	class:Paddles	file:
_MOUSEY_PADDLE	./src/emucore/Paddles.hxx	/^    static int _MOUSEY_PADDLE;$/;"	m	class:Paddles
_PADDLE_SPEED	./src/emucore/Paddles.cxx	/^int Paddles::_PADDLE_SPEED = 6;$/;"	m	class:Paddles	file:
_PADDLE_SPEED	./src/emucore/Paddles.hxx	/^    static int _PADDLE_SPEED;$/;"	m	class:Paddles
_RawFrameBufferInfo	./src/wince/FrameBufferWinCE.hxx	/^typedef struct _RawFrameBufferInfo$/;"	s
_STDLIB_H	./src/yacc/y.tab.c	290;"	d	file:
_STDLIB_H	./src/yacc/y.tab.c	318;"	d	file:
_WHEEL_LINES	./src/gui/ScrollBarWidget.cxx	/^int ScrollBarWidget::_WHEEL_LINES = 4;$/;"	m	class:ScrollBarWidget	file:
_WHEEL_LINES	./src/gui/ScrollBarWidget.hxx	/^    static int _WHEEL_LINES;$/;"	m	class:ScrollBarWidget
__USE_ISOC99	./src/emucore/rsynth/opsynth.c	23;"	d	file:
_activeTab	./src/gui/TabWidget.hxx	/^    int     _activeTab;$/;"	m	class:TabWidget
_addrList	./src/debugger/gui/DataGridWidget.hxx	/^    IntArray    _addrList;$/;"	m	class:DataGridWidget
_addrStringList	./src/debugger/gui/DataGridWidget.hxx	/^    StringList  _addrStringList;$/;"	m	class:DataGridWidget
_align	./src/gui/Widget.hxx	/^    TextAlignment _align;$/;"	m	class:StaticTextWidget
_backupString	./src/debugger/gui/DataGridWidget.hxx	/^    string  _backupString;$/;"	m	class:DataGridWidget
_backupString	./src/gui/EditTextWidget.hxx	/^    string _backupString;$/;"	m	class:EditTextWidget
_backupString	./src/gui/ListWidget.hxx	/^    string     _backupString;$/;"	m	class:ListWidget
_base	./src/debugger/gui/DataGridWidget.hxx	/^    BaseFormat _base;$/;"	m	class:DataGridWidget
_bgcolor	./src/gui/Widget.hxx	/^    int        _bgcolor;$/;"	m	class:Widget
_bgcolorhi	./src/gui/Widget.hxx	/^    int        _bgcolorhi;$/;"	m	class:Widget
_bits	./src/debugger/gui/DataGridWidget.hxx	/^    int  _bits;$/;"	m	class:DataGridWidget
_boss	./src/gui/Widget.hxx	/^    GuiObject* _boss;$/;"	m	class:Widget
_boxY	./src/gui/Widget.hxx	/^    int _boxY;$/;"	m	class:CheckboxWidget
_buffer	./src/debugger/gui/PromptWidget.hxx	/^    int  _buffer[kBufferSize];$/;"	m	class:PromptWidget
_buffer	./src/gui/PopUpWidget.hxx	/^    uInt8*       _buffer;$/;"	m	class:PopUpDialog
_cancelWidget	./src/gui/Dialog.hxx	/^    Widget* _cancelWidget;$/;"	m	class:Dialog
_capacity	./src/common/Array.hxx	/^    int _capacity;$/;"	m	class:Common::Array
_caretInverse	./src/gui/EditableWidget.hxx	/^    bool  _caretInverse;$/;"	m	class:EditableWidget
_caretInverse	./src/gui/ListWidget.hxx	/^    bool _caretInverse;$/;"	m	class:ListWidget
_caretPos	./src/gui/EditableWidget.hxx	/^    int   _caretPos;$/;"	m	class:EditableWidget
_caretTime	./src/gui/EditableWidget.hxx	/^    int   _caretTime;$/;"	m	class:EditableWidget
_caretVisible	./src/gui/EditableWidget.hxx	/^    bool  _caretVisible;$/;"	m	class:EditableWidget
_center	./src/gui/Dialog.hxx	/^    bool    _center;$/;"	m	class:Dialog
_changedList	./src/debugger/gui/DataGridWidget.hxx	/^    BoolArray   _changedList;$/;"	m	class:DataGridWidget
_changedList	./src/debugger/gui/ToggleWidget.hxx	/^    BoolArray  _changedList;$/;"	m	class:ToggleWidget
_checkList	./src/gui/CheckListWidget.hxx	/^    CheckboxArray _checkList;$/;"	m	class:CheckListWidget
_clickX	./src/gui/PopUpWidget.hxx	/^    int          _clickX, _clickY;$/;"	m	class:PopUpDialog
_clickY	./src/gui/PopUpWidget.hxx	/^    int          _clickX, _clickY;$/;"	m	class:PopUpDialog
_clippedText	./src/gui/EditableWidget.cxx	/^string EditableWidget::_clippedText = "";$/;"	m	class:EditableWidget	file:
_clippedText	./src/gui/EditableWidget.hxx	/^    static string _clippedText;$/;"	m	class:EditableWidget
_cmd	./src/debugger/gui/ColorWidget.hxx	/^    int	_cmd;$/;"	m	class:ColorWidget
_cmd	./src/gui/BrowserDialog.hxx	/^    int	_cmd;$/;"	m	class:BrowserDialog
_cmd	./src/gui/PopUpWidget.hxx	/^    int	_cmd;$/;"	m	class:PopUpWidget
_cmd	./src/gui/Widget.hxx	/^    int    _cmd;$/;"	m	class:ButtonWidget
_colWidth	./src/debugger/gui/DataGridWidget.hxx	/^    int  _colWidth;$/;"	m	class:DataGridWidget
_colWidth	./src/debugger/gui/ToggleWidget.hxx	/^    int  _colWidth;$/;"	m	class:ToggleWidget
_color	./src/debugger/gui/ColorWidget.hxx	/^    int _color;$/;"	m	class:ColorWidget
_cols	./src/debugger/gui/DataGridWidget.hxx	/^    int  _cols;$/;"	m	class:DataGridWidget
_cols	./src/debugger/gui/ToggleWidget.hxx	/^    int  _cols;$/;"	m	class:ToggleWidget
_cols	./src/gui/ListWidget.hxx	/^    int  _cols;$/;"	m	class:ListWidget
_console_font_bits	./src/gui/ConsoleFont.hxx	/^static const uInt32 _console_font_bits[] = {$/;"	v
_console_sysfont_offset	./src/gui/ConsoleFont.hxx	/^static const uInt16 _console_sysfont_offset[] = {$/;"	v
_currentCol	./src/debugger/gui/DataGridWidget.hxx	/^    int  _currentCol;$/;"	m	class:DataGridWidget
_currentCol	./src/debugger/gui/ToggleWidget.hxx	/^    int  _currentCol;$/;"	m	class:ToggleWidget
_currentKeyDown	./src/debugger/gui/DataGridWidget.hxx	/^    int     _currentKeyDown;$/;"	m	class:DataGridWidget
_currentKeyDown	./src/gui/ListWidget.hxx	/^    int  _currentKeyDown;$/;"	m	class:ListWidget
_currentPath	./src/gui/BrowserDialog.hxx	/^    StaticTextWidget* _currentPath;$/;"	m	class:BrowserDialog
_currentPos	./src/debugger/gui/PromptWidget.hxx	/^    int  _currentPos;$/;"	m	class:PromptWidget
_currentPos	./src/gui/ListWidget.hxx	/^    int  _currentPos;$/;"	m	class:ListWidget
_currentPos	./src/gui/ScrollBarWidget.hxx	/^    int _currentPos;$/;"	m	class:ScrollBarWidget
_currentRow	./src/debugger/gui/DataGridWidget.hxx	/^    int  _currentRow;$/;"	m	class:DataGridWidget
_currentRow	./src/debugger/gui/ToggleWidget.hxx	/^    int  _currentRow;$/;"	m	class:ToggleWidget
_data	./src/common/Array.hxx	/^    T *_data;$/;"	m	class:Common::Array
_decButton	./src/debugger/gui/DataGridOpsWidget.hxx	/^    ButtonWidget* _decButton;$/;"	m	class:DataGridOpsWidget
_dirty	./src/gui/GuiObject.hxx	/^    bool _dirty;$/;"	m	class:GuiObject
_displayName	./src/gp2x/FSNodeGP2X.cxx	/^    string _displayName;$/;"	m	class:POSIXFilesystemNode	file:
_displayName	./src/unix/FSNodePOSIX.cxx	/^    string _displayName;$/;"	m	class:POSIXFilesystemNode	file:
_displayName	./src/win32/FSNodeWin32.cxx	/^    string _displayName;$/;"	m	class:WindowsFilesystemNode	file:
_displayName	./src/wince/FSNodeWinCE.cxx	/^    string _displayName;$/;"	m	class:WindowsFilesystemNode	file:
_dragWidget	./src/gui/Dialog.hxx	/^    Widget* _dragWidget;$/;"	m	class:Dialog
_draggingPart	./src/gui/ScrollBarWidget.hxx	/^    Part _draggingPart;$/;"	m	class:ScrollBarWidget
_drawBox	./src/gui/Widget.hxx	/^    bool _drawBox;$/;"	m	class:CheckboxWidget
_editMode	./src/debugger/gui/DataGridWidget.hxx	/^    bool    _editMode;$/;"	m	class:DataGridWidget
_editMode	./src/gui/ListWidget.hxx	/^    bool _editMode;$/;"	m	class:ListWidget
_editScrollOffset	./src/gui/EditableWidget.hxx	/^    int   _editScrollOffset;$/;"	m	class:EditableWidget
_editString	./src/gui/EditableWidget.hxx	/^    string _editString;$/;"	m	class:EditableWidget
_editable	./src/gui/EditTextWidget.hxx	/^    int    _editable;$/;"	m	class:EditTextWidget
_editable	./src/gui/EditableWidget.hxx	/^    bool   _editable;$/;"	m	class:EditableWidget
_editable	./src/gui/Widget.hxx	/^    bool          _editable;$/;"	m	class:StaticTextWidget
_entries	./src/debugger/gui/ContextMenu.hxx	/^    StringList _entries;$/;"	m	class:ContextMenu
_entries	./src/gui/PopUpWidget.hxx	/^    EntryList _entries;$/;"	m	class:PopUpWidget
_entriesPerColumn	./src/gui/PopUpWidget.hxx	/^    int          _entriesPerColumn;$/;"	m	class:PopUpDialog
_entriesPerPage	./src/gui/ScrollBarWidget.hxx	/^    int _entriesPerPage;$/;"	m	class:ScrollBarWidget
_exitedEarly	./src/debugger/gui/PromptWidget.hxx	/^    bool _exitedEarly;$/;"	m	class:PromptWidget
_fileList	./src/gui/BrowserDialog.hxx	/^    StringListWidget* _fileList;$/;"	m	class:BrowserDialog
_fillColor	./src/gui/Widget.hxx	/^    int _fillColor;$/;"	m	class:CheckboxWidget
_fillRect	./src/gui/Widget.hxx	/^    bool _fillRect;$/;"	m	class:CheckboxWidget
_firstLineInBuffer	./src/debugger/gui/PromptWidget.hxx	/^    int  _firstLineInBuffer;$/;"	m	class:PromptWidget
_firstTime	./src/debugger/gui/PromptWidget.hxx	/^    bool _firstTime;$/;"	m	class:PromptWidget
_firstTime	./src/gui/TabWidget.hxx	/^    bool    _firstTime;$/;"	m	class:TabWidget
_firstWidget	./src/gui/GuiObject.hxx	/^    Widget* _firstWidget;$/;"	m	class:GuiObject
_flags	./src/gui/Widget.hxx	/^    int        _flags;$/;"	m	class:Widget
_focusID	./src/gui/Dialog.hxx	/^    int _focusID;$/;"	m	class:Dialog
_focusList	./src/gui/GuiObject.hxx	/^    WidgetArray _focusList;$/;"	m	class:GuiObject
_focusedWidget	./src/gui/Dialog.hxx	/^    Widget* _focusedWidget;$/;"	m	class:Dialog
_font	./src/debugger/gui/ContextMenu.hxx	/^    const GUI::Font* _font;$/;"	m	class:ContextMenu
_font	./src/gui/Widget.hxx	/^    GUI::Font* _font;$/;"	m	class:Widget
_fontHeight	./src/gui/Widget.hxx	/^    int        _fontHeight;$/;"	m	class:Widget
_fontWidth	./src/gui/Widget.hxx	/^    int        _fontWidth;$/;"	m	class:Widget
_getcwd	./src/win32/SDL_win32_main.c	15;"	d	file:
_getcwd	./src/win32/SDL_win32_main.c	16;"	d	file:
_goUpButton	./src/gui/BrowserDialog.hxx	/^    ButtonWidget*     _goUpButton;$/;"	m	class:BrowserDialog
_h	./src/gui/GuiObject.hxx	/^    int _w, _h;$/;"	m	class:GuiObject
_hasFocus	./src/gui/Widget.hxx	/^    bool       _hasFocus;$/;"	m	class:Widget
_highlightedItem	./src/gui/ListWidget.hxx	/^    int  _highlightedItem;$/;"	m	class:ListWidget
_hiliteList	./src/debugger/gui/DataGridWidget.hxx	/^    BoolArray   _hiliteList;$/;"	m	class:DataGridWidget
_history	./src/debugger/gui/PromptWidget.hxx	/^    char _history[kHistorySize][kLineBufferSize];$/;"	m	class:PromptWidget
_historyIndex	./src/debugger/gui/PromptWidget.hxx	/^    int _historyIndex;$/;"	m	class:PromptWidget
_historyLine	./src/debugger/gui/PromptWidget.hxx	/^    int _historyLine;$/;"	m	class:PromptWidget
_historySize	./src/debugger/gui/PromptWidget.hxx	/^    int _historySize;$/;"	m	class:PromptWidget
_holdFocus	./src/gui/Widget.hxx	/^    bool _holdFocus;$/;"	m	class:CheckboxWidget
_id	./src/gui/Widget.hxx	/^    int        _id;$/;"	m	class:Widget
_incButton	./src/debugger/gui/DataGridOpsWidget.hxx	/^    ButtonWidget* _incButton;$/;"	m	class:DataGridOpsWidget
_invButton	./src/debugger/gui/DataGridOpsWidget.hxx	/^    ButtonWidget* _invButton;$/;"	m	class:DataGridOpsWidget
_inverse	./src/debugger/gui/PromptWidget.hxx	/^    bool _inverse;$/;"	m	class:PromptWidget
_isDirectory	./src/gp2x/FSNodeGP2X.cxx	/^    bool _isDirectory;$/;"	m	class:POSIXFilesystemNode	file:
_isDirectory	./src/unix/FSNodePOSIX.cxx	/^    bool _isDirectory;$/;"	m	class:POSIXFilesystemNode	file:
_isDirectory	./src/win32/FSNodeWin32.cxx	/^    bool   _isDirectory;$/;"	m	class:WindowsFilesystemNode	file:
_isDirectory	./src/wince/FSNodeWinCE.cxx	/^    bool   _isDirectory;$/;"	m	class:WindowsFilesystemNode	file:
_isDragging	./src/gui/Widget.hxx	/^    bool _isDragging;$/;"	m	class:SliderWidget
_isPseudoRoot	./src/win32/FSNodeWin32.cxx	/^    bool   _isPseudoRoot;$/;"	m	class:WindowsFilesystemNode	file:
_isPseudoRoot	./src/wince/FSNodeWinCE.cxx	/^    bool   _isPseudoRoot;$/;"	m	class:WindowsFilesystemNode	file:
_isValid	./src/gp2x/FSNodeGP2X.cxx	/^    bool _isValid;$/;"	m	class:POSIXFilesystemNode	file:
_isValid	./src/unix/FSNodePOSIX.cxx	/^    bool _isValid;$/;"	m	class:POSIXFilesystemNode	file:
_isValid	./src/win32/FSNodeWin32.cxx	/^    bool   _isValid;$/;"	m	class:WindowsFilesystemNode	file:
_isValid	./src/wince/FSNodeWinCE.cxx	/^    bool   _isValid;$/;"	m	class:WindowsFilesystemNode	file:
_isdir	./src/gui/GameList.hxx	/^        bool   _isdir;$/;"	m	class:GameList::Entry
_kConsoleCharHeight	./src/debugger/gui/PromptWidget.hxx	/^    int _kConsoleCharWidth, _kConsoleCharHeight, _kConsoleLineHeight;$/;"	m	class:PromptWidget
_kConsoleCharWidth	./src/debugger/gui/PromptWidget.hxx	/^    int _kConsoleCharWidth, _kConsoleCharHeight, _kConsoleLineHeight;$/;"	m	class:PromptWidget
_kConsoleLineHeight	./src/debugger/gui/PromptWidget.hxx	/^    int _kConsoleCharWidth, _kConsoleCharHeight, _kConsoleLineHeight;$/;"	m	class:PromptWidget
_label	./src/gui/PopUpWidget.hxx	/^    string    _label;$/;"	m	class:PopUpWidget
_label	./src/gui/Widget.hxx	/^    string        _label;$/;"	m	class:StaticTextWidget
_labelWidth	./src/gui/PopUpWidget.hxx	/^    int       _labelWidth;$/;"	m	class:PopUpWidget
_labelWidth	./src/gui/Widget.hxx	/^    int  _labelWidth;$/;"	m	class:SliderWidget
_lineWidth	./src/debugger/gui/PromptWidget.hxx	/^    int  _lineWidth;$/;"	m	class:PromptWidget
_linesInBuffer	./src/debugger/gui/PromptWidget.hxx	/^    int  _linesInBuffer;$/;"	m	class:PromptWidget
_linesPerPage	./src/debugger/gui/PromptWidget.hxx	/^    int  _linesPerPage;$/;"	m	class:PromptWidget
_list	./src/gui/ListWidget.hxx	/^    StringList _list;$/;"	m	class:ListWidget
_lowerBound	./src/debugger/gui/DataGridWidget.hxx	/^    int  _lowerBound;$/;"	m	class:DataGridWidget
_makeDirty	./src/debugger/gui/PromptWidget.hxx	/^    bool _makeDirty;$/;"	m	class:PromptWidget
_md5	./src/gui/GameList.hxx	/^        string _md5;$/;"	m	class:GameList::Entry
_mode	./src/gui/BrowserDialog.hxx	/^    FilesystemNode::ListMode _mode;$/;"	m	class:BrowserDialog
_mouseWidget	./src/gui/Dialog.hxx	/^    Widget* _mouseWidget;$/;"	m	class:Dialog
_name	./src/gui/GameList.hxx	/^        string _name;$/;"	m	class:GameList::Entry
_negButton	./src/debugger/gui/DataGridOpsWidget.hxx	/^    ButtonWidget* _negButton;$/;"	m	class:DataGridOpsWidget
_next	./src/gui/Widget.hxx	/^    Widget*    _next;$/;"	m	class:Widget
_node	./src/gui/BrowserDialog.hxx	/^    FilesystemNode _node;$/;"	m	class:BrowserDialog
_nodeList	./src/gui/BrowserDialog.hxx	/^    GameList*      _nodeList;$/;"	m	class:BrowserDialog
_numBits	./src/debugger/gui/TogglePixelWidget.hxx	/^    unsigned int _numBits;$/;"	m	class:TogglePixelWidget
_numEntries	./src/gui/ScrollBarWidget.hxx	/^    int _numEntries;$/;"	m	class:ScrollBarWidget
_numberingMode	./src/gui/StringListWidget.hxx	/^    NumberingMode _numberingMode;$/;"	m	class:StringListWidget
_offList	./src/debugger/gui/ToggleBitWidget.hxx	/^    StringList  _offList;$/;"	m	class:ToggleBitWidget
_okWidget	./src/gui/Dialog.hxx	/^    Widget* _okWidget;$/;"	m	class:Dialog
_oldSelection	./src/gui/PopUpWidget.hxx	/^    int          _oldSelection;$/;"	m	class:PopUpDialog
_onList	./src/debugger/gui/ToggleBitWidget.hxx	/^    StringList  _onList;$/;"	m	class:ToggleBitWidget
_openTime	./src/gui/PopUpWidget.hxx	/^    int          _openTime;$/;"	m	class:PopUpDialog
_opsWidget	./src/debugger/gui/DataGridWidget.hxx	/^    DataGridOpsWidget* _opsWidget;$/;"	m	class:DataGridWidget
_ourButtonGroup	./src/gui/Dialog.hxx	/^    WidgetArray _ourButtonGroup;$/;"	m	class:Dialog
_ourFocusList	./src/gui/Dialog.hxx	/^    FocusList   _ourFocusList;$/;"	m	class:Dialog
_ourTab	./src/gui/Dialog.hxx	/^    TabWidget*  _ourTab;$/;"	m	class:Dialog
_part	./src/gui/ScrollBarWidget.hxx	/^    Part _part;$/;"	m	class:ScrollBarWidget
_path	./src/gp2x/FSNodeGP2X.cxx	/^    string _path;$/;"	m	class:POSIXFilesystemNode	file:
_path	./src/gui/GameList.hxx	/^        string _path;$/;"	m	class:GameList::Entry
_path	./src/unix/FSNodePOSIX.cxx	/^    string _path;$/;"	m	class:POSIXFilesystemNode	file:
_path	./src/win32/FSNodeWin32.cxx	/^    string _path;$/;"	m	class:WindowsFilesystemNode	file:
_path	./src/wince/FSNodeWinCE.cxx	/^    string _path;$/;"	m	class:WindowsFilesystemNode	file:
_pixelColor	./src/debugger/gui/TogglePixelWidget.hxx	/^    int          _pixelColor;$/;"	m	class:TogglePixelWidget
_popUpBoss	./src/gui/PopUpWidget.hxx	/^    PopUpWidget* _popUpBoss;$/;"	m	class:PopUpDialog
_promptEndPos	./src/debugger/gui/PromptWidget.hxx	/^    int  _promptEndPos;$/;"	m	class:PromptWidget
_promptStartPos	./src/debugger/gui/PromptWidget.hxx	/^    int  _promptStartPos;$/;"	m	class:PromptWidget
_quickSelectStr	./src/gui/ListWidget.hxx	/^    string     _quickSelectStr;$/;"	m	class:ListWidget
_quickSelectTime	./src/gui/ListWidget.hxx	/^    int        _quickSelectTime;$/;"	m	class:ListWidget
_realNode	./src/emucore/FSNode.hxx	/^    AbstractFilesystemNode *_realNode;$/;"	m	class:FilesystemNode
_refCount	./src/emucore/FSNode.hxx	/^    int *_refCount;$/;"	m	class:FilesystemNode
_result	./src/gui/Dialog.hxx	/^    int _result;$/;"	m	class:Dialog
_rowHeight	./src/debugger/gui/ContextMenu.hxx	/^    int _rowHeight;$/;"	m	class:ContextMenu
_rowHeight	./src/debugger/gui/DataGridWidget.hxx	/^    int  _rowHeight;$/;"	m	class:DataGridWidget
_rowHeight	./src/debugger/gui/ToggleWidget.hxx	/^    int  _rowHeight;$/;"	m	class:ToggleWidget
_rows	./src/debugger/gui/DataGridWidget.hxx	/^    int  _rows;$/;"	m	class:DataGridWidget
_rows	./src/debugger/gui/ToggleWidget.hxx	/^    int  _rows;$/;"	m	class:ToggleWidget
_rows	./src/gui/ListWidget.hxx	/^    int  _rows;$/;"	m	class:ListWidget
_scrollBar	./src/debugger/gui/PromptWidget.hxx	/^    ScrollBarWidget* _scrollBar;$/;"	m	class:PromptWidget
_scrollBar	./src/gui/ListWidget.hxx	/^    ScrollBarWidget* _scrollBar;$/;"	m	class:ListWidget
_scrollLine	./src/debugger/gui/PromptWidget.hxx	/^    int  _scrollLine;$/;"	m	class:PromptWidget
_selectedItem	./src/debugger/gui/ContextMenu.hxx	/^    int _selectedItem;$/;"	m	class:ContextMenu
_selectedItem	./src/debugger/gui/DataGridWidget.hxx	/^    int     _selectedItem;$/;"	m	class:DataGridWidget
_selectedItem	./src/debugger/gui/ToggleWidget.hxx	/^    int  _selectedItem;$/;"	m	class:ToggleWidget
_selectedItem	./src/gui/ListWidget.hxx	/^    int  _selectedItem;$/;"	m	class:ListWidget
_selectedItem	./src/gui/PopUpWidget.hxx	/^    int       _selectedItem;$/;"	m	class:PopUpWidget
_selection	./src/gui/PopUpWidget.hxx	/^    int          _selection;$/;"	m	class:PopUpDialog
_shiftLeftButton	./src/debugger/gui/DataGridOpsWidget.hxx	/^    ButtonWidget* _shiftLeftButton;$/;"	m	class:DataGridOpsWidget
_shiftRightButton	./src/debugger/gui/DataGridOpsWidget.hxx	/^    ButtonWidget* _shiftRightButton;$/;"	m	class:DataGridOpsWidget
_size	./src/common/Array.hxx	/^    int _size;$/;"	m	class:Common::Array
_size	./src/gui/Stack.hxx	/^    int _size;$/;"	m	class:FixedStack
_sliderDeltaMouseDownPos	./src/gui/ScrollBarWidget.hxx	/^    int _sliderDeltaMouseDownPos;$/;"	m	class:ScrollBarWidget
_sliderHeight	./src/gui/ScrollBarWidget.hxx	/^    int _sliderHeight;$/;"	m	class:ScrollBarWidget
_sliderPos	./src/gui/ScrollBarWidget.hxx	/^    int _sliderPos;$/;"	m	class:ScrollBarWidget
_stack	./src/gui/Stack.hxx	/^    T   _stack[MAX_SIZE];$/;"	m	class:FixedStack
_state	./src/gui/Widget.hxx	/^    bool _state;$/;"	m	class:CheckboxWidget
_stateList	./src/debugger/gui/ToggleWidget.hxx	/^    BoolArray  _stateList;$/;"	m	class:ToggleWidget
_stateList	./src/gui/CheckListWidget.hxx	/^    BoolArray     _stateList;$/;"	m	class:CheckListWidget
_stellaLarge_font_bits	./src/gui/StellaLargeFont.hxx	/^static const uInt32 _stellaLarge_font_bits[] = {$/;"	v
_stellaLarge_sysfont_width	./src/gui/StellaLargeFont.hxx	/^static const unsigned char _stellaLarge_sysfont_width[] = {$/;"	v
_stella_font_bits	./src/gui/StellaFont.hxx	/^static const uInt32 _stella_font_bits[] = {$/;"	v
_stella_sysfont_width	./src/gui/StellaFont.hxx	/^static const unsigned char _stella_sysfont_width[] = {$/;"	v
_stepValue	./src/gui/Widget.hxx	/^    int  _value, _stepValue;$/;"	m	class:SliderWidget
_swapBits	./src/debugger/gui/TogglePixelWidget.hxx	/^    bool         _swapBits;$/;"	m	class:TogglePixelWidget
_tabHeight	./src/gui/TabWidget.hxx	/^    int     _tabHeight;$/;"	m	class:TabWidget
_tabWidth	./src/gui/TabWidget.hxx	/^    int     _tabWidth;$/;"	m	class:TabWidget
_tabs	./src/gui/TabWidget.hxx	/^    TabList _tabs;$/;"	m	class:TabWidget
_target	./src/gui/Command.hxx	/^    CommandReceiver* _target;$/;"	m	class:CommandSender
_textY	./src/gui/Widget.hxx	/^    int _textY;$/;"	m	class:CheckboxWidget
_textcolor	./src/gui/Widget.hxx	/^    int        _textcolor;$/;"	m	class:Widget
_textcolorhi	./src/gui/Widget.hxx	/^    int        _textcolorhi;$/;"	m	class:Widget
_title	./src/gui/BrowserDialog.hxx	/^    StaticTextWidget* _title;$/;"	m	class:BrowserDialog
_twoColumns	./src/gui/PopUpWidget.hxx	/^    bool         _twoColumns;$/;"	m	class:PopUpDialog
_type	./src/gui/Widget.hxx	/^    int        _type;$/;"	m	class:Widget
_upperBound	./src/debugger/gui/DataGridWidget.hxx	/^    int  _upperBound;$/;"	m	class:DataGridWidget
_value	./src/gui/Widget.hxx	/^    int  _value, _stepValue;$/;"	m	class:SliderWidget
_valueList	./src/debugger/gui/DataGridWidget.hxx	/^    IntArray    _valueList;$/;"	m	class:DataGridWidget
_valueMax	./src/gui/Widget.hxx	/^    int  _valueMin, _valueMax;$/;"	m	class:SliderWidget
_valueMin	./src/gui/Widget.hxx	/^    int  _valueMin, _valueMax;$/;"	m	class:SliderWidget
_valueStringList	./src/debugger/gui/DataGridWidget.hxx	/^    StringList  _valueStringList;$/;"	m	class:DataGridWidget
_visible	./src/gui/Dialog.hxx	/^    bool    _visible;$/;"	m	class:Dialog
_w	./src/gui/GuiObject.hxx	/^    int _w, _h;$/;"	m	class:GuiObject
_x	./src/gui/GuiObject.hxx	/^    int _x, _y;$/;"	m	class:GuiObject
_y	./src/gui/GuiObject.hxx	/^    int _x, _y;$/;"	m	class:GuiObject
_zeroButton	./src/debugger/gui/DataGridOpsWidget.hxx	/^    ButtonWidget* _zeroButton;$/;"	m	class:DataGridOpsWidget
a	./src/debugger/CpuDebug.hxx	/^    int a() { return mySystem->m6502().A; }$/;"	f	class:CpuDebug
a	./src/emucore/rsynth/holmes.c	/^    float a;$/;"	m	struct:__anon11	file:
a	./src/emucore/rsynth/opsynth.c	/^    float a;$/;"	m	struct:__anon8	file:
a	./src/emucore/rsynth/opsynth.c	/^    float a;$/;"	m	struct:__anon9	file:
abortEditMode	./src/debugger/gui/DataGridWidget.cxx	/^void DataGridWidget::abortEditMode()$/;"	f	class:DataGridWidget
abortEditMode	./src/gui/EditTextWidget.cxx	/^void EditTextWidget::abortEditMode()$/;"	f	class:EditTextWidget
abortEditMode	./src/gui/EditableWidget.hxx	/^    virtual void abortEditMode() { clearFlags(WIDGET_WANTS_RAWDATA); }$/;"	f	class:EditableWidget
abortEditMode	./src/gui/ListWidget.cxx	/^void ListWidget::abortEditMode()$/;"	f	class:ListWidget
about	./src/common/FrameBufferGL.cxx	/^string FrameBufferGL::about() const$/;"	f	class:FrameBufferGL
about	./src/common/FrameBufferSoft.cxx	/^string FrameBufferSoft::about() const$/;"	f	class:FrameBufferSoft
about	./src/emucore/Cart.hxx	/^    static const string& about() { return myAboutString; }$/;"	f	class:Cartridge
about	./src/emucore/Console.hxx	/^    const string& about() const { return myAboutString; }$/;"	f	class:Console
about	./src/gp2x/FrameBufferGP2X.cxx	/^string FrameBufferGP2X::about() const$/;"	f	class:FrameBufferGP2X
action	./src/emucore/EventHandler.hxx	/^      const char* action;$/;"	m	struct:EventHandler::ActionList
actionAtIndex	./src/emucore/EventHandler.cxx	/^string EventHandler::actionAtIndex(int idx, EventMode mode)$/;"	f	class:EventHandler
activateTabs	./src/gui/TabWidget.cxx	/^void TabWidget::activateTabs()$/;"	f	class:TabWidget
active	./src/emucore/EventHandler.hxx	/^      bool active;$/;"	m	struct:EventHandler::JoyMouse
add	./src/cheat/CheatManager.cxx	/^const Cheat* CheatManager::add(const string& name, const string& code,$/;"	f	class:CheatManager
add	./src/common/RectList.cxx	/^void RectList::add(SDL_Rect* newRect)$/;"	f	class:RectList
add	./src/common/VideoModeList.hxx	/^    void add(VideoMode mode) { myModeList.push_back(mode); }$/;"	f	class:VideoModeList
addBGroupToFocusList	./src/gui/Dialog.hxx	/^    void addBGroupToFocusList(WidgetArray& list) { _ourButtonGroup = list; }$/;"	f	class:Dialog
addBigButton	./src/gui/OptionsDialog.cxx	45;"	d	file:
addButton	./src/gui/Dialog.cxx	/^ButtonWidget* Dialog::addButton(const GUI::Font& font, int x, int y,$/;"	f	class:Dialog
addCancelWidget	./src/gui/Dialog.hxx	/^    void addCancelWidget(Widget* w) { _cancelWidget = w; }$/;"	f	class:Dialog
addCheat	./src/cheat/CheatCodeDialog.cxx	/^void CheatCodeDialog::addCheat()$/;"	f	class:CheatCodeDialog
addCondBreak	./src/emucore/m6502/src/M6502.cxx	/^unsigned int M6502::addCondBreak(Expression *e, string name)$/;"	f	class:M6502
addDialog	./src/gui/DialogContainer.cxx	/^void DialogContainer::addDialog(Dialog* d)$/;"	f	class:DialogContainer
addDirtyRect	./src/common/FrameBufferGL.cxx	/^void FrameBufferGL::addDirtyRect(uInt32 x, uInt32 y, uInt32 w, uInt32 h)$/;"	f	class:FrameBufferGL
addDirtyRect	./src/common/FrameBufferSoft.cxx	/^void FrameBufferSoft::addDirtyRect(uInt32 x, uInt32 y, uInt32 w, uInt32 h)$/;"	f	class:FrameBufferSoft
addDirtyRect	./src/gp2x/FrameBufferGP2X.cxx	/^void FrameBufferGP2X::addDirtyRect(uInt32 x, uInt32 y, uInt32 w, uInt32 h)$/;"	f	class:FrameBufferGP2X
addEquate	./src/debugger/EquateList.cxx	/^void EquateList::addEquate(const string& label, int address)$/;"	f	class:EquateList
addFile	./src/win32/FSNodeWin32.cxx	/^void WindowsFilesystemNode::addFile(FSList& list, ListMode mode,$/;"	f	class:WindowsFilesystemNode
addFile	./src/wince/FSNodeWinCE.cxx	/^void WindowsFilesystemNode::addFile(FSList& list, ListMode mode,$/;"	f	class:WindowsFilesystemNode
addFocusWidget	./src/gui/Dialog.cxx	/^void Dialog::addFocusWidget(Widget* w)$/;"	f	class:Dialog
addFocusWidget	./src/gui/Widget.hxx	/^    void addFocusWidget(Widget* w) { _focusList.push_back(w); }$/;"	f	class:Widget
addFunction	./src/debugger/Debugger.cxx	/^void Debugger::addFunction(const string& name, const string& definition,$/;"	f	class:Debugger
addJoyAxisMapping	./src/emucore/EventHandler.cxx	/^bool EventHandler::addJoyAxisMapping(Event::Type event, EventMode mode,$/;"	f	class:EventHandler
addJoyHatMapping	./src/emucore/EventHandler.cxx	/^bool EventHandler::addJoyHatMapping(Event::Type event, EventMode mode,$/;"	f	class:EventHandler
addJoyMapping	./src/emucore/EventHandler.cxx	/^bool EventHandler::addJoyMapping(Event::Type event, EventMode mode,$/;"	f	class:EventHandler
addKeyMapping	./src/emucore/EventHandler.cxx	/^bool EventHandler::addKeyMapping(Event::Type event, EventMode mode, int key)$/;"	f	class:EventHandler
addLabel	./src/debugger/Debugger.cxx	/^void Debugger::addLabel(string label, int address)$/;"	f	class:Debugger
addOKCancelBGroup	./src/gui/Dialog.cxx	/^void Dialog::addOKCancelBGroup(WidgetArray& wid, const GUI::Font& font)$/;"	f	class:Dialog
addOKWidget	./src/gui/Dialog.hxx	/^    void addOKWidget(Widget* w)     { _okWidget = w; }$/;"	f	class:Dialog
addOneShot	./src/cheat/CheatManager.cxx	/^void CheatManager::addOneShot(const string& name, const string& code)$/;"	f	class:CheatManager
addOneShotCheat	./src/cheat/CheatCodeDialog.cxx	/^void CheatCodeDialog::addOneShotCheat()$/;"	f	class:CheatCodeDialog
addPerFrame	./src/cheat/CheatManager.cxx	/^void CheatManager::addPerFrame(Cheat* cheat, bool enable)$/;"	f	class:CheatManager
addRomArea	./src/debugger/gui/DebuggerDialog.cxx	/^void DebuggerDialog::addRomArea()$/;"	f	class:DebuggerDialog
addStatusArea	./src/debugger/gui/DebuggerDialog.cxx	/^void DebuggerDialog::addStatusArea()$/;"	f	class:DebuggerDialog
addTab	./src/gui/TabWidget.cxx	/^int TabWidget::addTab(const string& title)$/;"	f	class:TabWidget
addTabArea	./src/debugger/gui/DebuggerDialog.cxx	/^void DebuggerDialog::addTabArea()$/;"	f	class:DebuggerDialog
addTabWidget	./src/gui/Dialog.hxx	/^    void addTabWidget(TabWidget* w) { _ourTab = w; }$/;"	f	class:Dialog
addTiaArea	./src/debugger/gui/DebuggerDialog.cxx	/^void DebuggerDialog::addTiaArea()$/;"	f	class:DebuggerDialog
addToFocusList	./src/gui/Dialog.cxx	/^void Dialog::addToFocusList(WidgetArray& list, int id)$/;"	f	class:Dialog
addToHistory	./src/debugger/gui/PromptWidget.cxx	/^void PromptWidget::addToHistory(const char *str)$/;"	f	class:PromptWidget
addVDeviceTab	./src/gui/InputDialog.cxx	/^void InputDialog::addVDeviceTab(const GUI::Font& font)$/;"	f	class:InputDialog
addr	./src/common/SoundSDL.hxx	/^      uInt16 addr;$/;"	m	struct:SoundSDL::RegWrite
addr	./src/wince/SoundWinCE.hxx	/^	uInt16 addr;$/;"	m	struct:RegWrite
addrToLabel	./src/debugger/EquateList.hxx	/^    typedef map<int, Equate> addrToLabel;$/;"	t	class:EquateList
address	./src/cheat/BankRomCheat.hxx	/^    uInt16 address;$/;"	m	class:BankRomCheat
address	./src/cheat/CheetahCheat.hxx	/^    uInt16 address;$/;"	m	class:CheetahCheat
address	./src/cheat/RamCheat.hxx	/^    uInt16 address;$/;"	m	class:RamCheat
address	./src/debugger/Equate.hxx	/^  int address;$/;"	m	struct:Equate
address	./src/emucore/m6502/src/M6502.hxx	/^      int address;$/;"	m	struct:M6502::HitTrapInfo
addressingMode	./src/emucore/m6502/src/M6502.cxx	/^M6502::AddressingMode M6502::addressingMode(uInt8 opcode) const$/;"	f	class:M6502
adjustCycleCounter	./src/common/SoundNull.hxx	/^    void adjustCycleCounter(Int32 amount) { }$/;"	f	class:SoundNull
adjustCycleCounter	./src/common/SoundSDL.cxx	/^void SoundSDL::adjustCycleCounter(Int32 amount)$/;"	f	class:SoundSDL
adjustCycleCounter	./src/wince/SoundWinCE.cxx	/^void SoundWinCE::adjustCycleCounter(Int32 amount)$/;"	f	class:SoundWinCE
adjustOffset	./src/gui/EditableWidget.cxx	/^bool EditableWidget::adjustOffset()$/;"	f	class:EditableWidget
adjustVolume	./src/common/SoundNull.hxx	/^    void adjustVolume(Int8 direction) { }$/;"	f	class:SoundNull
adjustVolume	./src/common/SoundSDL.cxx	/^void SoundSDL::adjustVolume(Int8 direction)$/;"	f	class:SoundSDL
adjustVolume	./src/wince/SoundWinCE.cxx	/^void SoundWinCE::adjustVolume(Int8 direction)$/;"	f	class:SoundWinCE
advance	./src/debugger/gui/TiaOutputWidget.cxx	/^void TiaOutputWidget::advance(int frames)$/;"	f	class:TiaOutputWidget
advanceScanline	./src/debugger/gui/TiaOutputWidget.cxx	/^void TiaOutputWidget::advanceScanline(int lines)$/;"	f	class:TiaOutputWidget
alloca	./src/yacc/y.tab.c	283;"	d	file:
allowAllDirections	./src/emucore/EventHandler.hxx	/^    void allowAllDirections(bool allow) { myAllowAllDirectionsFlag = allow; }$/;"	f	class:EventHandler
amp_af	./src/emucore/rsynth/opsynth.c	/^    float amp_af;		\/* ep[af] converted to linear gain  *\/$/;"	m	struct:rsynth_private	file:
amp_asp	./src/emucore/rsynth/opsynth.c	/^    float amp_asp;		\/* ep[asp] converted to linear gain  *\/$/;"	m	struct:rsynth_private	file:
amp_av	./src/emucore/rsynth/opsynth.c	/^    float amp_av;		\/* ep[av] converted to linear gain  *\/$/;"	m	struct:rsynth_private	file:
amp_avc	./src/emucore/rsynth/opsynth.c	/^    float amp_avc;		\/* AVC converted to linear gain  *\/$/;"	m	struct:rsynth_private	file:
amp_bypass	./src/emucore/rsynth/opsynth.c	/^    float amp_bypass;		\/* ep[ab] converted to linear gain  *\/$/;"	m	struct:rsynth_private	file:
amp_turb	./src/emucore/rsynth/opsynth.c	/^    float amp_turb;		\/* Turbuleance in voicing *\/$/;"	m	struct:rsynth_private	file:
amt	./src/emucore/EventHandler.hxx	/^      int x, y, x_amt, y_amt, amt, val, old_val;$/;"	m	struct:EventHandler::JoyMouse
antiresonator	./src/emucore/rsynth/opsynth.c	/^antiresonator(resonator_ptr r, char *name, float input)$/;"	f	file:
appendEntry	./src/gui/PopUpWidget.cxx	/^void PopUpWidget::appendEntry(const string& entry, int tag)$/;"	f	class:PopUpWidget
appendGame	./src/gui/GameList.cxx	/^void GameList::appendGame(const string& name, const string& path,$/;"	f	class:GameList
argCount	./src/debugger/DebuggerParser.hxx	/^    int argCount;$/;"	m	class:DebuggerParser
argStrings	./src/debugger/DebuggerParser.hxx	/^    StringList argStrings;$/;"	m	class:DebuggerParser
args	./src/debugger/DebuggerParser.hxx	/^    IntArray args;$/;"	m	class:DebuggerParser
ascent	./src/gui/Font.hxx	/^  int           ascent;      \/* ascent (baseline) height *\/$/;"	m	struct:__anon35
ascii	./src/gui/DialogContainer.hxx	/^      int ascii;$/;"	m	struct:DialogContainer::__anon38
atariVox	./src/emucore/Console.hxx	/^    AtariVox *atariVox() { return vox; }$/;"	f	class:Console
attach	./src/emucore/OSystem.hxx	/^    void attach(Settings* settings) { mySettings = settings; }$/;"	f	class:OSystem
attach	./src/emucore/m6502/src/M6502.cxx	/^void M6502::attach(Debugger& debugger)$/;"	f	class:M6502
attach	./src/emucore/m6502/src/System.cxx	/^void System::attach(Device* device)$/;"	f	class:System
attach	./src/emucore/m6502/src/System.cxx	/^void System::attach(M6502* m6502)$/;"	f	class:System
attach	./src/emucore/m6502/src/System.cxx	/^void System::attach(M6532* m6532)$/;"	f	class:System
attach	./src/emucore/m6502/src/System.cxx	/^void System::attach(TIA* tia)$/;"	f	class:System
aud	./src/debugger/TIADebug.hxx	/^    IntArray aud;$/;"	m	class:TiaState
audC0	./src/debugger/TIADebug.cxx	/^uInt8 TIADebug::audC0(int newVal)$/;"	f	class:TIADebug
audC1	./src/debugger/TIADebug.cxx	/^uInt8 TIADebug::audC1(int newVal)$/;"	f	class:TIADebug
audF0	./src/debugger/TIADebug.cxx	/^uInt8 TIADebug::audF0(int newVal)$/;"	f	class:TIADebug
audF1	./src/debugger/TIADebug.cxx	/^uInt8 TIADebug::audF1(int newVal)$/;"	f	class:TIADebug
audFreq	./src/debugger/TIADebug.cxx	/^const string audFreq(uInt8 div)$/;"	f
audV0	./src/debugger/TIADebug.cxx	/^uInt8 TIADebug::audV0(int newVal)$/;"	f	class:TIADebug
audV1	./src/debugger/TIADebug.cxx	/^uInt8 TIADebug::audV1(int newVal)$/;"	f	class:TIADebug
auditRoms	./src/gui/RomAuditDialog.cxx	/^void RomAuditDialog::auditRoms()$/;"	f	class:RomAuditDialog
autoExec	./src/debugger/Debugger.cxx	/^void Debugger::autoExec() {$/;"	f	class:Debugger
autoLoadSymbols	./src/debugger/Debugger.cxx	/^void Debugger::autoLoadSymbols(string fileName)$/;"	f	class:Debugger
autodetectType	./src/emucore/Cart.cxx	/^string Cartridge::autodetectType(const uInt8* image, uInt32 size)$/;"	f	class:Cartridge
axis	./src/gui/DialogContainer.hxx	/^      int axis;$/;"	m	struct:DialogContainer::__anon41
b	./src/debugger/CpuDebug.hxx	/^    int b() { return mySystem->m6502().B; }$/;"	f	class:CpuDebug
b	./src/emucore/rsynth/holmes.c	/^    float b;$/;"	m	struct:__anon11	file:
b	./src/emucore/rsynth/opsynth.c	/^    float b;$/;"	m	struct:__anon8	file:
b	./src/emucore/rsynth/opsynth.c	/^    float b;$/;"	m	struct:__anon9	file:
bank	./src/cheat/BankRomCheat.hxx	/^    int    bank;$/;"	m	class:BankRomCheat
bank	./src/emucore/Cart0840.cxx	/^int Cartridge0840::bank()$/;"	f	class:Cartridge0840
bank	./src/emucore/Cart0840.cxx	/^void Cartridge0840::bank(uInt16 bank)$/;"	f	class:Cartridge0840
bank	./src/emucore/Cart2K.cxx	/^int Cartridge2K::bank()$/;"	f	class:Cartridge2K
bank	./src/emucore/Cart2K.cxx	/^void Cartridge2K::bank(uInt16 bank)$/;"	f	class:Cartridge2K
bank	./src/emucore/Cart3E.cxx	/^int Cartridge3E::bank()$/;"	f	class:Cartridge3E
bank	./src/emucore/Cart3E.cxx	/^void Cartridge3E::bank(uInt16 bank)$/;"	f	class:Cartridge3E
bank	./src/emucore/Cart3F.cxx	/^int Cartridge3F::bank()$/;"	f	class:Cartridge3F
bank	./src/emucore/Cart3F.cxx	/^void Cartridge3F::bank(uInt16 bank)$/;"	f	class:Cartridge3F
bank	./src/emucore/Cart4A50.cxx	/^int Cartridge4A50::bank()$/;"	f	class:Cartridge4A50
bank	./src/emucore/Cart4A50.cxx	/^void Cartridge4A50::bank(uInt16)$/;"	f	class:Cartridge4A50
bank	./src/emucore/Cart4K.cxx	/^int Cartridge4K::bank()$/;"	f	class:Cartridge4K
bank	./src/emucore/Cart4K.cxx	/^void Cartridge4K::bank(uInt16)$/;"	f	class:Cartridge4K
bank	./src/emucore/CartAR.cxx	/^int CartridgeAR::bank()$/;"	f	class:CartridgeAR
bank	./src/emucore/CartAR.cxx	/^void CartridgeAR::bank(uInt16 bank)$/;"	f	class:CartridgeAR
bank	./src/emucore/CartCV.cxx	/^int CartridgeCV::bank()$/;"	f	class:CartridgeCV
bank	./src/emucore/CartCV.cxx	/^void CartridgeCV::bank(uInt16 bank)$/;"	f	class:CartridgeCV
bank	./src/emucore/CartDPC.cxx	/^int CartridgeDPC::bank()$/;"	f	class:CartridgeDPC
bank	./src/emucore/CartDPC.cxx	/^void CartridgeDPC::bank(uInt16 bank)$/;"	f	class:CartridgeDPC
bank	./src/emucore/CartE0.cxx	/^int CartridgeE0::bank()$/;"	f	class:CartridgeE0
bank	./src/emucore/CartE0.cxx	/^void CartridgeE0::bank(uInt16 bank)$/;"	f	class:CartridgeE0
bank	./src/emucore/CartE7.cxx	/^int CartridgeE7::bank()$/;"	f	class:CartridgeE7
bank	./src/emucore/CartE7.cxx	/^void CartridgeE7::bank(uInt16 slice)$/;"	f	class:CartridgeE7
bank	./src/emucore/CartF4.cxx	/^int CartridgeF4::bank()$/;"	f	class:CartridgeF4
bank	./src/emucore/CartF4.cxx	/^void CartridgeF4::bank(uInt16 bank)$/;"	f	class:CartridgeF4
bank	./src/emucore/CartF4SC.cxx	/^int CartridgeF4SC::bank()$/;"	f	class:CartridgeF4SC
bank	./src/emucore/CartF4SC.cxx	/^void CartridgeF4SC::bank(uInt16 bank)$/;"	f	class:CartridgeF4SC
bank	./src/emucore/CartF6.cxx	/^int CartridgeF6::bank()$/;"	f	class:CartridgeF6
bank	./src/emucore/CartF6.cxx	/^void CartridgeF6::bank(uInt16 bank)$/;"	f	class:CartridgeF6
bank	./src/emucore/CartF6SC.cxx	/^int CartridgeF6SC::bank()$/;"	f	class:CartridgeF6SC
bank	./src/emucore/CartF6SC.cxx	/^void CartridgeF6SC::bank(uInt16 bank)$/;"	f	class:CartridgeF6SC
bank	./src/emucore/CartF8.cxx	/^int CartridgeF8::bank()$/;"	f	class:CartridgeF8
bank	./src/emucore/CartF8.cxx	/^void CartridgeF8::bank(uInt16 bank)$/;"	f	class:CartridgeF8
bank	./src/emucore/CartF8SC.cxx	/^int CartridgeF8SC::bank()$/;"	f	class:CartridgeF8SC
bank	./src/emucore/CartF8SC.cxx	/^void CartridgeF8SC::bank(uInt16 bank)$/;"	f	class:CartridgeF8SC
bank	./src/emucore/CartFASC.cxx	/^int CartridgeFASC::bank()$/;"	f	class:CartridgeFASC
bank	./src/emucore/CartFASC.cxx	/^void CartridgeFASC::bank(uInt16 bank)$/;"	f	class:CartridgeFASC
bank	./src/emucore/CartFE.cxx	/^int CartridgeFE::bank()$/;"	f	class:CartridgeFE
bank	./src/emucore/CartFE.cxx	/^void CartridgeFE::bank(uInt16 b)$/;"	f	class:CartridgeFE
bank	./src/emucore/CartMB.cxx	/^int CartridgeMB::bank()$/;"	f	class:CartridgeMB
bank	./src/emucore/CartMB.cxx	/^void CartridgeMB::bank(uInt16 bank)$/;"	f	class:CartridgeMB
bank	./src/emucore/CartMC.cxx	/^int CartridgeMC::bank()$/;"	f	class:CartridgeMC
bank	./src/emucore/CartMC.cxx	/^void CartridgeMC::bank(uInt16 b)$/;"	f	class:CartridgeMC
bank	./src/emucore/CartSB.cxx	/^int CartridgeSB::bank()$/;"	f	class:CartridgeSB
bank	./src/emucore/CartSB.cxx	/^void CartridgeSB::bank(uInt16 bank)$/;"	f	class:CartridgeSB
bank	./src/emucore/CartUA.cxx	/^int CartridgeUA::bank()$/;"	f	class:CartridgeUA
bank	./src/emucore/CartUA.cxx	/^void CartridgeUA::bank(uInt16 bank)$/;"	f	class:CartridgeUA
bank	./src/emucore/CartX07.cxx	/^int CartridgeX07::bank()$/;"	f	class:CartridgeX07
bank	./src/emucore/CartX07.cxx	/^void CartridgeX07::bank(uInt16 bank)$/;"	f	class:CartridgeX07
bankConfiguration	./src/emucore/CartAR.cxx	/^void CartridgeAR::bankConfiguration(uInt8 configuration)$/;"	f	class:CartridgeAR
bankCount	./src/debugger/Debugger.cxx	/^int Debugger::bankCount()$/;"	f	class:Debugger
bankCount	./src/emucore/Cart0840.cxx	/^int Cartridge0840::bankCount()$/;"	f	class:Cartridge0840
bankCount	./src/emucore/Cart2K.cxx	/^int Cartridge2K::bankCount()$/;"	f	class:Cartridge2K
bankCount	./src/emucore/Cart3E.cxx	/^int Cartridge3E::bankCount()$/;"	f	class:Cartridge3E
bankCount	./src/emucore/Cart3F.cxx	/^int Cartridge3F::bankCount()$/;"	f	class:Cartridge3F
bankCount	./src/emucore/Cart4A50.cxx	/^int Cartridge4A50::bankCount()$/;"	f	class:Cartridge4A50
bankCount	./src/emucore/Cart4K.cxx	/^int Cartridge4K::bankCount()$/;"	f	class:Cartridge4K
bankCount	./src/emucore/CartAR.cxx	/^int CartridgeAR::bankCount()$/;"	f	class:CartridgeAR
bankCount	./src/emucore/CartCV.cxx	/^int CartridgeCV::bankCount()$/;"	f	class:CartridgeCV
bankCount	./src/emucore/CartDPC.cxx	/^int CartridgeDPC::bankCount()$/;"	f	class:CartridgeDPC
bankCount	./src/emucore/CartE0.cxx	/^int CartridgeE0::bankCount()$/;"	f	class:CartridgeE0
bankCount	./src/emucore/CartE7.cxx	/^int CartridgeE7::bankCount()$/;"	f	class:CartridgeE7
bankCount	./src/emucore/CartF4.cxx	/^int CartridgeF4::bankCount()$/;"	f	class:CartridgeF4
bankCount	./src/emucore/CartF4SC.cxx	/^int CartridgeF4SC::bankCount()$/;"	f	class:CartridgeF4SC
bankCount	./src/emucore/CartF6.cxx	/^int CartridgeF6::bankCount()$/;"	f	class:CartridgeF6
bankCount	./src/emucore/CartF6SC.cxx	/^int CartridgeF6SC::bankCount()$/;"	f	class:CartridgeF6SC
bankCount	./src/emucore/CartF8.cxx	/^int CartridgeF8::bankCount()$/;"	f	class:CartridgeF8
bankCount	./src/emucore/CartF8SC.cxx	/^int CartridgeF8SC::bankCount()$/;"	f	class:CartridgeF8SC
bankCount	./src/emucore/CartFASC.cxx	/^int CartridgeFASC::bankCount()$/;"	f	class:CartridgeFASC
bankCount	./src/emucore/CartFE.cxx	/^int CartridgeFE::bankCount()$/;"	f	class:CartridgeFE
bankCount	./src/emucore/CartMB.cxx	/^int CartridgeMB::bankCount()$/;"	f	class:CartridgeMB
bankCount	./src/emucore/CartMC.cxx	/^int CartridgeMC::bankCount()$/;"	f	class:CartridgeMC
bankCount	./src/emucore/CartSB.cxx	/^int CartridgeSB::bankCount()$/;"	f	class:CartridgeSB
bankCount	./src/emucore/CartUA.cxx	/^int CartridgeUA::bankCount()$/;"	f	class:CartridgeUA
bankCount	./src/emucore/CartX07.cxx	/^int CartridgeX07::bankCount()$/;"	f	class:CartridgeX07
bankLocked	./src/emucore/Cart.hxx	/^    bool bankLocked;$/;"	m	class:Cartridge
bankRAM	./src/emucore/CartE7.cxx	/^void CartridgeE7::bankRAM(uInt16 bank)$/;"	f	class:CartridgeE7
base	./src/debugger/DebuggerParser.hxx	/^    BaseFormat base()             { return defaultBase; }$/;"	f	class:DebuggerParser
baseDialog	./src/gui/DialogContainer.hxx	/^    const Dialog* baseDialog() const { return myBaseDialog; }$/;"	f	class:DialogContainer
baseDir	./src/emucore/OSystem.hxx	/^    const string& baseDir() const { return myBaseDir; }$/;"	f	class:OSystem
baseHeight	./src/emucore/FrameBuffer.hxx	/^    inline const uInt32 baseHeight() { return myBaseDim.h; }$/;"	f	class:FrameBuffer
baseWidth	./src/emucore/FrameBuffer.hxx	/^    inline const uInt32 baseWidth()  { return myBaseDim.w; }$/;"	f	class:FrameBuffer
begin	./src/common/Array.hxx	/^    const_iterator begin() const$/;"	f	class:Common::Array
begin	./src/common/Array.hxx	/^    iterator begin()$/;"	f	class:Common::Array
bits	./src/debugger/PackedBitArray.hxx	/^		unsigned int *bits;$/;"	m	class:PackedBitArray
bits	./src/gui/Font.hxx	/^  const uInt32* bits;        \/* 32-bit right-padded bitmap data *\/$/;"	m	struct:__anon35
bits_size	./src/gui/Font.hxx	/^  long          bits_size;   \/* # words of bitmap_t bits *\/$/;"	m	struct:__anon35
booleanWithLabel	./src/debugger/TIADebug.cxx	/^const string booleanWithLabel(string label, bool value)$/;"	f
bottom	./src/gui/Rect.hxx	/^  int bottom, right;    \/\/!< The point at the bottom right of the rectangle (not part of the rect).$/;"	m	struct:GUI::Rect
box	./src/emucore/FrameBuffer.cxx	/^void FrameBuffer::box(uInt32 x, uInt32 y, uInt32 w, uInt32 h,$/;"	f	class:FrameBuffer
box	./src/gui/TabWidget.cxx	/^void TabWidget::box(int x, int y, int width, int height,$/;"	f	class:TabWidget
boxSize	./src/gui/Widget.hxx	/^    static int boxSize() { return 14; }  \/\/ box is square$/;"	f	class:CheckboxWidget
breakPoint	./src/debugger/Debugger.cxx	/^bool Debugger::breakPoint(int bp)$/;"	f	class:Debugger
breakpoints	./src/debugger/Debugger.hxx	/^    PackedBitArray& breakpoints() const { return *myBreakPoints; }$/;"	f	class:Debugger
buffer	./src/debugger/gui/PromptWidget.hxx	/^    inline int &buffer(int idx) { return _buffer[idx % kBufferSize]; }$/;"	f	class:PromptWidget
buffer	./src/emucore/MD5.cxx	/^  unsigned char buffer[64];                         \/* input buffer *\/$/;"	m	struct:__anon19	file:
buildFocusWidgetList	./src/gui/Dialog.cxx	/^void Dialog::buildFocusWidgetList(int id)$/;"	f	class:Dialog
builtinHelp	./src/debugger/Debugger.cxx	/^const string Debugger::builtinHelp() const$/;"	f	class:Debugger
builtin_functions	./src/debugger/Debugger.cxx	/^static const string builtin_functions[][3] = {$/;"	v	file:
button	./src/gui/DialogContainer.hxx	/^      int button;$/;"	m	struct:DialogContainer::__anon39
button	./src/gui/DialogContainer.hxx	/^      int button;$/;"	m	struct:DialogContainer::__anon40
byte_before_the_zipfile	./src/emucore/unzip.c	/^	uLong byte_before_the_zipfile;\/* byte before the zipfile, (>0 for sfx)*\/$/;"	m	struct:__anon1	file:
byte_before_the_zipfile	./src/emucore/unzip.c	/^	uLong byte_before_the_zipfile;\/* byte before the zipfile, (>0 for sfx)*\/$/;"	m	struct:__anon2	file:
bytesToSurface	./src/common/FrameBufferGL.cxx	/^void FrameBufferGL::bytesToSurface(GUI::Surface* surface, int row,$/;"	f	class:FrameBufferGL
bytesToSurface	./src/common/FrameBufferSoft.cxx	/^void FrameBufferSoft::bytesToSurface(GUI::Surface* surface, int row,$/;"	f	class:FrameBufferSoft
bytesToSurface	./src/gp2x/FrameBufferGP2X.cxx	/^void FrameBufferGP2X::bytesToSurface(GUI::Surface* surface, int row,$/;"	f	class:FrameBufferGP2X
c	./src/debugger/CpuDebug.hxx	/^    int c() { return mySystem->m6502().C; }$/;"	f	class:CpuDebug
c	./src/emucore/rsynth/opsynth.c	/^    float c;$/;"	m	struct:__anon8	file:
c	./src/yacc/YaccParser.cxx	/^const char *input, *c;$/;"	v
cacheFile	./src/emucore/OSystem.hxx	/^    const string& cacheFile() const { return myGameListCacheFile; }$/;"	f	class:OSystem
calcSize	./src/debugger/EquateList.cxx	/^int EquateList::calcSize()$/;"	f	class:EquateList
callback	./src/common/SoundSDL.cxx	/^void SoundSDL::callback(void* udata, uInt8* stream, int len)$/;"	f	class:SoundSDL
cancelSelection	./src/gui/PopUpWidget.cxx	/^void PopUpDialog::cancelSelection()$/;"	f	class:PopUpDialog
cartridge	./src/emucore/Console.hxx	/^    Cartridge& cartridge() const { return *myCart; }$/;"	f	class:Console
center	./src/gui/Dialog.cxx	/^void Dialog::center()$/;"	f	class:Dialog
center	./src/gui/PopUpWidget.hxx	/^    void center() { recalc(); }$/;"	f	class:PopUpDialog
central_pos	./src/emucore/unzip.c	/^	uLong central_pos;          \/* position of the beginning of the central dir*\/$/;"	m	struct:__anon2	file:
ch	./src/emucore/rsynth/trie.c	/^    char ch;$/;"	m	struct:trie_s	file:
changeColorRegs	./src/debugger/gui/TiaWidget.cxx	/^void TiaWidget::changeColorRegs()$/;"	f	class:TiaWidget
changeHeight	./src/emucore/Console.cxx	/^void Console::changeHeight(int direction)$/;"	f	class:Console
changeState	./src/emucore/StateManager.cxx	/^void StateManager::changeState()$/;"	f	class:StateManager
changeVidMode	./src/emucore/FrameBuffer.cxx	/^bool FrameBuffer::changeVidMode(int direction)$/;"	f	class:FrameBuffer
changeYStart	./src/emucore/Console.cxx	/^void Console::changeYStart(int direction)$/;"	f	class:Console
channels	./src/emucore/TIASnd.cxx	/^void TIASound::channels(uInt32 number)$/;"	f	class:TIASound
cheat	./src/emucore/OSystem.hxx	/^    inline CheatManager& cheat(void) const { return *myCheatManager; }$/;"	f	class:OSystem
cheatFile	./src/emucore/OSystem.hxx	/^    const string& cheatFile() const { return myCheatFile; }$/;"	f	class:OSystem
checkBankSwitch	./src/emucore/Cart4A50.cxx	/^void Cartridge4A50::checkBankSwitch(uInt16 address, uInt8 value)$/;"	f	class:Cartridge4A50
checkBounds	./src/gui/ScrollBarWidget.cxx	/^void ScrollBarWidget::checkBounds(int old_pos)$/;"	f	class:ScrollBarWidget
checked_img_o	./src/gui/Widget.cxx	/^static unsigned int checked_img_o[8] =$/;"	v	file:
checked_img_x	./src/gui/Widget.cxx	/^static unsigned int checked_img_x[8] =$/;"	v	file:
checksum	./src/emucore/CartAR.cxx	/^uInt8 CartridgeAR::checksum(uInt8* s, uInt16 length)$/;"	f	class:CartridgeAR
chipReady	./src/emucore/SpeakJet.cxx	/^bool SpeakJet::chipReady()$/;"	f	class:SpeakJet
cleanup	./src/win32/SDL_win32_main.c	/^static void cleanup(void)$/;"	f	file:
cleanup_output	./src/win32/SDL_win32_main.c	/^static void cleanup_output(void)$/;"	f	file:
clear	./src/cheat/CheatManager.cxx	/^void CheatManager::clear()$/;"	f	class:CheatManager
clear	./src/common/Array.hxx	/^    void clear()$/;"	f	class:Common::Array
clear	./src/common/SoundSDL.cxx	/^void SoundSDL::RegWriteQueue::clear()$/;"	f	class:SoundSDL::RegWriteQueue
clear	./src/common/VideoModeList.hxx	/^    void clear() { myModeList.clear(); }$/;"	f	class:VideoModeList
clear	./src/debugger/PackedBitArray.cxx	/^void PackedBitArray::clear(unsigned int bit) {$/;"	f	class:PackedBitArray
clear	./src/emucore/Event.cxx	/^void Event::clear()$/;"	f	class:Event
clear	./src/gui/GameList.hxx	/^    inline void clear() { myArray.clear(); }$/;"	f	class:GameList
clear	./src/gui/Stack.hxx	/^    void clear() { _size = 0; }$/;"	f	class:FixedStack
clear	./src/wince/SoundWinCE.cxx	/^void SoundWinCE::RegWriteQueue::clear()$/;"	f	class:SoundWinCE::RegWriteQueue
clearAllBreakPoints	./src/debugger/Debugger.cxx	/^void Debugger::clearAllBreakPoints()$/;"	f	class:Debugger
clearAllTraps	./src/debugger/Debugger.cxx	/^void Debugger::clearAllTraps() $/;"	f	class:Debugger
clearBuffers	./src/emucore/TIA.cxx	/^void TIA::clearBuffers()$/;"	f	class:TIA
clearCondBreaks	./src/emucore/m6502/src/M6502.cxx	/^void M6502::clearCondBreaks()$/;"	f	class:M6502
clearEntries	./src/gui/PopUpWidget.cxx	/^void PopUpWidget::clearEntries()$/;"	f	class:PopUpWidget
clearFlags	./src/gui/Widget.hxx	/^    void clearFlags(int flags)  { _flags &= ~flags; }$/;"	f	class:Widget
clearProperties	./src/gui/RomInfoWidget.cxx	/^void RomInfoWidget::clearProperties()$/;"	f	class:RomInfoWidget
clip	./src/emucore/SpeakJet.cxx	/^short SpeakJet::clip(long *clip_max, float input, float *peak)$/;"	f	class:SpeakJet
clip	./src/gui/Rect.hxx	/^	void clip(const Rect & r) {$/;"	f	struct:GUI::Rect
clip	./src/gui/Rect.hxx	/^	void clip(int maxw, int maxh) {$/;"	f	struct:GUI::Rect
clipVolume	./src/emucore/TIASnd.cxx	/^void TIASound::clipVolume(bool clip)$/;"	f	class:TIASound
clip_max	./src/emucore/rsynth/opsynth.c	/^    long clip_max;$/;"	m	struct:rsynth_private	file:
clock	./src/emucore/TIASnd.hxx	/^        bool clock()$/;"	f	class:TIASound::FreqDiv
clockDataIn	./src/emucore/AtariVox.cxx	/^void AtariVox::clockDataIn(bool value)$/;"	f	class:AtariVox
clockRandomNumberGenerator	./src/emucore/CartDPC.cxx	/^inline void CartridgeDPC::clockRandomNumberGenerator()$/;"	f	class:CartridgeDPC
clocksThisLine	./src/debugger/TIADebug.cxx	/^int TIADebug::clocksThisLine()$/;"	f	class:TIADebug
clocksThisLine	./src/emucore/TIA.cxx	/^uInt32 TIA::clocksThisLine() const$/;"	f	class:TIA
close	./src/common/SoundNull.hxx	/^    void close() { }$/;"	f	class:SoundNull
close	./src/common/SoundSDL.cxx	/^void SoundSDL::close()$/;"	f	class:SoundSDL
close	./src/emucore/Deserializer.cxx	/^void Deserializer::close(void)$/;"	f	class:Deserializer
close	./src/emucore/Serializer.cxx	/^void Serializer::close(void)$/;"	f	class:Serializer
close	./src/gui/Dialog.cxx	/^void Dialog::close()$/;"	f	class:Dialog
close	./src/wince/SoundWinCE.cxx	/^void SoundWinCE::close()$/;"	f	class:SoundWinCE
cmdString	./src/debugger/DebuggerParser.hxx	/^      string cmdString;$/;"	m	struct:DebuggerParser::Command
code	./src/cheat/Cheat.hxx	/^    const string& code() const { return myCode; }$/;"	f	class:Cheat
colWidth	./src/debugger/gui/DataGridWidget.hxx	/^    int colWidth() { return _colWidth; }$/;"	f	class:DataGridWidget
colWidth	./src/debugger/gui/ToggleWidget.hxx	/^    int colWidth() { return _colWidth; }$/;"	f	class:ToggleWidget
collBL_PF	./src/debugger/TIADebug.hxx	/^    bool collBL_PF(int newVal = -1) { return collision(12, newVal); }$/;"	f	class:TIADebug
collM0_BL	./src/debugger/TIADebug.hxx	/^    bool collM0_BL(int newVal = -1) { return collision(9,  newVal); }$/;"	f	class:TIADebug
collM0_M1	./src/debugger/TIADebug.hxx	/^    bool collM0_M1(int newVal = -1) { return collision(14, newVal); }$/;"	f	class:TIADebug
collM0_P0	./src/debugger/TIADebug.hxx	/^    bool collM0_P0(int newVal = -1) { return collision(1,  newVal); }$/;"	f	class:TIADebug
collM0_P1	./src/debugger/TIADebug.hxx	/^    bool collM0_P1(int newVal = -1) { return collision(0,  newVal); }$/;"	f	class:TIADebug
collM0_PF	./src/debugger/TIADebug.hxx	/^    bool collM0_PF(int newVal = -1) { return collision(8,  newVal); }$/;"	f	class:TIADebug
collM1_BL	./src/debugger/TIADebug.hxx	/^    bool collM1_BL(int newVal = -1) { return collision(11, newVal); }$/;"	f	class:TIADebug
collM1_P0	./src/debugger/TIADebug.hxx	/^    bool collM1_P0(int newVal = -1) { return collision(2,  newVal); }$/;"	f	class:TIADebug
collM1_P1	./src/debugger/TIADebug.hxx	/^    bool collM1_P1(int newVal = -1) { return collision(3,  newVal); }$/;"	f	class:TIADebug
collM1_PF	./src/debugger/TIADebug.hxx	/^    bool collM1_PF(int newVal = -1) { return collision(10, newVal); }$/;"	f	class:TIADebug
collP0_BL	./src/debugger/TIADebug.hxx	/^    bool collP0_BL(int newVal = -1) { return collision(5,  newVal); }$/;"	f	class:TIADebug
collP0_P1	./src/debugger/TIADebug.hxx	/^    bool collP0_P1(int newVal = -1) { return collision(13, newVal); }$/;"	f	class:TIADebug
collP0_PF	./src/debugger/TIADebug.hxx	/^    bool collP0_PF(int newVal = -1) { return collision(4,  newVal); }$/;"	f	class:TIADebug
collP1_BL	./src/debugger/TIADebug.hxx	/^    bool collP1_BL(int newVal = -1) { return collision(7,  newVal); }$/;"	f	class:TIADebug
collP1_PF	./src/debugger/TIADebug.hxx	/^    bool collP1_PF(int newVal = -1) { return collision(6,  newVal); }$/;"	f	class:TIADebug
collision	./src/debugger/TIADebug.cxx	/^bool TIADebug::collision(int collID, int newVal)$/;"	f	class:TIADebug
color	./src/emucore/FrameBuffer.hxx	/^      uInt32 color;$/;"	m	struct:FrameBuffer::Message
colorSwatch	./src/debugger/TIADebug.cxx	/^string TIADebug::colorSwatch(uInt8 c)$/;"	f	class:TIADebug
coluBK	./src/debugger/TIADebug.cxx	/^uInt8 TIADebug::coluBK(int newVal)$/;"	f	class:TIADebug
coluP0	./src/debugger/TIADebug.cxx	/^uInt8 TIADebug::coluP0(int newVal)$/;"	f	class:TIADebug
coluP1	./src/debugger/TIADebug.cxx	/^uInt8 TIADebug::coluP1(int newVal)$/;"	f	class:TIADebug
coluPF	./src/debugger/TIADebug.cxx	/^uInt8 TIADebug::coluPF(int newVal)$/;"	f	class:TIADebug
coluRegs	./src/debugger/TIADebug.hxx	/^    IntArray coluRegs;$/;"	m	class:TiaState
commandMenu	./src/emucore/OSystem.hxx	/^    inline CommandMenu& commandMenu(void) const { return *myCommandMenu; }$/;"	f	class:OSystem
commandResult	./src/debugger/DebuggerParser.hxx	/^    string commandResult;$/;"	m	class:DebuggerParser
commands	./src/debugger/DebuggerParser.cxx	/^DebuggerParser::Command DebuggerParser::commands[kNumCommands] = {$/;"	m	class:DebuggerParser	file:
commands	./src/debugger/DebuggerParser.hxx	/^    static Command commands[kNumCommands];$/;"	m	class:DebuggerParser
compPrefix	./src/debugger/DebuggerParser.hxx	/^    string compPrefix;$/;"	m	class:DebuggerParser
compPrefix	./src/debugger/EquateList.hxx	/^    string compPrefix;$/;"	m	class:EquateList
compareHistory	./src/debugger/gui/PromptWidget.cxx	/^int PromptWidget::compareHistory(const char *histLine) {$/;"	f	class:PromptWidget
comparitor	./src/gui/GameInfoDialog.hxx	/^      const char* comparitor;$/;"	m	struct:GameInfoDialog::PropType
completions	./src/debugger/DebuggerParser.hxx	/^    string completions;$/;"	m	class:DebuggerParser
completions	./src/debugger/EquateList.hxx	/^    string completions;$/;"	m	class:EquateList
compression_method	./src/emucore/unzip.c	/^	uLong compression_method;   \/* compression method (0==store) *\/$/;"	m	struct:__anon1	file:
computeBallMaskTable	./src/emucore/TIA.cxx	/^void TIA::computeBallMaskTable()$/;"	f	class:TIA
computeCollisionTable	./src/emucore/TIA.cxx	/^void TIA::computeCollisionTable()$/;"	f	class:TIA
computeMissleMaskTable	./src/emucore/TIA.cxx	/^void TIA::computeMissleMaskTable()$/;"	f	class:TIA
computePlayerMaskTable	./src/emucore/TIA.cxx	/^void TIA::computePlayerMaskTable()$/;"	f	class:TIA
computePlayerPositionResetWhenTable	./src/emucore/TIA.cxx	/^void TIA::computePlayerPositionResetWhenTable()$/;"	f	class:TIA
computePlayerReflectTable	./src/emucore/TIA.cxx	/^void TIA::computePlayerReflectTable()$/;"	f	class:TIA
computePlayfieldMaskTable	./src/emucore/TIA.cxx	/^void TIA::computePlayfieldMaskTable()$/;"	f	class:TIA
configFile	./src/emucore/OSystem.hxx	/^    const string& configFile() const { return myConfigFile; }$/;"	f	class:OSystem
console	./src/emucore/OSystem.hxx	/^    inline Console& console(void) const { return *myConsole; }$/;"	f	class:OSystem
consoleDesc	./src/gui/ConsoleFont.hxx	/^static const FontDesc consoleDesc = {$/;"	v
consoleFont	./src/emucore/OSystem.hxx	/^    inline const GUI::Font& consoleFont() const { return *myConsoleFont; }$/;"	f	class:OSystem
console_main	./src/win32/SDL_win32_main.c	/^int console_main(int argc, char *argv[])$/;"	f
console_main	./src/win32/SDL_win32_main.c	199;"	d	file:
const_iterator	./src/common/Array.hxx	/^    typedef const T *const_iterator;$/;"	t	class:Common::Array
const_to_int	./src/yacc/YaccParser.cxx	/^int const_to_int(char *c) {$/;"	f	namespace:YaccParser
contains	./src/common/Array.hxx	/^    bool contains(const T &key) const$/;"	f	class:Common::Array
contains	./src/gui/Rect.hxx	/^	bool contains(const Point & p) const {$/;"	f	struct:GUI::Rect
contains	./src/gui/Rect.hxx	/^	bool contains(int x, int y) const {$/;"	f	struct:GUI::Rect
contents	./src/emucore/SpeakJet.hxx	/^    uInt8 contents[OUTPUT_BUFFER_SIZE];$/;"	m	struct:SpeechBuffer
controller	./src/emucore/Console.hxx	/^    Controller& controller(Controller::Jack jack) const$/;"	f	class:Console
conv_hex_digit	./src/debugger/Debugger.hxx	/^    static int conv_hex_digit(char d) {$/;"	f	class:Debugger
copy	./src/emucore/Props.cxx	/^void Properties::copy(const Properties& properties)$/;"	f	class:Properties
copySelectedText	./src/gui/EditableWidget.cxx	/^void EditableWidget::copySelectedText()$/;"	f	class:EditableWidget
count	./src/cheat/BankRomCheat.hxx	/^    uInt8  count;$/;"	m	class:BankRomCheat
count	./src/cheat/CheetahCheat.hxx	/^    uInt8  count;$/;"	m	class:CheetahCheat
count	./src/emucore/MD5.cxx	/^  UINT4 count[2];        \/* number of bits, modulo 2^64 (lsb first) *\/$/;"	m	struct:__anon19	file:
count	./src/gui/DialogContainer.hxx	/^      int count;  \/\/ How often was it already pressed?$/;"	m	struct:DialogContainer::__anon43
countCompletions	./src/debugger/DebuggerParser.cxx	/^int DebuggerParser::countCompletions(const char *in)$/;"	f	class:DebuggerParser
countCompletions	./src/debugger/EquateList.cxx	/^int EquateList::countCompletions(const char *in)$/;"	f	class:EquateList
counter	./src/emucore/FrameBuffer.hxx	/^      int counter;$/;"	m	struct:FrameBuffer::Message
cpuDebug	./src/debugger/Debugger.hxx	/^    CpuDebug& cpuDebug() const { return *myCpuDebug; }$/;"	f	class:Debugger
cpuMethod	./src/yacc/y.tab.c	/^	CPUDEBUG_INT_METHOD cpuMethod;$/;"	m	union:YYSTYPE	file:
cpuState	./src/debugger/Debugger.cxx	/^const string Debugger::cpuState()$/;"	f	class:Debugger
crc32	./src/emucore/unzip.c	/^	uLong crc32;                \/* crc32 of all data uncompressed *\/$/;"	m	struct:__anon1	file:
crc32_wait	./src/emucore/unzip.c	/^	uLong crc32_wait;           \/* crc32 we must obtain after decompress all *\/$/;"	m	struct:__anon1	file:
create	./src/emucore/Cart.cxx	/^Cartridge* Cartridge::create(const uInt8* image, uInt32 size,$/;"	f	class:Cartridge
create	./src/emucore/OSystem.cxx	/^bool OSystem::create()$/;"	f	class:OSystem
createAudio	./src/emucore/MediaFactory.cxx	/^Sound* MediaFactory::createAudio(OSystem* osystem)$/;"	f	class:MediaFactory
createCheat	./src/cheat/CheatManager.cxx	/^const Cheat* CheatManager::createCheat(const string& name, const string& code)$/;"	f	class:CheatManager
createConsole	./src/emucore/OSystem.cxx	/^bool OSystem::createConsole(const string& romfile, const string& md5sum)$/;"	f	class:OSystem
createFrameBuffer	./src/emucore/OSystem.cxx	/^bool OSystem::createFrameBuffer(bool showmessage)$/;"	f	class:OSystem
createLauncher	./src/emucore/OSystem.cxx	/^void OSystem::createLauncher()$/;"	f	class:OSystem
createScreen	./src/wince/FrameBufferWinCE.hxx	/^    virtual bool createScreen() { return true; };$/;"	f	class:FrameBufferWinCE
createSound	./src/emucore/OSystem.cxx	/^void OSystem::createSound()$/;"	f	class:OSystem
createSurface	./src/common/FrameBufferGL.cxx	/^GUI::Surface* FrameBufferGL::createSurface(int width, int height) const$/;"	f	class:FrameBufferGL
createSurface	./src/common/FrameBufferSoft.cxx	/^GUI::Surface* FrameBufferSoft::createSurface(int width, int height) const$/;"	f	class:FrameBufferSoft
createSurface	./src/gp2x/FrameBufferGP2X.cxx	/^GUI::Surface* FrameBufferGP2X::createSurface(int width, int height) const$/;"	f	class:FrameBufferGP2X
createTextures	./src/common/FrameBufferGL.cxx	/^bool FrameBufferGL::createTextures()$/;"	f	class:FrameBufferGL
createVideo	./src/emucore/MediaFactory.cxx	/^FrameBuffer* MediaFactory::createVideo(OSystem* osystem)$/;"	f	class:MediaFactory
ctrlPF	./src/debugger/TIADebug.cxx	/^uInt8 TIADebug::ctrlPF(int newVal)$/;"	f	class:TIADebug
cur_file_info	./src/emucore/unzip.c	/^	unz_file_info cur_file_info; \/* public info about the current file in zip*\/$/;"	m	struct:__anon2	file:
cur_file_info_internal	./src/emucore/unzip.c	/^	unz_file_info_internal cur_file_info_internal; \/* private info about it*\/$/;"	m	struct:__anon2	file:
current	./src/common/VideoModeList.hxx	/^    const VideoMode& current() const$/;"	f	class:VideoModeList
current	./src/emucore/OSystem.hxx	/^      uInt32 current;$/;"	m	struct:OSystem::TimingInfo
currentFrameBuffer	./src/emucore/TIA.hxx	/^    uInt8* currentFrameBuffer() const { return myCurrentFrameBuffer; }$/;"	f	class:TIA
currentPos	./src/gui/ListWidget.hxx	/^    int currentPos() const  { return _currentPos; }$/;"	f	class:ListWidget
currentRect	./src/common/RectList.hxx	/^    Uint32 currentSize, currentRect;$/;"	m	class:RectList
currentSize	./src/common/RectList.hxx	/^    Uint32 currentSize, currentRect;$/;"	m	class:RectList
currentSize	./src/debugger/EquateList.hxx	/^    int currentSize;$/;"	m	class:EquateList
current_file_ok	./src/emucore/unzip.c	/^	uLong current_file_ok;      \/* flag about the usability of the current file*\/$/;"	m	struct:__anon2	file:
cxPixels	./src/wince/FrameBufferWinCE.hxx	/^   int  cxPixels;$/;"	m	struct:_RawFrameBufferInfo
cxStride	./src/wince/FrameBufferWinCE.hxx	/^   int  cxStride;$/;"	m	struct:_RawFrameBufferInfo
cyPixels	./src/wince/FrameBufferWinCE.hxx	/^   int  cyPixels;$/;"	m	struct:_RawFrameBufferInfo
cyStride	./src/wince/FrameBufferWinCE.hxx	/^   int  cyStride;$/;"	m	struct:_RawFrameBufferInfo
cycleTab	./src/gui/TabWidget.cxx	/^void TabWidget::cycleTab(int direction)$/;"	f	class:TabWidget
cycles	./src/debugger/Debugger.cxx	/^int Debugger::cycles()$/;"	f	class:Debugger
cycles	./src/emucore/m6502/src/System.hxx	/^    uInt32 cycles() const $/;"	f	class:System
d	./src/debugger/CpuDebug.hxx	/^    int d() { return mySystem->m6502().D; }$/;"	f	class:CpuDebug
dPeek	./src/debugger/CpuDebug.cxx	/^int CpuDebug::dPeek(int address)$/;"	f	class:CpuDebug
darray_append	./src/emucore/rsynth/darray.c	/^darray_append(darray_ptr p, int ch)$/;"	f
darray_cat	./src/emucore/rsynth/darray.c	/^darray_cat(void *arg, char *s)$/;"	f
darray_delete	./src/emucore/rsynth/darray.c	/^darray_delete(darray_t * a, unsigned int n)$/;"	f
darray_fget	./src/emucore/rsynth/darray.c	/^darray_fget(FILE * f, darray_ptr p)$/;"	f
darray_float	./src/emucore/rsynth/darray.c	/^darray_float(darray_ptr f0, float f)$/;"	f
darray_free	./src/emucore/rsynth/darray.c	/^darray_free(darray_t * a)$/;"	f
darray_id	./src/emucore/rsynth/darray.c	/^char *darray_id = "$Id: darray.c,v 1.1 2006\/06\/11 07:13:23 urchlay Exp $";$/;"	v
darray_short	./src/emucore/rsynth/darray.c	/^darray_short(darray_ptr f0, short f)$/;"	f
debugStream	./src/emucore/m6502/src/M6502Hi.cxx	27;"	d	file:
debugStream	./src/emucore/m6502/src/M6502Low.cxx	27;"	d	file:
debugger	./src/debugger/Debugger.hxx	/^    static Debugger& debugger() { return *myStaticDebugger; }$/;"	f	class:Debugger
debugger	./src/debugger/DebuggerParser.hxx	/^    Debugger* debugger;$/;"	m	class:DebuggerParser
debugger	./src/emucore/OSystem.hxx	/^    inline Debugger& debugger(void) const { return *myDebugger; }$/;"	f	class:OSystem
decRefCount	./src/emucore/FSNode.cxx	/^void FilesystemNode::decRefCount()$/;"	f	class:FilesystemNode
decipher_arg	./src/debugger/DebuggerParser.cxx	/^int DebuggerParser::decipher_arg(const string &str)$/;"	f	class:DebuggerParser
decline_f0	./src/emucore/rsynth/phtoelm.c	/^decline_f0(float F0Hz, darray_ptr f0, float f, unsigned t)$/;"	f	file:
decrementCell	./src/debugger/gui/DataGridWidget.cxx	/^void DataGridWidget::decrementCell()$/;"	f	class:DataGridWidget
defaultBase	./src/debugger/DebuggerParser.hxx	/^    BaseFormat defaultBase;$/;"	m	class:DebuggerParser
defaultchar	./src/gui/Font.hxx	/^  int           defaultchar; \/* default char (not glyph index) *\/$/;"	m	struct:__anon35
delCondBreak	./src/emucore/m6502/src/M6502.cxx	/^void M6502::delCondBreak(unsigned int brk)$/;"	f	class:M6502
delFunction	./src/debugger/Debugger.cxx	/^void Debugger::delFunction(const string& name)$/;"	f	class:Debugger
deleteConsole	./src/emucore/OSystem.cxx	/^void OSystem::deleteConsole()$/;"	f	class:OSystem
deleteNode	./src/emucore/PropsSet.cxx	/^void PropertiesSet::deleteNode(TreeNode *node)$/;"	f	class:PropertiesSet
delta	./src/common/SoundSDL.hxx	/^      double delta;$/;"	m	struct:SoundSDL::RegWrite
delta	./src/wince/SoundWinCE.hxx	/^    double delta;$/;"	m	struct:RegWrite
dequeue	./src/common/SoundSDL.cxx	/^void SoundSDL::RegWriteQueue::dequeue()$/;"	f	class:SoundSDL::RegWriteQueue
dequeue	./src/wince/SoundWinCE.cxx	/^void SoundWinCE::RegWriteQueue::dequeue()$/;"	f	class:SoundWinCE::RegWriteQueue
desc	./src/gui/Font.hxx	/^    const FontDesc& desc() const { return myFontDesc; }$/;"	f	class:GUI::Font
description	./src/debugger/DebuggerParser.hxx	/^      string description;$/;"	m	struct:DebuggerParser::Command
desktopHeight	./src/emucore/OSystem.hxx	/^    const uInt32 desktopHeight() const { return myDesktopHeight; }$/;"	f	class:OSystem
desktopWidth	./src/emucore/OSystem.hxx	/^    const uInt32 desktopWidth() const  { return myDesktopWidth; }$/;"	f	class:OSystem
device	./src/emucore/m6502/src/System.hxx	/^      Device* device;$/;"	m	struct:System::PageAccess
devres	./src/wince/FrameBufferWinCE.hxx	/^	enum {SM_LOW, QVGA, VGA} devres;$/;"	m	class:FrameBufferWinCE	typeref:enum:FrameBufferWinCE::__anon22
dirExists	./src/gp2x/FSNodeGP2X.cxx	/^bool AbstractFilesystemNode::dirExists(const string& path)$/;"	f	class:AbstractFilesystemNode
dirExists	./src/unix/FSNodePOSIX.cxx	/^bool AbstractFilesystemNode::dirExists(const string& path)$/;"	f	class:AbstractFilesystemNode
dirExists	./src/win32/FSNodeWin32.cxx	/^bool AbstractFilesystemNode::dirExists(const string& path)$/;"	f	class:AbstractFilesystemNode
dirExists	./src/wince/FSNodeWinCE.cxx	/^bool AbstractFilesystemNode::dirExists(const string& path)$/;"	f	class:AbstractFilesystemNode
directPeekBase	./src/emucore/m6502/src/System.hxx	/^      uInt8* directPeekBase;$/;"	m	struct:System::PageAccess
directPokeBase	./src/emucore/m6502/src/System.hxx	/^      uInt8* directPokeBase;$/;"	m	struct:System::PageAccess
disable	./src/cheat/BankRomCheat.cxx	/^bool BankRomCheat::disable()$/;"	f	class:BankRomCheat
disable	./src/cheat/CheetahCheat.cxx	/^bool CheetahCheat::disable()$/;"	f	class:CheetahCheat
disable	./src/cheat/RamCheat.cxx	/^bool RamCheat::disable()$/;"	f	class:RamCheat
disableTab	./src/gui/TabWidget.cxx	/^void TabWidget::disableTab(int tabID)$/;"	f	class:TabWidget
disassemble	./src/debugger/CpuDebug.cxx	/^int CpuDebug::disassemble(int address, char* buffer, EquateList* equateList)$/;"	f	class:CpuDebug
disassemble	./src/debugger/Debugger.cxx	/^const string& Debugger::disassemble(int start, int lines)$/;"	f	class:Debugger
disassemble	./src/debugger/Debugger.cxx	/^void Debugger::disassemble(IntArray& addr, StringList& addrLabel, $/;"	f	class:Debugger
displacement	./src/wince/FrameBufferWinCE.hxx	/^	uInt32 paldouble[256+kNumColors], displacement;$/;"	m	class:FrameBufferWinCE
displayInfo	./src/gui/AboutDialog.cxx	/^void AboutDialog::displayInfo()$/;"	f	class:AboutDialog
displayInfo	./src/gui/HelpDialog.cxx	/^void HelpDialog::displayInfo()$/;"	f	class:HelpDialog
displayName	./src/emucore/FSNode.hxx	/^    virtual string displayName() const { return _realNode->displayName(); }$/;"	f	class:FilesystemNode
displayName	./src/gp2x/FSNodeGP2X.cxx	/^    virtual string displayName() const { return _displayName; }$/;"	f	class:POSIXFilesystemNode
displayName	./src/unix/FSNodePOSIX.cxx	/^    virtual string displayName() const { return _displayName; }$/;"	f	class:POSIXFilesystemNode
displayName	./src/win32/FSNodeWin32.cxx	/^    virtual string displayName() const { return _displayName; }$/;"	f	class:WindowsFilesystemNode
displayName	./src/wince/FSNodeWinCE.cxx	/^    virtual string displayName() const { return _displayName; }$/;"	f	class:WindowsFilesystemNode
displaymode	./src/wince/FrameBufferWinCE.hxx	/^	uInt8 displaymode;$/;"	m	class:FrameBufferWinCE
distinctAccesses	./src/emucore/m6502/src/M6502Hi.hxx	/^    uInt32 distinctAccesses() const$/;"	f	class:M6502High
doAdvance	./src/debugger/gui/DebuggerDialog.cxx	/^void DebuggerDialog::doAdvance()$/;"	f	class:DebuggerDialog
doCompare	./src/debugger/gui/RamWidget.cxx	/^const string RamWidget::doCompare(const string& str)$/;"	f	class:RamWidget
doExit	./src/debugger/gui/DebuggerDialog.cxx	/^void DebuggerDialog::doExit()$/;"	f	class:DebuggerDialog
doRestart	./src/debugger/gui/RamWidget.cxx	/^void RamWidget::doRestart()$/;"	f	class:RamWidget
doScanlineAdvance	./src/debugger/gui/DebuggerDialog.cxx	/^void DebuggerDialog::doScanlineAdvance()$/;"	f	class:DebuggerDialog
doSearch	./src/debugger/gui/RamWidget.cxx	/^const string RamWidget::doSearch(const string& str)$/;"	f	class:RamWidget
doStep	./src/debugger/gui/DebuggerDialog.cxx	/^void DebuggerDialog::doStep()$/;"	f	class:DebuggerDialog
doTrace	./src/debugger/gui/DebuggerDialog.cxx	/^void DebuggerDialog::doTrace()$/;"	f	class:DebuggerDialog
done	./src/gui/ProgressDialog.cxx	/^void ProgressDialog::done()$/;"	f	class:ProgressDialog
down_arrow	./src/gui/ScrollBarWidget.cxx	/^static unsigned int down_arrow[8] = {$/;"	v	file:
dpeek	./src/debugger/CpuDebug.hxx	/^    static int dpeek(System* system, int address)$/;"	f	class:CpuDebug
dpeek	./src/debugger/Debugger.cxx	/^int Debugger::dpeek(int addr)$/;"	f	class:Debugger
draw	./src/gui/Dialog.cxx	/^void Dialog::draw()$/;"	f	class:Dialog
draw	./src/gui/DialogContainer.cxx	/^void DialogContainer::draw()$/;"	f	class:DialogContainer
draw	./src/gui/Widget.cxx	/^void Widget::draw()$/;"	f	class:Widget
drawBitmap	./src/common/FrameBufferGL.cxx	/^void FrameBufferGL::drawBitmap(uInt32* bitmap, Int32 tx, Int32 ty,$/;"	f	class:FrameBufferGL
drawBitmap	./src/common/FrameBufferSoft.cxx	/^void FrameBufferSoft::drawBitmap(uInt32* bitmap, Int32 xorig, Int32 yorig,$/;"	f	class:FrameBufferSoft
drawBitmap	./src/gp2x/FrameBufferGP2X.cxx	/^void FrameBufferGP2X::drawBitmap(uInt32* bitmap, Int32 xorig, Int32 yorig,$/;"	f	class:FrameBufferGP2X
drawBox	./src/gui/Widget.hxx	/^    void drawBox(bool draw) { _drawBox = draw;  }$/;"	f	class:CheckboxWidget
drawCaret	./src/debugger/gui/PromptWidget.cxx	/^void PromptWidget::drawCaret()$/;"	f	class:PromptWidget
drawCaret	./src/gui/EditableWidget.cxx	/^void EditableWidget::drawCaret()$/;"	f	class:EditableWidget
drawChar	./src/common/FrameBufferGL.cxx	/^void FrameBufferGL::drawChar(const GUI::Font* font, uInt8 chr,$/;"	f	class:FrameBufferGL
drawChar	./src/common/FrameBufferSoft.cxx	/^void FrameBufferSoft::drawChar(const GUI::Font* font, uInt8 chr,$/;"	f	class:FrameBufferSoft
drawChar	./src/gp2x/FrameBufferGP2X.cxx	/^void FrameBufferGP2X::drawChar(const GUI::Font* font, uInt8 chr,$/;"	f	class:FrameBufferGP2X
drawDialog	./src/debugger/gui/ContextMenu.cxx	/^void ContextMenu::drawDialog()$/;"	f	class:ContextMenu
drawDialog	./src/gui/Dialog.cxx	/^void Dialog::drawDialog()$/;"	f	class:Dialog
drawDialog	./src/gui/PopUpWidget.cxx	/^void PopUpDialog::drawDialog()$/;"	f	class:PopUpDialog
drawKeyMapping	./src/gui/EventMappingWidget.cxx	/^void EventMappingWidget::drawKeyMapping()$/;"	f	class:EventMappingWidget
drawMediaSource	./src/common/FrameBufferGL.cxx	/^void FrameBufferGL::drawMediaSource()$/;"	f	class:FrameBufferGL
drawMediaSource	./src/common/FrameBufferSoft.cxx	/^void FrameBufferSoft::drawMediaSource()$/;"	f	class:FrameBufferSoft
drawMediaSource	./src/gp2x/FrameBufferGP2X.cxx	/^void FrameBufferGP2X::drawMediaSource()$/;"	f	class:FrameBufferGP2X
drawMenuEntry	./src/gui/PopUpWidget.cxx	/^void PopUpDialog::drawMenuEntry(int entry, bool hilite)$/;"	f	class:PopUpDialog
drawMessage	./src/emucore/FrameBuffer.cxx	/^inline void FrameBuffer::drawMessage()$/;"	f	class:FrameBuffer
drawString	./src/emucore/FrameBuffer.cxx	/^void FrameBuffer::drawString(const GUI::Font* font, const string& s,$/;"	f	class:FrameBuffer
drawSurface	./src/common/FrameBufferGL.cxx	/^void FrameBufferGL::drawSurface(const GUI::Surface* surface, Int32 x, Int32 y)$/;"	f	class:FrameBufferGL
drawSurface	./src/common/FrameBufferSoft.cxx	/^void FrameBufferSoft::drawSurface(const GUI::Surface* surface, Int32 x, Int32 y)$/;"	f	class:FrameBufferSoft
drawSurface	./src/gp2x/FrameBufferGP2X.cxx	/^void FrameBufferGP2X::drawSurface(const GUI::Surface* surface, Int32 x, Int32 y)$/;"	f	class:FrameBufferGP2X
drawWidget	./src/debugger/gui/ColorWidget.cxx	/^void ColorWidget::drawWidget(bool hilite)$/;"	f	class:ColorWidget
drawWidget	./src/debugger/gui/DataGridWidget.cxx	/^void DataGridWidget::drawWidget(bool hilite)$/;"	f	class:DataGridWidget
drawWidget	./src/debugger/gui/PromptWidget.cxx	/^void PromptWidget::drawWidget(bool hilite)$/;"	f	class:PromptWidget
drawWidget	./src/debugger/gui/RomListWidget.cxx	/^void RomListWidget::drawWidget(bool hilite)$/;"	f	class:RomListWidget
drawWidget	./src/debugger/gui/TiaOutputWidget.cxx	/^void TiaOutputWidget::drawWidget(bool hilite)$/;"	f	class:TiaOutputWidget
drawWidget	./src/debugger/gui/TiaZoomWidget.cxx	/^void TiaZoomWidget::drawWidget(bool hilite)$/;"	f	class:TiaZoomWidget
drawWidget	./src/debugger/gui/ToggleBitWidget.cxx	/^void ToggleBitWidget::drawWidget(bool hilite)$/;"	f	class:ToggleBitWidget
drawWidget	./src/debugger/gui/TogglePixelWidget.cxx	/^void TogglePixelWidget::drawWidget(bool hilite)$/;"	f	class:TogglePixelWidget
drawWidget	./src/gui/CheckListWidget.cxx	/^void CheckListWidget::drawWidget(bool hilite)$/;"	f	class:CheckListWidget
drawWidget	./src/gui/EditTextWidget.cxx	/^void EditTextWidget::drawWidget(bool hilite)$/;"	f	class:EditTextWidget
drawWidget	./src/gui/PopUpWidget.cxx	/^void PopUpWidget::drawWidget(bool hilite)$/;"	f	class:PopUpWidget
drawWidget	./src/gui/RomInfoWidget.cxx	/^void RomInfoWidget::drawWidget(bool hilite)$/;"	f	class:RomInfoWidget
drawWidget	./src/gui/ScrollBarWidget.cxx	/^void ScrollBarWidget::drawWidget(bool hilite)$/;"	f	class:ScrollBarWidget
drawWidget	./src/gui/StringListWidget.cxx	/^void StringListWidget::drawWidget(bool hilite)$/;"	f	class:StringListWidget
drawWidget	./src/gui/TabWidget.cxx	/^void TabWidget::drawWidget(bool hilite)$/;"	f	class:TabWidget
drawWidget	./src/gui/Widget.cxx	/^void ButtonWidget::drawWidget(bool hilite)$/;"	f	class:ButtonWidget
drawWidget	./src/gui/Widget.cxx	/^void CheckboxWidget::drawWidget(bool hilite)$/;"	f	class:CheckboxWidget
drawWidget	./src/gui/Widget.cxx	/^void SliderWidget::drawWidget(bool hilite)$/;"	f	class:SliderWidget
drawWidget	./src/gui/Widget.cxx	/^void StaticTextWidget::drawWidget(bool hilite)$/;"	f	class:StaticTextWidget
drawWidget	./src/gui/Widget.hxx	/^    virtual void drawWidget(bool hilite) {}$/;"	f	class:Widget
dumpRAM	./src/debugger/Debugger.cxx	/^const string Debugger::dumpRAM()$/;"	f	class:Debugger
dumpTIA	./src/debugger/Debugger.cxx	/^const string Debugger::dumpTIA()$/;"	f	class:Debugger
duration	./src/common/SoundSDL.cxx	/^double SoundSDL::RegWriteQueue::duration()$/;"	f	class:SoundSDL::RegWriteQueue
duration	./src/wince/SoundWinCE.cxx	/^float SoundWinCE::RegWriteQueue::duration()$/;"	f	class:SoundWinCE::RegWriteQueue
editCheat	./src/cheat/CheatCodeDialog.cxx	/^void CheatCodeDialog::editCheat()$/;"	f	class:CheatCodeDialog
elements_id	./src/emucore/rsynth/elements.c	/^char *elements_id = "$Id: elements.c,v 1.1 2006\/06\/11 07:13:24 urchlay Exp $";$/;"	v
empty	./src/gui/Stack.hxx	/^    bool empty() const { return _size <= 0; }$/;"	f	class:FixedStack
enaBL	./src/debugger/TIADebug.cxx	/^bool TIADebug::enaBL(int newVal)$/;"	f	class:TIADebug
enaM0	./src/debugger/TIADebug.cxx	/^bool TIADebug::enaM0(int newVal)$/;"	f	class:TIADebug
enaM1	./src/debugger/TIADebug.cxx	/^bool TIADebug::enaM1(int newVal)$/;"	f	class:TIADebug
enable	./src/cheat/BankRomCheat.cxx	/^bool BankRomCheat::enable()$/;"	f	class:BankRomCheat
enable	./src/cheat/CheatManager.cxx	/^void CheatManager::enable(const string& code, bool enable)$/;"	f	class:CheatManager
enable	./src/cheat/CheetahCheat.cxx	/^bool CheetahCheat::enable()$/;"	f	class:CheetahCheat
enable	./src/cheat/RamCheat.cxx	/^bool RamCheat::enable()$/;"	f	class:RamCheat
enableBit	./src/emucore/TIA.hxx	/^    bool enableBit(TIABit b, bool mode) { myBitEnabled[b] = mode; return mode; }$/;"	f	class:TIA
enableBits	./src/emucore/Console.cxx	/^void Console::enableBits(bool enable) const$/;"	f	class:Console
enableBits	./src/emucore/TIA.hxx	/^    void enableBits(bool mode) { for(uInt8 i = 0; i < 6; ++i) myBitEnabled[i] = mode; }$/;"	f	class:TIA
enableButtons	./src/gui/LauncherDialog.cxx	/^void LauncherDialog::enableButtons(bool enable)$/;"	f	class:LauncherDialog
enablePhosphor	./src/common/FrameBufferGL.cxx	/^void FrameBufferGL::enablePhosphor(bool enable, int blend)$/;"	f	class:FrameBufferGL
enablePhosphor	./src/common/FrameBufferSoft.cxx	/^void FrameBufferSoft::enablePhosphor(bool enable, int blend)$/;"	f	class:FrameBufferSoft
enablePhosphor	./src/gp2x/FrameBufferGP2X.cxx	/^void FrameBufferGP2X::enablePhosphor(bool enable, int blend)$/;"	f	class:FrameBufferGP2X
enablePhosphor	./src/wince/FrameBufferWinCE.hxx	/^	virtual void enablePhosphor(bool enable, int blend)  { return; };$/;"	f	class:FrameBufferWinCE
enabled	./src/cheat/Cheat.hxx	/^    bool enabled() const { return myEnabled; }$/;"	f	class:Cheat
enabled	./src/gui/TabWidget.hxx	/^    bool enabled;$/;"	m	struct:TabWidget::Tab
end	./src/common/Array.hxx	/^    const_iterator end() const$/;"	f	class:Common::Array
end	./src/common/Array.hxx	/^    iterator end()$/;"	f	class:Common::Array
endEditMode	./src/debugger/gui/DataGridWidget.cxx	/^void DataGridWidget::endEditMode()$/;"	f	class:DataGridWidget
endEditMode	./src/gui/EditTextWidget.cxx	/^void EditTextWidget::endEditMode()$/;"	f	class:EditTextWidget
endEditMode	./src/gui/EditableWidget.hxx	/^    virtual void endEditMode()   { clearFlags(WIDGET_WANTS_RAWDATA); }$/;"	f	class:EditableWidget
endEditMode	./src/gui/ListWidget.cxx	/^void ListWidget::endEditMode()$/;"	f	class:ListWidget
endFrame	./src/emucore/TIA.cxx	/^inline void TIA::endFrame()$/;"	f	class:TIA
enqueue	./src/common/SoundSDL.cxx	/^void SoundSDL::RegWriteQueue::enqueue(const RegWrite& info)$/;"	f	class:SoundSDL::RegWriteQueue
enqueue	./src/wince/SoundWinCE.cxx	/^void SoundWinCE::RegWriteQueue::enqueue(const RegWrite& info)$/;"	f	class:SoundWinCE::RegWriteQueue
ensureCapacity	./src/common/Array.hxx	/^    void ensureCapacity(int new_len)$/;"	f	class:Common::Array
enter	./src/emucore/rsynth/phtoelm.c	/^enter(char *p, ...)$/;"	f	file:
enterDebugMode	./src/emucore/EventHandler.cxx	/^bool EventHandler::enterDebugMode()$/;"	f	class:EventHandler
enterMenuMode	./src/emucore/EventHandler.cxx	/^void EventHandler::enterMenuMode(State state)$/;"	f	class:EventHandler
enter_phonemes	./src/emucore/rsynth/phtoelm.c	/^enter_phonemes(void)$/;"	f	file:
enter_trans	./src/emucore/rsynth/phtoelm.c	/^enter_trans(char *trans, int verbose)$/;"	f
equate	./src/yacc/y.tab.c	/^	char *equate;$/;"	m	union:YYSTYPE	file:
equates	./src/debugger/Debugger.hxx	/^    EquateList& equates() const { return *myEquateList; }$/;"	f	class:Debugger
eraseMapping	./src/emucore/EventHandler.cxx	/^void EventHandler::eraseMapping(Event::Type event, EventMode mode)$/;"	f	class:EventHandler
eraseRemapping	./src/gui/EventMappingWidget.cxx	/^void EventMappingWidget::eraseRemapping()$/;"	f	class:EventMappingWidget
errMsg	./src/yacc/YaccParser.cxx	/^string errMsg;$/;"	v
errorMessage	./src/yacc/YaccParser.cxx	/^const string& errorMessage() {$/;"	f	namespace:YaccParser
eval	./src/debugger/DebuggerParser.cxx	/^string DebuggerParser::eval()$/;"	f	class:DebuggerParser
evalCondBreaks	./src/emucore/m6502/src/M6502.cxx	/^int M6502::evalCondBreaks()$/;"	f	class:M6502
evaluate	./src/cheat/BankRomCheat.cxx	/^void BankRomCheat::evaluate()$/;"	f	class:BankRomCheat
evaluate	./src/cheat/CheetahCheat.cxx	/^void CheetahCheat::evaluate()$/;"	f	class:CheetahCheat
evaluate	./src/cheat/RamCheat.cxx	/^void RamCheat::evaluate()$/;"	f	class:RamCheat
evaluate	./src/debugger/DebuggerExpressions.hxx	/^    uInt16 evaluate() { int denom = myRHS->evaluate();$/;"	f	class:DivExpression
evaluate	./src/debugger/DebuggerExpressions.hxx	/^    uInt16 evaluate() { int rhs = myRHS->evaluate();$/;"	f	class:ModExpression
evaluate	./src/debugger/DebuggerExpressions.hxx	/^    uInt16 evaluate() { return !(myLHS->evaluate()); }$/;"	f	class:LogNotExpression
evaluate	./src/debugger/DebuggerExpressions.hxx	/^    uInt16 evaluate() { return -(myLHS->evaluate()); }$/;"	f	class:UnaryMinusExpression
evaluate	./src/debugger/DebuggerExpressions.hxx	/^    uInt16 evaluate() { return 0xff & (myLHS->evaluate() >> 8); }$/;"	f	class:HiByteExpression
evaluate	./src/debugger/DebuggerExpressions.hxx	/^    uInt16 evaluate() { return 0xff & myLHS->evaluate(); }$/;"	f	class:LoByteExpression
evaluate	./src/debugger/DebuggerExpressions.hxx	/^    uInt16 evaluate() { return CALL_CPUDEBUG_METHOD(myMethod); }$/;"	f	class:CpuMethodExpression
evaluate	./src/debugger/DebuggerExpressions.hxx	/^    uInt16 evaluate() { return CALL_TIADEBUG_METHOD(myMethod); }$/;"	f	class:TiaMethodExpression
evaluate	./src/debugger/DebuggerExpressions.hxx	/^    uInt16 evaluate() { return Debugger::debugger().dpeek(myLHS->evaluate()); }$/;"	f	class:WordDerefExpression
evaluate	./src/debugger/DebuggerExpressions.hxx	/^    uInt16 evaluate() { return Debugger::debugger().equates().getAddress(myLabel); }$/;"	f	class:EquateExpression
evaluate	./src/debugger/DebuggerExpressions.hxx	/^    uInt16 evaluate() { return Debugger::debugger().peek(myLHS->evaluate() + myRHS->evaluate()); }$/;"	f	class:ByteDerefOffsetExpression
evaluate	./src/debugger/DebuggerExpressions.hxx	/^    uInt16 evaluate() { return Debugger::debugger().peek(myLHS->evaluate()); }$/;"	f	class:ByteDerefExpression
evaluate	./src/debugger/DebuggerExpressions.hxx	/^    uInt16 evaluate() { return myLHS->evaluate() != myRHS->evaluate(); }$/;"	f	class:NotEqualsExpression
evaluate	./src/debugger/DebuggerExpressions.hxx	/^    uInt16 evaluate() { return myLHS->evaluate() & myRHS->evaluate(); }$/;"	f	class:BinAndExpression
evaluate	./src/debugger/DebuggerExpressions.hxx	/^    uInt16 evaluate() { return myLHS->evaluate() && myRHS->evaluate(); }$/;"	f	class:LogAndExpression
evaluate	./src/debugger/DebuggerExpressions.hxx	/^    uInt16 evaluate() { return myLHS->evaluate() * myRHS->evaluate(); }$/;"	f	class:MultExpression
evaluate	./src/debugger/DebuggerExpressions.hxx	/^    uInt16 evaluate() { return myLHS->evaluate() + myRHS->evaluate(); }$/;"	f	class:PlusExpression
evaluate	./src/debugger/DebuggerExpressions.hxx	/^    uInt16 evaluate() { return myLHS->evaluate() - myRHS->evaluate(); }$/;"	f	class:MinusExpression
evaluate	./src/debugger/DebuggerExpressions.hxx	/^    uInt16 evaluate() { return myLHS->evaluate() < myRHS->evaluate(); }$/;"	f	class:LessExpression
evaluate	./src/debugger/DebuggerExpressions.hxx	/^    uInt16 evaluate() { return myLHS->evaluate() << myRHS->evaluate(); }$/;"	f	class:ShiftLeftExpression
evaluate	./src/debugger/DebuggerExpressions.hxx	/^    uInt16 evaluate() { return myLHS->evaluate() <= myRHS->evaluate(); }$/;"	f	class:LessEqualsExpression
evaluate	./src/debugger/DebuggerExpressions.hxx	/^    uInt16 evaluate() { return myLHS->evaluate() == myRHS->evaluate(); }$/;"	f	class:EqualsExpression
evaluate	./src/debugger/DebuggerExpressions.hxx	/^    uInt16 evaluate() { return myLHS->evaluate() > myRHS->evaluate(); }$/;"	f	class:GreaterExpression
evaluate	./src/debugger/DebuggerExpressions.hxx	/^    uInt16 evaluate() { return myLHS->evaluate() >= myRHS->evaluate(); }$/;"	f	class:GreaterEqualsExpression
evaluate	./src/debugger/DebuggerExpressions.hxx	/^    uInt16 evaluate() { return myLHS->evaluate() >> myRHS->evaluate(); }$/;"	f	class:ShiftRightExpression
evaluate	./src/debugger/DebuggerExpressions.hxx	/^    uInt16 evaluate() { return myLHS->evaluate() ^ myRHS->evaluate(); }$/;"	f	class:BinXorExpression
evaluate	./src/debugger/DebuggerExpressions.hxx	/^    uInt16 evaluate() { return myLHS->evaluate() | myRHS->evaluate(); }$/;"	f	class:BinOrExpression
evaluate	./src/debugger/DebuggerExpressions.hxx	/^    uInt16 evaluate() { return myLHS->evaluate() || myRHS->evaluate(); }$/;"	f	class:LogOrExpression
evaluate	./src/debugger/DebuggerExpressions.hxx	/^    uInt16 evaluate() { return myValue; }$/;"	f	class:ConstExpression
evaluate	./src/debugger/DebuggerExpressions.hxx	/^    uInt16 evaluate() { return ~(myLHS->evaluate()); }$/;"	f	class:BinNotExpression
evaluate	./src/debugger/DebuggerExpressions.hxx	/^    uInt16 evaluate() {$/;"	f	class:FunctionExpression
event	./src/emucore/EventHandler.hxx	/^      Event::Type event;$/;"	m	struct:EventHandler::ActionList
event	./src/emucore/EventHandler.hxx	/^    Event* event() { return myEvent; }$/;"	f	class:EventHandler
eventAtIndex	./src/emucore/EventHandler.cxx	/^Event::Type EventHandler::eventAtIndex(int idx, EventMode mode)$/;"	f	class:EventHandler
eventForJoyAxis	./src/emucore/EventHandler.hxx	/^    inline Event::Type eventForJoyAxis(int stick, int axis, int value, EventMode mode)$/;"	f	class:EventHandler
eventForJoyButton	./src/emucore/EventHandler.hxx	/^    inline Event::Type eventForJoyButton(int stick, int button, EventMode mode)$/;"	f	class:EventHandler
eventForJoyHat	./src/emucore/EventHandler.hxx	/^    inline Event::Type eventForJoyHat(int stick, int hat, int value, EventMode mode)$/;"	f	class:EventHandler
eventForKey	./src/emucore/EventHandler.hxx	/^    inline Event::Type eventForKey(int key, EventMode mode)$/;"	f	class:EventHandler
eventHandler	./src/emucore/OSystem.hxx	/^    inline EventHandler& eventHandler() const { return *myEventHandler; }$/;"	f	class:OSystem
eventIsAnalog	./src/emucore/EventHandler.cxx	/^inline bool EventHandler::eventIsAnalog(Event::Type event)$/;"	f	class:EventHandler
eventStateChange	./src/emucore/EventHandler.cxx	/^bool EventHandler::eventStateChange(Event::Type type)$/;"	f	class:EventHandler
exec	./src/debugger/DebuggerParser.cxx	/^string DebuggerParser::exec(const string& file, bool verbose)$/;"	f	class:DebuggerParser
execute	./src/emucore/m6502/src/M6502Hi.cxx	/^bool M6502High::execute(uInt32 number)$/;"	f	class:M6502High
execute	./src/emucore/m6502/src/M6502Low.cxx	/^bool M6502Low::execute(uInt32 number)$/;"	f	class:M6502Low
executeA	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeA()$/;"	f	class:DebuggerParser
executeBank	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeBank()$/;"	f	class:DebuggerParser
executeBase	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeBase()$/;"	f	class:DebuggerParser
executeBreak	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeBreak()$/;"	f	class:DebuggerParser
executeBreakif	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeBreakif()$/;"	f	class:DebuggerParser
executeC	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeC()$/;"	f	class:DebuggerParser
executeCheat	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeCheat()$/;"	f	class:DebuggerParser
executeClearbreaks	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeClearbreaks()$/;"	f	class:DebuggerParser
executeCleartraps	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeCleartraps()$/;"	f	class:DebuggerParser
executeClearwatches	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeClearwatches()$/;"	f	class:DebuggerParser
executeColortest	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeColortest()$/;"	f	class:DebuggerParser
executeD	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeD()$/;"	f	class:DebuggerParser
executeDefine	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeDefine()$/;"	f	class:DebuggerParser
executeDelbreakif	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeDelbreakif()$/;"	f	class:DebuggerParser
executeDelwatch	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeDelwatch()$/;"	f	class:DebuggerParser
executeDisasm	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeDisasm()$/;"	f	class:DebuggerParser
executeDump	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeDump()$/;"	f	class:DebuggerParser
executeExec	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeExec()$/;"	f	class:DebuggerParser
executeFrame	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeFrame()$/;"	f	class:DebuggerParser
executeFunction	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeFunction()$/;"	f	class:DebuggerParser
executeHelp	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeHelp()$/;"	f	class:DebuggerParser
executeList	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeList()$/;"	f	class:DebuggerParser
executeListbreaks	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeListbreaks()$/;"	f	class:DebuggerParser
executeListtraps	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeListtraps()$/;"	f	class:DebuggerParser
executeListwatches	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeListwatches()$/;"	f	class:DebuggerParser
executeLoadlist	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeLoadlist()$/;"	f	class:DebuggerParser
executeLoadstate	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeLoadstate()$/;"	f	class:DebuggerParser
executeLoadsym	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeLoadsym()$/;"	f	class:DebuggerParser
executeN	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeN()$/;"	f	class:DebuggerParser
executePc	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executePc()$/;"	f	class:DebuggerParser
executePrint	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executePrint()$/;"	f	class:DebuggerParser
executeRam	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeRam()$/;"	f	class:DebuggerParser
executeReset	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeReset()$/;"	f	class:DebuggerParser
executeRiot	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeRiot()$/;"	f	class:DebuggerParser
executeRom	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeRom()$/;"	f	class:DebuggerParser
executeRun	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeRun()$/;"	f	class:DebuggerParser
executeRunTo	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeRunTo()$/;"	f	class:DebuggerParser
executeS	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeS()$/;"	f	class:DebuggerParser
executeSave	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeSave()$/;"	f	class:DebuggerParser
executeSaverom	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeSaverom()$/;"	f	class:DebuggerParser
executeSaveses	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeSaveses()$/;"	f	class:DebuggerParser
executeSavestate	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeSavestate()$/;"	f	class:DebuggerParser
executeSavesym	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeSavesym()$/;"	f	class:DebuggerParser
executeScanline	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeScanline()$/;"	f	class:DebuggerParser
executeStep	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeStep()$/;"	f	class:DebuggerParser
executeTia	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeTia()$/;"	f	class:DebuggerParser
executeTrace	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeTrace()$/;"	f	class:DebuggerParser
executeTrap	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeTrap()$/;"	f	class:DebuggerParser
executeTrapread	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeTrapread()$/;"	f	class:DebuggerParser
executeTrapwrite	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeTrapwrite()$/;"	f	class:DebuggerParser
executeUndef	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeUndef()$/;"	f	class:DebuggerParser
executeV	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeV()$/;"	f	class:DebuggerParser
executeWatch	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeWatch()$/;"	f	class:DebuggerParser
executeX	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeX()$/;"	f	class:DebuggerParser
executeY	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeY()$/;"	f	class:DebuggerParser
executeZ	./src/debugger/DebuggerParser.cxx	/^void DebuggerParser::executeZ()$/;"	f	class:DebuggerParser
executor	./src/debugger/DebuggerParser.hxx	/^      METHOD executor;$/;"	m	struct:DebuggerParser::Command
exp	./src/yacc/y.tab.c	/^	Expression *exp;$/;"	m	union:YYSTYPE	file:
expression	./src/yacc/stella.y	/^expression:	expression '+' expression { if(DEBUG_EXP) fprintf(stderr, " +"); $$ = new PlusExpression($1, $3); lastExp = $$; }$/;"	l
extend	./src/gui/Rect.hxx	/^	void extend(const Rect & r) {$/;"	f	struct:GUI::Rect
extractLabel	./src/debugger/EquateList.cxx	/^string EquateList::extractLabel(char *c)$/;"	f	class:EquateList
extractValue	./src/debugger/EquateList.cxx	/^int EquateList::extractValue(char *c)$/;"	f	class:EquateList
fatalError	./src/emucore/m6502/src/M6502.hxx	/^    bool fatalError() const$/;"	f	class:M6502
features	./src/emucore/OSystem.hxx	/^    const string& features() const { return myFeatures; }$/;"	f	class:OSystem
file	./src/emucore/unzip.c	/^	FILE* file;                 \/* io structore of the zipfile *\/$/;"	m	struct:__anon1	file:
file	./src/emucore/unzip.c	/^	FILE* file;                 \/* io structore of the zipfile *\/$/;"	m	struct:__anon2	file:
fileExists	./src/gp2x/FSNodeGP2X.cxx	/^bool AbstractFilesystemNode::fileExists(const string& path)$/;"	f	class:AbstractFilesystemNode
fileExists	./src/unix/FSNodePOSIX.cxx	/^bool AbstractFilesystemNode::fileExists(const string& path)$/;"	f	class:AbstractFilesystemNode
fileExists	./src/win32/FSNodeWin32.cxx	/^bool AbstractFilesystemNode::fileExists(const string& path)$/;"	f	class:AbstractFilesystemNode
fileExists	./src/wince/FSNodeWinCE.cxx	/^bool AbstractFilesystemNode::fileExists(const string& path)$/;"	f	class:AbstractFilesystemNode
file_in_zip_read_info_s	./src/emucore/unzip.c	/^} file_in_zip_read_info_s;$/;"	t	typeref:struct:__anon1	file:
fillGrid	./src/debugger/gui/AudioWidget.cxx	/^void AudioWidget::fillGrid()$/;"	f	class:AudioWidget
fillGrid	./src/debugger/gui/CpuWidget.cxx	/^void CpuWidget::fillGrid()$/;"	f	class:CpuWidget
fillGrid	./src/debugger/gui/RamWidget.cxx	/^void RamWidget::fillGrid(bool updateOld)$/;"	f	class:RamWidget
fillGrid	./src/debugger/gui/TiaWidget.cxx	/^void TiaWidget::fillGrid()$/;"	f	class:TiaWidget
fillRect	./src/common/FrameBufferGL.cxx	/^void FrameBufferGL::fillRect(uInt32 x, uInt32 y, uInt32 w, uInt32 h, int color)$/;"	f	class:FrameBufferGL
fillRect	./src/common/FrameBufferSoft.cxx	/^void FrameBufferSoft::fillRect(uInt32 x, uInt32 y, uInt32 w, uInt32 h, int color)$/;"	f	class:FrameBufferSoft
fillRect	./src/gp2x/FrameBufferGP2X.cxx	/^void FrameBufferGP2X::fillRect(uInt32 x, uInt32 y, uInt32 w, uInt32 h,$/;"	f	class:FrameBufferGP2X
filter	./src/common/FrameBufferGL.hxx	/^      GLint   filter;$/;"	m	struct:FrameBufferGL::glBufferType
filter	./src/emucore/rsynth/holmes.c	/^filter(filter_ptr p, float v)$/;"	f	file:
filter_ptr	./src/emucore/rsynth/holmes.c	/^} filter_t, *filter_ptr;$/;"	t	typeref:struct:__anon11	file:
filter_t	./src/emucore/rsynth/holmes.c	/^} filter_t, *filter_ptr;$/;"	t	typeref:struct:__anon11	file:
findItem	./src/debugger/gui/ContextMenu.cxx	/^int ContextMenu::findItem(int x, int y) const$/;"	f	class:ContextMenu
findItem	./src/debugger/gui/DataGridWidget.cxx	/^int DataGridWidget::findItem(int x, int y)$/;"	f	class:DataGridWidget
findItem	./src/debugger/gui/ToggleWidget.cxx	/^int ToggleWidget::findItem(int x, int y)$/;"	f	class:ToggleWidget
findItem	./src/gui/ListWidget.cxx	/^int ListWidget::findItem(int x, int y) const$/;"	f	class:ListWidget
findItem	./src/gui/PopUpWidget.cxx	/^int PopUpDialog::findItem(int x, int y) const$/;"	f	class:PopUpDialog
findWidget	./src/gui/Dialog.cxx	/^Widget* Dialog::findWidget(int x, int y)$/;"	f	class:Dialog
findWidget	./src/gui/TabWidget.cxx	/^Widget *TabWidget::findWidget(int x, int y)$/;"	f	class:TabWidget
findWidget	./src/gui/Widget.hxx	/^    virtual Widget* findWidget(int x, int y) { return this; }$/;"	f	class:Widget
findWidgetInChain	./src/gui/Widget.cxx	/^Widget* Widget::findWidgetInChain(Widget *w, int x, int y)$/;"	f	class:Widget
find_elm	./src/emucore/rsynth/phtoelm.c	/^find_elm(char *s)$/;"	f	file:
firstWidget	./src/gui/TabWidget.hxx	/^    Widget* firstWidget;$/;"	m	struct:TabWidget::Tab
firstchar	./src/gui/Font.hxx	/^  int           firstchar;   \/* first character in bitmap *\/$/;"	m	struct:__anon35
flags	./src/debugger/Equate.hxx	/^  int flags;$/;"	m	struct:Equate
flags	./src/gui/DialogContainer.hxx	/^      int flags;$/;"	m	struct:DialogContainer::__anon38
flush_samples	./src/emucore/SpeakJet.cxx	/^void *SpeakJet::flush_samples(void *user_data,$/;"	f	class:SpeakJet
focusList	./src/gui/Dialog.hxx	/^    WidgetArray focusList;$/;"	m	struct:Dialog::Focus
focusedWidget	./src/gui/Dialog.hxx	/^    Widget* focusedWidget;$/;"	m	struct:Dialog::Focus
font	./src/emucore/OSystem.hxx	/^    inline const GUI::Font& font() const { return *myFont; }$/;"	f	class:OSystem
font	./src/gui/Widget.hxx	/^    virtual const GUI::Font* font() { return _font; }$/;"	f	class:Widget
fopen	./src/win32/SDL_win32_main.c	19;"	d	file:
format	./src/common/FrameBufferGL.hxx	/^      GLenum  format;$/;"	m	struct:FrameBufferGL::glBufferType
formatFlags	./src/debugger/Debugger.cxx	/^void Debugger::formatFlags(BoolArray& b, char *out)$/;"	f	class:Debugger
frameBuffer	./src/emucore/OSystem.hxx	/^    inline FrameBuffer& frameBuffer() const { return *myFrameBuffer; }$/;"	f	class:OSystem
frameCount	./src/debugger/TIADebug.cxx	/^int TIADebug::frameCount()$/;"	f	class:TIADebug
frameRate	./src/emucore/OSystem.hxx	/^    inline uInt32 frameRate() const { return myDisplayFrameRate; }$/;"	f	class:OSystem
frameRect	./src/emucore/FrameBuffer.cxx	/^void FrameBuffer::frameRect(uInt32 x, uInt32 y, uInt32 w, uInt32 h,$/;"	f	class:FrameBuffer
frameReset	./src/emucore/TIA.cxx	/^void TIA::frameReset()$/;"	f	class:TIA
freopen	./src/win32/SDL_win32_main.c	20;"	d	file:
front	./src/common/SoundSDL.cxx	/^SoundSDL::RegWrite& SoundSDL::RegWriteQueue::front()$/;"	f	class:SoundSDL::RegWriteQueue
front	./src/wince/SoundWinCE.cxx	/^RegWrite& SoundWinCE::RegWriteQueue::front()$/;"	f	class:SoundWinCE::RegWriteQueue
fry	./src/emucore/Console.cxx	/^void Console::fry() const$/;"	f	class:Console
frying	./src/emucore/EventHandler.hxx	/^    inline bool frying() { return myFryingFlag; }$/;"	f	class:EventHandler
fullScreen	./src/emucore/FrameBuffer.cxx	/^bool FrameBuffer::fullScreen() const$/;"	f	class:FrameBuffer
function	./src/yacc/y.tab.c	/^	char *function;$/;"	m	union:YYSTYPE	file:
functionDefs	./src/debugger/Debugger.hxx	/^    FunctionDefMap functionDefs;$/;"	m	class:Debugger
functions	./src/debugger/Debugger.hxx	/^    FunctionMap functions;$/;"	m	class:Debugger
gen_noise	./src/emucore/rsynth/opsynth.c	/^gen_noise(rsynth_t * rsynth)$/;"	f
gen_voice	./src/emucore/rsynth/opsynth.c	/^gen_voice(rsynth_t * rsynth, float noise)$/;"	f	file:
get	./src/emucore/Event.cxx	/^Int32 Event::get(Type type) const$/;"	f	class:Event
get	./src/emucore/Props.cxx	/^const string& Properties::get(PropertyType key) const$/;"	f	class:Properties
get	./src/emucore/TIASnd.cxx	/^uInt8 TIASound::get(uInt16 address)$/;"	f	class:TIASound
getAbsX	./src/gui/GuiObject.hxx	/^    virtual int getAbsX() const     { return _x; }$/;"	f	class:GuiObject
getAbsX	./src/gui/Widget.hxx	/^    virtual int getAbsX() const  { return _x + _boss->getChildX(); }$/;"	f	class:Widget
getAbsY	./src/gui/GuiObject.hxx	/^    virtual int getAbsY() const     { return _y; }$/;"	f	class:GuiObject
getAbsY	./src/gui/Widget.hxx	/^    virtual int getAbsY() const  { return _y + _boss->getChildY(); }$/;"	f	class:Widget
getActionList	./src/emucore/EventHandler.cxx	/^StringList EventHandler::getActionList(EventMode mode)$/;"	f	class:EventHandler
getActiveTab	./src/gui/TabWidget.hxx	/^    int getActiveTab() { return _activeTab; }$/;"	f	class:TabWidget
getAddress	./src/debugger/EquateList.cxx	/^int EquateList::getAddress(const string& label)$/;"	f	class:EquateList
getArgs	./src/debugger/DebuggerParser.cxx	/^bool DebuggerParser::getArgs(const string& command, string& verb)$/;"	f	class:DebuggerParser
getBank	./src/debugger/CpuDebug.cxx	/^int CpuDebug::getBank()$/;"	f	class:CpuDebug
getBank	./src/debugger/Debugger.cxx	/^int Debugger::getBank()$/;"	f	class:Debugger
getBool	./src/emucore/Deserializer.cxx	/^bool Deserializer::getBool(void)$/;"	f	class:Deserializer
getBool	./src/emucore/Settings.cxx	/^bool Settings::getBool(const string& key) const$/;"	f	class:Settings
getByte	./src/emucore/Deserializer.cxx	/^char Deserializer::getByte(void)$/;"	f	class:Deserializer
getCaretOffset	./src/gui/EditableWidget.cxx	/^int EditableWidget::getCaretOffset() const$/;"	f	class:EditableWidget
getCartType	./src/debugger/Debugger.cxx	/^string Debugger::getCartType()$/;"	f	class:Debugger
getCharWidth	./src/gui/Font.cxx	/^int Font::getCharWidth(uInt8 chr) const$/;"	f	class:GUI::Font
getChildX	./src/gui/GuiObject.hxx	/^    virtual int getChildX() const   { return getAbsX(); }$/;"	f	class:GuiObject
getChildY	./src/gui/GuiObject.hxx	/^    virtual int getChildY() const   { return getAbsY(); }$/;"	f	class:GuiObject
getChildY	./src/gui/TabWidget.cxx	/^int TabWidget::getChildY() const$/;"	f	class:TabWidget
getClipHeight	./src/gui/Surface.hxx	/^    inline int getClipHeight() const { return myClipHeight; }$/;"	f	class:GUI::Surface
getClipWidth	./src/gui/Surface.hxx	/^    inline int getClipWidth() const  { return myClipWidth;  }$/;"	f	class:GUI::Surface
getCmd	./src/gui/Widget.hxx	/^    int getCmd() const    { return _cmd; }$/;"	f	class:ButtonWidget
getColor	./src/debugger/gui/ColorWidget.hxx	/^    int  getColor() const    { return _color;  }$/;"	f	class:ColorWidget
getCompletionPrefix	./src/debugger/DebuggerParser.cxx	/^const char *DebuggerParser::getCompletionPrefix()$/;"	f	class:DebuggerParser
getCompletionPrefix	./src/debugger/EquateList.cxx	/^const char *EquateList::getCompletionPrefix()$/;"	f	class:EquateList
getCompletions	./src/debugger/DebuggerParser.cxx	/^const char *DebuggerParser::getCompletions()$/;"	f	class:DebuggerParser
getCompletions	./src/debugger/EquateList.cxx	/^const char *EquateList::getCompletions()$/;"	f	class:EquateList
getCondBreakNames	./src/emucore/m6502/src/M6502.cxx	/^const StringList& M6502::getCondBreakNames()$/;"	f	class:M6502
getCpuSpecial	./src/yacc/YaccParser.cxx	/^CPUDEBUG_INT_METHOD getCpuSpecial(char *c) {$/;"	f	namespace:YaccParser
getDataBusState	./src/emucore/m6502/src/System.hxx	/^    inline uInt8 getDataBusState() const$/;"	f	class:System
getDialogBounds	./src/debugger/Debugger.cxx	/^GUI::Rect Debugger::getDialogBounds() const$/;"	f	class:Debugger
getEditRect	./src/debugger/gui/DataGridWidget.cxx	/^GUI::Rect DataGridWidget::getEditRect() const$/;"	f	class:DataGridWidget
getEditRect	./src/debugger/gui/RomListWidget.cxx	/^GUI::Rect RomListWidget::getEditRect() const$/;"	f	class:RomListWidget
getEditRect	./src/gui/CheckListWidget.cxx	/^GUI::Rect CheckListWidget::getEditRect() const$/;"	f	class:CheckListWidget
getEditRect	./src/gui/EditTextWidget.cxx	/^GUI::Rect EditTextWidget::getEditRect() const$/;"	f	class:EditTextWidget
getEditRect	./src/gui/StringListWidget.cxx	/^GUI::Rect StringListWidget::getEditRect() const$/;"	f	class:StringListWidget
getEditString	./src/gui/EditableWidget.hxx	/^    virtual const string& getEditString() const { return _editString; }$/;"	f	class:EditableWidget
getExternalPos	./src/emucore/Settings.cxx	/^int Settings::getExternalPos(const string& key) const$/;"	f	class:Settings
getExternalSettings	./src/emucore/Settings.hxx	/^    const SettingsArray& getExternalSettings() const$/;"	f	class:Settings
getFlags	./src/gui/Widget.hxx	/^    int  getFlags() const       { return _flags;    }$/;"	f	class:Widget
getFloat	./src/emucore/Settings.cxx	/^float Settings::getFloat(const string& key) const$/;"	f	class:Settings
getFocusList	./src/gui/GuiObject.hxx	/^    WidgetArray& getFocusList() { return _focusList; }$/;"	f	class:GuiObject
getFontHeight	./src/gui/Font.hxx	/^    int getFontHeight() const { return myFontDesc.height; }$/;"	f	class:GUI::Font
getFormatted	./src/debugger/EquateList.cxx	/^const char *EquateList::getFormatted(int addr, int places)$/;"	f	class:EquateList
getFormatted	./src/debugger/EquateList.cxx	/^const char *EquateList::getFormatted(int addr, int places, int flags)$/;"	f	class:EquateList
getFramerate	./src/emucore/Console.cxx	/^uInt32 Console::getFramerate() const$/;"	f	class:Console
getFunction	./src/debugger/Debugger.cxx	/^Expression* Debugger::getFunction(const string& name)$/;"	f	class:Debugger
getFunctionDef	./src/debugger/Debugger.cxx	/^string Debugger::getFunctionDef(const string& name)$/;"	f	class:Debugger
getFunctionDefMap	./src/debugger/Debugger.cxx	/^const FunctionDefMap Debugger::getFunctionDefMap() const$/;"	f	class:Debugger
getHeight	./src/gui/GuiObject.hxx	/^    virtual int getHeight() const   { return _h; }$/;"	f	class:GuiObject
getHeight	./src/gui/Surface.hxx	/^    inline int getHeight() const { return myBaseHeight; }$/;"	f	class:GUI::Surface
getHighlighted	./src/gui/ListWidget.hxx	/^    int getHighlighted() const     { return _highlightedItem; }$/;"	f	class:ListWidget
getID	./src/gui/Widget.hxx	/^    int  getID()        { return _id; }$/;"	f	class:Widget
getImage	./src/emucore/Cart0840.cxx	/^uInt8* Cartridge0840::getImage(int& size)$/;"	f	class:Cartridge0840
getImage	./src/emucore/Cart2K.cxx	/^uInt8* Cartridge2K::getImage(int& size)$/;"	f	class:Cartridge2K
getImage	./src/emucore/Cart3E.cxx	/^uInt8* Cartridge3E::getImage(int& size)$/;"	f	class:Cartridge3E
getImage	./src/emucore/Cart3F.cxx	/^uInt8* Cartridge3F::getImage(int& size)$/;"	f	class:Cartridge3F
getImage	./src/emucore/Cart4A50.cxx	/^uInt8* Cartridge4A50::getImage(int& size)$/;"	f	class:Cartridge4A50
getImage	./src/emucore/Cart4K.cxx	/^uInt8* Cartridge4K::getImage(int& size)$/;"	f	class:Cartridge4K
getImage	./src/emucore/CartAR.cxx	/^uInt8* CartridgeAR::getImage(int& size)$/;"	f	class:CartridgeAR
getImage	./src/emucore/CartCV.cxx	/^uInt8* CartridgeCV::getImage(int& size)$/;"	f	class:CartridgeCV
getImage	./src/emucore/CartDPC.cxx	/^uInt8* CartridgeDPC::getImage(int& size)$/;"	f	class:CartridgeDPC
getImage	./src/emucore/CartE0.cxx	/^uInt8* CartridgeE0::getImage(int& size)$/;"	f	class:CartridgeE0
getImage	./src/emucore/CartE7.cxx	/^uInt8* CartridgeE7::getImage(int& size)$/;"	f	class:CartridgeE7
getImage	./src/emucore/CartF4.cxx	/^uInt8* CartridgeF4::getImage(int& size)$/;"	f	class:CartridgeF4
getImage	./src/emucore/CartF4SC.cxx	/^uInt8* CartridgeF4SC::getImage(int& size)$/;"	f	class:CartridgeF4SC
getImage	./src/emucore/CartF6.cxx	/^uInt8* CartridgeF6::getImage(int& size)$/;"	f	class:CartridgeF6
getImage	./src/emucore/CartF6SC.cxx	/^uInt8* CartridgeF6SC::getImage(int& size)$/;"	f	class:CartridgeF6SC
getImage	./src/emucore/CartF8.cxx	/^uInt8* CartridgeF8::getImage(int& size)$/;"	f	class:CartridgeF8
getImage	./src/emucore/CartF8SC.cxx	/^uInt8* CartridgeF8SC::getImage(int& size)$/;"	f	class:CartridgeF8SC
getImage	./src/emucore/CartFASC.cxx	/^uInt8* CartridgeFASC::getImage(int& size)$/;"	f	class:CartridgeFASC
getImage	./src/emucore/CartFE.cxx	/^uInt8* CartridgeFE::getImage(int& size)$/;"	f	class:CartridgeFE
getImage	./src/emucore/CartMB.cxx	/^uInt8* CartridgeMB::getImage(int& size)$/;"	f	class:CartridgeMB
getImage	./src/emucore/CartMC.cxx	/^uInt8* CartridgeMC::getImage(int& size)$/;"	f	class:CartridgeMC
getImage	./src/emucore/CartSB.cxx	/^uInt8* CartridgeSB::getImage(int& size)$/;"	f	class:CartridgeSB
getImage	./src/emucore/CartUA.cxx	/^uInt8* CartridgeUA::getImage(int& size)$/;"	f	class:CartridgeUA
getImage	./src/emucore/CartX07.cxx	/^uInt8* CartridgeX07::getImage(int& size)$/;"	f	class:CartridgeX07
getInt	./src/emucore/Deserializer.cxx	/^int Deserializer::getInt(void)$/;"	f	class:Deserializer
getInt	./src/emucore/Settings.cxx	/^int Settings::getInt(const string& key) const$/;"	f	class:Settings
getIntState	./src/debugger/gui/TogglePixelWidget.cxx	/^int TogglePixelWidget::getIntState()$/;"	f	class:TogglePixelWidget
getInternalPos	./src/emucore/Settings.cxx	/^int Settings::getInternalPos(const string& key) const$/;"	f	class:Settings
getInternalSettings	./src/emucore/Settings.hxx	/^    const SettingsArray& getInternalSettings() const$/;"	f	class:Settings
getJoystick	./src/emucore/EventHandler.hxx	/^    inline SDL_Joystick* getJoystick(int i) { return ourJoysticks[i].stick; }$/;"	f	class:EventHandler
getLabel	./src/debugger/EquateList.cxx	/^const string& EquateList::getLabel(int addr)$/;"	f	class:EquateList
getLabel	./src/debugger/EquateList.cxx	/^const string& EquateList::getLabel(int addr, int flags)$/;"	f	class:EquateList
getLabel	./src/gui/Widget.hxx	/^    const string& getLabel() const      { return _label; }$/;"	f	class:StaticTextWidget
getLineHeight	./src/gui/Font.hxx	/^    int getLineHeight() const { return myFontDesc.height + 2; }$/;"	f	class:GUI::Font
getLineRect	./src/debugger/gui/RomListWidget.cxx	/^GUI::Rect RomListWidget::getLineRect() const$/;"	f	class:RomListWidget
getList	./src/gui/ListWidget.hxx	/^    const StringList& getList()	const        { return _list; }$/;"	f	class:ListWidget
getMD5	./src/emucore/PropsSet.cxx	/^void PropertiesSet::getMD5(const string& md5, Properties& properties,$/;"	f	class:PropertiesSet
getMaxCharWidth	./src/gui/Font.hxx	/^    int getMaxCharWidth() const { return myFontDesc.maxwidth; }$/;"	f	class:GUI::Font
getMaxValue	./src/gui/Widget.hxx	/^    int getMaxValue() const      { return _valueMax; }$/;"	f	class:SliderWidget
getMinValue	./src/gui/Widget.hxx	/^    int getMinValue() const      { return _valueMin; }$/;"	f	class:SliderWidget
getNodeForPath	./src/gp2x/FSNodeGP2X.cxx	/^AbstractFilesystemNode* FilesystemNode::getNodeForPath(const string& path)$/;"	f	class:FilesystemNode
getNodeForPath	./src/unix/FSNodePOSIX.cxx	/^AbstractFilesystemNode* FilesystemNode::getNodeForPath(const string& path)$/;"	f	class:FilesystemNode
getNodeForPath	./src/win32/FSNodeWin32.cxx	/^AbstractFilesystemNode* FilesystemNode::getNodeForPath(const string& path)$/;"	f	class:FilesystemNode
getNodeForPath	./src/wince/FSNodeWinCE.cxx	/^AbstractFilesystemNode* FilesystemNode::getNodeForPath(const string& path)$/;"	f	class:FilesystemNode
getOSystem	./src/debugger/Debugger.hxx	/^	 OSystem *getOSystem() { return myOSystem; }$/;"	f	class:Debugger
getOldState	./src/debugger/CpuDebug.hxx	/^    DebuggerState& getOldState() { return myOldState; }$/;"	f	class:CpuDebug
getOldState	./src/debugger/RamDebug.hxx	/^    DebuggerState& getOldState() { return myOldState; }$/;"	f	class:RamDebug
getOldState	./src/debugger/TIADebug.hxx	/^    DebuggerState& getOldState() { return myOldState; }$/;"	f	class:TIADebug
getPC	./src/emucore/m6502/src/M6502.hxx	/^    uInt16 getPC() const { return PC; }$/;"	f	class:M6502
getPageAccess	./src/emucore/m6502/src/System.cxx	/^const System::PageAccess& System::getPageAccess(uInt16 page)$/;"	f	class:System
getParent	./src/emucore/FSNode.cxx	/^FilesystemNode FilesystemNode::getParent() const$/;"	f	class:FilesystemNode
getPhosphor	./src/emucore/FrameBuffer.cxx	/^uInt8 FrameBuffer::getPhosphor(uInt8 c1, uInt8 c2)$/;"	f	class:FrameBuffer
getPropertyType	./src/emucore/Props.cxx	/^PropertyType Properties::getPropertyType(const string& name)$/;"	f	class:Properties
getROMInfo	./src/emucore/OSystem.cxx	/^string OSystem::getROMInfo(const string& romfile)$/;"	f	class:OSystem
getRect	./src/debugger/gui/PromptWidget.cxx	/^GUI::Rect PromptWidget::getRect() const$/;"	f	class:PromptWidget
getRect	./src/gui/ListWidget.cxx	/^GUI::Rect ListWidget::getRect() const$/;"	f	class:ListWidget
getRect	./src/gui/Widget.cxx	/^GUI::Rect Widget::getRect() const$/;"	f	class:Widget
getResult	./src/gui/BrowserDialog.hxx	/^    const FilesystemNode& getResult() { return _node; }$/;"	f	class:BrowserDialog
getResult	./src/gui/Dialog.hxx	/^    int getResult() const { return _result; }$/;"	f	class:Dialog
getResult	./src/gui/InputTextDialog.cxx	/^const string& InputTextDialog::getResult(int idx)$/;"	f	class:InputTextDialog
getResult	./src/yacc/YaccParser.cxx	/^Expression *getResult() {$/;"	f	namespace:YaccParser
getRomBounds	./src/debugger/Debugger.cxx	/^GUI::Rect Debugger::getRomBounds() const$/;"	f	class:Debugger
getRoot	./src/gp2x/FSNodeGP2X.cxx	/^AbstractFilesystemNode* FilesystemNode::getRoot()$/;"	f	class:FilesystemNode
getRoot	./src/unix/FSNodePOSIX.cxx	/^AbstractFilesystemNode* FilesystemNode::getRoot()$/;"	f	class:FilesystemNode
getRoot	./src/win32/FSNodeWin32.cxx	/^AbstractFilesystemNode* FilesystemNode::getRoot()$/;"	f	class:FilesystemNode
getRoot	./src/wince/FSNodeWinCE.cxx	/^AbstractFilesystemNode* FilesystemNode::getRoot()$/;"	f	class:FilesystemNode
getSamples	./src/emucore/SpeakJet.cxx	/^uInt8 *SpeakJet::getSamples(int *count) {$/;"	f	class:SpeakJet
getSavedVidMode	./src/emucore/FrameBuffer.cxx	/^VideoMode FrameBuffer::getSavedVidMode()$/;"	f	class:FrameBuffer
getScreenDimensions	./src/gp2x/OSystemGP2X.cxx	/^void OSystemGP2X::getScreenDimensions(int& width, int& height)$/;"	f	class:OSystemGP2X
getScreenDimensions	./src/macosx/OSystemMACOSX.cxx	/^void OSystemMACOSX::getScreenDimensions(int& width, int& height)$/;"	f	class:OSystemMACOSX
getScreenDimensions	./src/wince/OSystemWinCE.cxx	/^void OSystemWinCE::getScreenDimensions(int& width, int& height)$/;"	f	class:OSystemWinCE
getSelected	./src/debugger/gui/ContextMenu.hxx	/^    int getSelected() const { return _selectedItem; }$/;"	f	class:ContextMenu
getSelected	./src/gui/ListWidget.hxx	/^    int getSelected() const        { return _selectedItem; }$/;"	f	class:ListWidget
getSelected	./src/gui/PopUpWidget.hxx	/^    int getSelected() const$/;"	f	class:PopUpWidget
getSelectedAddr	./src/debugger/gui/DataGridWidget.hxx	/^    int getSelectedAddr() const   { return _addrList[_selectedItem]; }$/;"	f	class:DataGridWidget
getSelectedState	./src/debugger/gui/ToggleWidget.hxx	/^    bool getSelectedState() const  { return _stateList[_selectedItem]; }$/;"	f	class:ToggleWidget
getSelectedState	./src/gui/CheckListWidget.hxx	/^    bool getSelectedState() { return getState(_selectedItem); }$/;"	f	class:CheckListWidget
getSelectedString	./src/debugger/gui/ContextMenu.cxx	/^const string& ContextMenu::getSelectedString() const$/;"	f	class:ContextMenu
getSelectedString	./src/gui/ListWidget.hxx	/^    const string& getSelectedString() const  { return _list[_selectedItem]; }$/;"	f	class:ListWidget
getSelectedString	./src/gui/PopUpWidget.hxx	/^    const string& getSelectedString() const$/;"	f	class:PopUpWidget
getSelectedTag	./src/gui/PopUpWidget.hxx	/^    int getSelectedTag() const$/;"	f	class:PopUpWidget
getSelectedValue	./src/debugger/gui/DataGridWidget.hxx	/^    int getSelectedValue() const  { return _valueList[_selectedItem]; }$/;"	f	class:DataGridWidget
getSize	./src/emucore/Settings.cxx	/^void Settings::getSize(const string& key, int& x, int& y) const$/;"	f	class:Settings
getSourceLines	./src/debugger/Debugger.cxx	/^string Debugger::getSourceLines(int addr) const$/;"	f	class:Debugger
getSpeakJet	./src/emucore/AtariVox.hxx	/^    SpeakJet* getSpeakJet() { return mySpeakJet; }$/;"	f	class:AtariVox
getState	./src/debugger/CpuDebug.cxx	/^DebuggerState& CpuDebug::getState()$/;"	f	class:CpuDebug
getState	./src/debugger/RamDebug.cxx	/^DebuggerState& RamDebug::getState()$/;"	f	class:RamDebug
getState	./src/debugger/TIADebug.cxx	/^DebuggerState& TIADebug::getState()$/;"	f	class:TIADebug
getState	./src/debugger/gui/ToggleWidget.hxx	/^    const BoolArray& getState()    { return _stateList; }$/;"	f	class:ToggleWidget
getState	./src/gui/CheckListWidget.cxx	/^bool CheckListWidget::getState(int line)$/;"	f	class:CheckListWidget
getState	./src/gui/Widget.hxx	/^    bool getState() const  { return _state;     }$/;"	f	class:CheckboxWidget
getStatusBounds	./src/debugger/Debugger.cxx	/^GUI::Rect Debugger::getStatusBounds() const$/;"	f	class:Debugger
getStepValue	./src/gui/Widget.hxx	/^    int getStepValue() const      { return _stepValue; }$/;"	f	class:SliderWidget
getString	./src/emucore/Deserializer.cxx	/^string Deserializer::getString(void)$/;"	f	class:Deserializer
getString	./src/emucore/Settings.cxx	/^const string& Settings::getString(const string& key) const$/;"	f	class:Settings
getStringWidth	./src/gui/Font.cxx	/^int Font::getStringWidth(const string& str) const$/;"	f	class:GUI::Font
getTabBounds	./src/debugger/Debugger.cxx	/^GUI::Rect Debugger::getTabBounds() const$/;"	f	class:Debugger
getTabHeight	./src/gui/TabWidget.hxx	/^    int getTabHeight() { return _tabHeight; }$/;"	f	class:TabWidget
getTabWidth	./src/gui/TabWidget.hxx	/^    int getTabWidth()  { return _tabWidth;  }$/;"	f	class:TabWidget
getTarget	./src/gui/Command.hxx	/^    CommandReceiver* getTarget() const { return _target; }$/;"	f	class:CommandSender
getTiaBounds	./src/debugger/Debugger.cxx	/^GUI::Rect Debugger::getTiaBounds() const$/;"	f	class:Debugger
getTiaSpecial	./src/yacc/YaccParser.cxx	/^TIADEBUG_INT_METHOD getTiaSpecial(char *c) {$/;"	f	namespace:YaccParser
getTicks	./src/gp2x/OSystemGP2X.cxx	/^uInt32 OSystemGP2X::getTicks()$/;"	f	class:OSystemGP2X
getTicks	./src/macosx/OSystemMACOSX.cxx	/^uInt32 OSystemMACOSX::getTicks()$/;"	f	class:OSystemMACOSX
getTicks	./src/unix/OSystemUNIX.cxx	/^uInt32 OSystemUNIX::getTicks()$/;"	f	class:OSystemUNIX
getTicks	./src/win32/OSystemWin32.cxx	/^uInt32 OSystemWin32::getTicks()$/;"	f	class:OSystemWin32
getTicks	./src/wince/OSystemWinCE.cxx	/^uInt32 OSystemWinCE::getTicks(void)$/;"	f	class:OSystemWinCE
getValue	./src/gui/Widget.hxx	/^    int getValue() const      { return _value; }$/;"	f	class:SliderWidget
getWidth	./src/gui/GuiObject.hxx	/^    virtual int getWidth() const    { return _w; }$/;"	f	class:GuiObject
getWidth	./src/gui/Surface.hxx	/^    inline int getWidth() const  { return myBaseWidth;  }$/;"	f	class:GUI::Surface
getmode	./src/wince/FrameBufferWinCE.hxx	/^	uInt8 getmode(void) { return displaymode; }$/;"	f	class:FrameBufferWinCE
gi	./src/emucore/unzip.c	/^	unz_global_info gi;       \/* public global information *\/$/;"	m	struct:__anon2	file:
glBufferType	./src/common/FrameBufferGL.hxx	/^    struct glBufferType$/;"	s	class:FrameBufferGL
gr	./src/debugger/TIADebug.hxx	/^    IntArray gr;$/;"	m	class:TiaState
grP0	./src/debugger/TIADebug.cxx	/^uInt8 TIADebug::grP0(int newVal)$/;"	f	class:TIADebug
grP1	./src/debugger/TIADebug.cxx	/^uInt8 TIADebug::grP1(int newVal)$/;"	f	class:TIADebug
grabMouse	./src/emucore/FrameBuffer.cxx	/^void FrameBuffer::grabMouse(bool grab)$/;"	f	class:FrameBuffer
greyOutFrame	./src/emucore/TIA.cxx	/^void TIA::greyOutFrame()$/;"	f	class:TIA
grow	./src/common/SoundSDL.cxx	/^void SoundSDL::RegWriteQueue::grow()$/;"	f	class:SoundSDL::RegWriteQueue
grow	./src/gui/Rect.hxx	/^	void grow(int offset) {$/;"	f	struct:GUI::Rect
grow	./src/wince/SoundWinCE.cxx	/^void SoundWinCE::RegWriteQueue::grow()$/;"	f	class:SoundWinCE::RegWriteQueue
gxdp	./src/wince/FrameBufferWinCE.hxx	/^	GXDisplayProperties gxdp;$/;"	m	class:FrameBufferWinCE
h	./src/emucore/FrameBuffer.hxx	/^      int x, y, w, h;$/;"	m	struct:FrameBuffer::Message
hLine	./src/common/FrameBufferGL.cxx	/^void FrameBufferGL::hLine(uInt32 x, uInt32 y, uInt32 x2, int color)$/;"	f	class:FrameBufferGL
hLine	./src/common/FrameBufferSoft.cxx	/^void FrameBufferSoft::hLine(uInt32 x, uInt32 y, uInt32 x2, int color)$/;"	f	class:FrameBufferSoft
hLine	./src/gp2x/FrameBufferGP2X.cxx	/^void FrameBufferGP2X::hLine(uInt32 x, uInt32 y, uInt32 x2, int color)$/;"	f	class:FrameBufferGP2X
handleCommand	./src/cheat/CheatCodeDialog.cxx	/^void CheatCodeDialog::handleCommand(CommandSender* sender, int cmd,$/;"	f	class:CheatCodeDialog
handleCommand	./src/debugger/gui/AudioWidget.cxx	/^void AudioWidget::handleCommand(CommandSender* sender, int cmd, int data, int id)$/;"	f	class:AudioWidget
handleCommand	./src/debugger/gui/CpuWidget.cxx	/^void CpuWidget::handleCommand(CommandSender* sender, int cmd, int data, int id)$/;"	f	class:CpuWidget
handleCommand	./src/debugger/gui/DataGridWidget.cxx	/^void DataGridWidget::handleCommand(CommandSender* sender, int cmd,$/;"	f	class:DataGridWidget
handleCommand	./src/debugger/gui/DebuggerDialog.cxx	/^void DebuggerDialog::handleCommand(CommandSender* sender, int cmd,$/;"	f	class:DebuggerDialog
handleCommand	./src/debugger/gui/PromptWidget.cxx	/^void PromptWidget::handleCommand(CommandSender* sender, int cmd,$/;"	f	class:PromptWidget
handleCommand	./src/debugger/gui/RamWidget.cxx	/^void RamWidget::handleCommand(CommandSender* sender, int cmd, int data, int id)$/;"	f	class:RamWidget
handleCommand	./src/debugger/gui/RomWidget.cxx	/^void RomWidget::handleCommand(CommandSender* sender, int cmd, int data, int id)$/;"	f	class:RomWidget
handleCommand	./src/debugger/gui/TiaInfoWidget.cxx	/^void TiaInfoWidget::handleCommand(CommandSender* sender, int cmd, int data, int id)$/;"	f	class:TiaInfoWidget
handleCommand	./src/debugger/gui/TiaOutputWidget.cxx	/^void TiaOutputWidget::handleCommand(CommandSender* sender, int cmd, int data, int id)$/;"	f	class:TiaOutputWidget
handleCommand	./src/debugger/gui/TiaWidget.cxx	/^void TiaWidget::handleCommand(CommandSender* sender, int cmd, int data, int id)$/;"	f	class:TiaWidget
handleCommand	./src/debugger/gui/TiaZoomWidget.cxx	/^void TiaZoomWidget::handleCommand(CommandSender* sender, int cmd, int data, int id)$/;"	f	class:TiaZoomWidget
handleCommand	./src/debugger/gui/ToggleWidget.cxx	/^void ToggleWidget::handleCommand(CommandSender* sender, int cmd,$/;"	f	class:ToggleWidget
handleCommand	./src/gui/AboutDialog.cxx	/^void AboutDialog::handleCommand(CommandSender* sender, int cmd, int data, int id)$/;"	f	class:AboutDialog
handleCommand	./src/gui/AudioDialog.cxx	/^void AudioDialog::handleCommand(CommandSender* sender, int cmd,$/;"	f	class:AudioDialog
handleCommand	./src/gui/BrowserDialog.cxx	/^void BrowserDialog::handleCommand(CommandSender* sender, int cmd,$/;"	f	class:BrowserDialog
handleCommand	./src/gui/CheckListWidget.cxx	/^void CheckListWidget::handleCommand(CommandSender* sender, int cmd,$/;"	f	class:CheckListWidget
handleCommand	./src/gui/Command.hxx	/^    virtual void handleCommand(CommandSender* sender, int cmd, int data, int id) {}$/;"	f	class:CommandReceiver
handleCommand	./src/gui/CommandDialog.cxx	/^void CommandDialog::handleCommand(CommandSender* sender, int cmd,$/;"	f	class:CommandDialog
handleCommand	./src/gui/Dialog.cxx	/^void Dialog::handleCommand(CommandSender* sender, int cmd, int data, int id)$/;"	f	class:Dialog
handleCommand	./src/gui/EventMappingWidget.cxx	/^void EventMappingWidget::handleCommand(CommandSender* sender, int cmd,$/;"	f	class:EventMappingWidget
handleCommand	./src/gui/FileSnapDialog.cxx	/^void FileSnapDialog::handleCommand(CommandSender* sender, int cmd,$/;"	f	class:FileSnapDialog
handleCommand	./src/gui/GameInfoDialog.cxx	/^void GameInfoDialog::handleCommand(CommandSender* sender, int cmd,$/;"	f	class:GameInfoDialog
handleCommand	./src/gui/HelpDialog.cxx	/^void HelpDialog::handleCommand(CommandSender* sender, int cmd,$/;"	f	class:HelpDialog
handleCommand	./src/gui/InputDialog.cxx	/^void InputDialog::handleCommand(CommandSender* sender, int cmd,$/;"	f	class:InputDialog
handleCommand	./src/gui/InputTextDialog.cxx	/^void InputTextDialog::handleCommand(CommandSender* sender, int cmd,$/;"	f	class:InputTextDialog
handleCommand	./src/gui/LauncherDialog.cxx	/^void LauncherDialog::handleCommand(CommandSender* sender, int cmd,$/;"	f	class:LauncherDialog
handleCommand	./src/gui/ListWidget.cxx	/^void ListWidget::handleCommand(CommandSender* sender, int cmd, int data, int id)$/;"	f	class:ListWidget
handleCommand	./src/gui/OptionsDialog.cxx	/^void OptionsDialog::handleCommand(CommandSender* sender, int cmd,$/;"	f	class:OptionsDialog
handleCommand	./src/gui/RomAuditDialog.cxx	/^void RomAuditDialog::handleCommand(CommandSender* sender, int cmd,$/;"	f	class:RomAuditDialog
handleCommand	./src/gui/TabWidget.cxx	/^void TabWidget::handleCommand(CommandSender* sender, int cmd, int data, int id)$/;"	f	class:TabWidget
handleCommand	./src/gui/UIDialog.cxx	/^void UIDialog::handleCommand(CommandSender* sender, int cmd, int data, int id)$/;"	f	class:UIDialog
handleCommand	./src/gui/VideoDialog.cxx	/^void VideoDialog::handleCommand(CommandSender* sender, int cmd,$/;"	f	class:VideoDialog
handleCommand	./src/gui/Widget.hxx	/^    void handleCommand(CommandSender* sender, int cmd, int data, int id)$/;"	f	class:Widget
handleEvent	./src/debugger/gui/RomListWidget.cxx	/^bool RomListWidget::handleEvent(Event::Type e)$/;"	f	class:RomListWidget
handleEvent	./src/debugger/gui/TiaZoomWidget.cxx	/^bool TiaZoomWidget::handleEvent(Event::Type event)$/;"	f	class:TiaZoomWidget
handleEvent	./src/emucore/EventHandler.cxx	/^void EventHandler::handleEvent(Event::Type event, int state)$/;"	f	class:EventHandler
handleEvent	./src/gui/CheckListWidget.cxx	/^bool CheckListWidget::handleEvent(Event::Type e)$/;"	f	class:CheckListWidget
handleEvent	./src/gui/ListWidget.cxx	/^bool ListWidget::handleEvent(Event::Type e)$/;"	f	class:ListWidget
handleEvent	./src/gui/PopUpWidget.cxx	/^bool PopUpWidget::handleEvent(Event::Type e)$/;"	f	class:PopUpWidget
handleEvent	./src/gui/PopUpWidget.cxx	/^void PopUpDialog::handleEvent(Event::Type e)$/;"	f	class:PopUpDialog
handleEvent	./src/gui/TabWidget.cxx	/^bool TabWidget::handleEvent(Event::Type event)$/;"	f	class:TabWidget
handleEvent	./src/gui/Widget.cxx	/^bool ButtonWidget::handleEvent(Event::Type e)$/;"	f	class:ButtonWidget
handleEvent	./src/gui/Widget.cxx	/^bool SliderWidget::handleEvent(Event::Type e)$/;"	f	class:SliderWidget
handleEvent	./src/gui/Widget.hxx	/^    virtual bool handleEvent(Event::Type event) { return false; }$/;"	f	class:Widget
handleFullscreenChange	./src/gui/VideoDialog.cxx	/^void VideoDialog::handleFullscreenChange(bool enable)$/;"	f	class:VideoDialog
handleJoyAxis	./src/gui/Dialog.cxx	/^void Dialog::handleJoyAxis(int stick, int axis, int value)$/;"	f	class:Dialog
handleJoyAxis	./src/gui/EventMappingWidget.cxx	/^void EventMappingWidget::handleJoyAxis(int stick, int axis, int value)$/;"	f	class:EventMappingWidget
handleJoyAxis	./src/gui/InputDialog.cxx	/^void InputDialog::handleJoyAxis(int stick, int axis, int value)$/;"	f	class:InputDialog
handleJoyAxis	./src/gui/PopUpWidget.cxx	/^void PopUpDialog::handleJoyAxis(int stick, int axis, int value)$/;"	f	class:PopUpDialog
handleJoyAxis	./src/gui/Widget.hxx	/^    virtual void handleJoyAxis(int stick, int axis, int value) {}$/;"	f	class:Widget
handleJoyAxisEvent	./src/emucore/EventHandler.cxx	/^void EventHandler::handleJoyAxisEvent(int stick, int axis, int value)$/;"	f	class:EventHandler
handleJoyAxisEvent	./src/gui/DialogContainer.cxx	/^void DialogContainer::handleJoyAxisEvent(int stick, int axis, int value)$/;"	f	class:DialogContainer
handleJoyDown	./src/gui/Dialog.cxx	/^void Dialog::handleJoyDown(int stick, int button)$/;"	f	class:Dialog
handleJoyDown	./src/gui/EventMappingWidget.cxx	/^void EventMappingWidget::handleJoyDown(int stick, int button)$/;"	f	class:EventMappingWidget
handleJoyDown	./src/gui/InputDialog.cxx	/^void InputDialog::handleJoyDown(int stick, int button)$/;"	f	class:InputDialog
handleJoyDown	./src/gui/PopUpWidget.cxx	/^void PopUpDialog::handleJoyDown(int stick, int button)$/;"	f	class:PopUpDialog
handleJoyDown	./src/gui/Widget.hxx	/^    virtual void handleJoyDown(int stick, int button) {}$/;"	f	class:Widget
handleJoyEvent	./src/emucore/EventHandler.cxx	/^void EventHandler::handleJoyEvent(int stick, int button, int state)$/;"	f	class:EventHandler
handleJoyEvent	./src/gui/DialogContainer.cxx	/^void DialogContainer::handleJoyEvent(int stick, int button, uInt8 state)$/;"	f	class:DialogContainer
handleJoyHat	./src/gui/Dialog.cxx	/^bool Dialog::handleJoyHat(int stick, int hat, int value)$/;"	f	class:Dialog
handleJoyHat	./src/gui/EventMappingWidget.cxx	/^bool EventMappingWidget::handleJoyHat(int stick, int hat, int value)$/;"	f	class:EventMappingWidget
handleJoyHat	./src/gui/InputDialog.cxx	/^bool InputDialog::handleJoyHat(int stick, int hat, int value)$/;"	f	class:InputDialog
handleJoyHat	./src/gui/PopUpWidget.cxx	/^bool PopUpDialog::handleJoyHat(int stick, int hat, int value)$/;"	f	class:PopUpDialog
handleJoyHat	./src/gui/Widget.hxx	/^    virtual bool handleJoyHat(int stick, int hat, int value) { return false; }$/;"	f	class:Widget
handleJoyHatEvent	./src/emucore/EventHandler.cxx	/^void EventHandler::handleJoyHatEvent(int stick, int hat, int value)$/;"	f	class:EventHandler
handleJoyHatEvent	./src/gui/DialogContainer.cxx	/^void DialogContainer::handleJoyHatEvent(int stick, int hat, int value)$/;"	f	class:DialogContainer
handleJoyUp	./src/gui/Dialog.cxx	/^void Dialog::handleJoyUp(int stick, int button)$/;"	f	class:Dialog
handleJoyUp	./src/gui/Widget.hxx	/^    virtual void handleJoyUp(int stick, int button) {}$/;"	f	class:Widget
handleKeyDown	./src/debugger/gui/ContextMenu.cxx	/^void ContextMenu::handleKeyDown(int ascii, int keycode, int modifiers)$/;"	f	class:ContextMenu
handleKeyDown	./src/debugger/gui/DataGridWidget.cxx	/^bool DataGridWidget::handleKeyDown(int ascii, int keycode, int modifiers)$/;"	f	class:DataGridWidget
handleKeyDown	./src/debugger/gui/DebuggerDialog.cxx	/^void DebuggerDialog::handleKeyDown(int ascii, int keycode, int modifiers)$/;"	f	class:DebuggerDialog
handleKeyDown	./src/debugger/gui/PromptWidget.cxx	/^bool PromptWidget::handleKeyDown(int ascii, int keycode, int modifiers)$/;"	f	class:PromptWidget
handleKeyDown	./src/debugger/gui/ToggleWidget.cxx	/^bool ToggleWidget::handleKeyDown(int ascii, int keycode, int modifiers)$/;"	f	class:ToggleWidget
handleKeyDown	./src/gui/Dialog.cxx	/^void Dialog::handleKeyDown(int ascii, int keycode, int modifiers)$/;"	f	class:Dialog
handleKeyDown	./src/gui/EditableWidget.cxx	/^bool EditableWidget::handleKeyDown(int ascii, int keycode, int modifiers)$/;"	f	class:EditableWidget
handleKeyDown	./src/gui/EventMappingWidget.cxx	/^bool EventMappingWidget::handleKeyDown(int ascii, int keycode, int modifiers)$/;"	f	class:EventMappingWidget
handleKeyDown	./src/gui/InputDialog.cxx	/^void InputDialog::handleKeyDown(int ascii, int keycode, int modifiers)$/;"	f	class:InputDialog
handleKeyDown	./src/gui/ListWidget.cxx	/^bool ListWidget::handleKeyDown(int ascii, int keycode, int modifiers)$/;"	f	class:ListWidget
handleKeyDown	./src/gui/PopUpWidget.cxx	/^void PopUpDialog::handleKeyDown(int ascii, int keycode, int modifiers)$/;"	f	class:PopUpDialog
handleKeyDown	./src/gui/Widget.hxx	/^    virtual bool handleKeyDown(int ascii, int keycode, int modifiers) { return false; }$/;"	f	class:Widget
handleKeyEvent	./src/gui/DialogContainer.cxx	/^void DialogContainer::handleKeyEvent(int ascii, int key, int mod, uInt8 state)$/;"	f	class:DialogContainer
handleKeyUp	./src/debugger/gui/DataGridWidget.cxx	/^bool DataGridWidget::handleKeyUp(int ascii, int keycode, int modifiers)$/;"	f	class:DataGridWidget
handleKeyUp	./src/gui/Dialog.cxx	/^void Dialog::handleKeyUp(int ascii, int keycode, int modifiers)$/;"	f	class:Dialog
handleKeyUp	./src/gui/ListWidget.cxx	/^bool ListWidget::handleKeyUp(int ascii, int keycode, int modifiers)$/;"	f	class:ListWidget
handleKeyUp	./src/gui/Widget.hxx	/^    virtual bool handleKeyUp(int ascii, int keycode, int modifiers)   { return false; }$/;"	f	class:Widget
handleMouseButtonEvent	./src/emucore/EventHandler.cxx	/^void EventHandler::handleMouseButtonEvent(SDL_Event& event, int state)$/;"	f	class:EventHandler
handleMouseButtonEvent	./src/gui/DialogContainer.cxx	/^void DialogContainer::handleMouseButtonEvent(MouseButton b, int x, int y, uInt8 state)$/;"	f	class:DialogContainer
handleMouseDown	./src/debugger/gui/ColorWidget.cxx	/^void ColorWidget::handleMouseDown(int x, int y, int button, int clickCount)$/;"	f	class:ColorWidget
handleMouseDown	./src/debugger/gui/ContextMenu.cxx	/^void ContextMenu::handleMouseDown(int x, int y, int button, int clickCount)$/;"	f	class:ContextMenu
handleMouseDown	./src/debugger/gui/DataGridWidget.cxx	/^void DataGridWidget::handleMouseDown(int x, int y, int button, int clickCount)$/;"	f	class:DataGridWidget
handleMouseDown	./src/debugger/gui/PromptWidget.cxx	/^void PromptWidget::handleMouseDown(int x, int y, int button, int clickCount)$/;"	f	class:PromptWidget
handleMouseDown	./src/debugger/gui/RomListWidget.cxx	/^void RomListWidget::handleMouseDown(int x, int y, int button, int clickCount)$/;"	f	class:RomListWidget
handleMouseDown	./src/debugger/gui/TiaInfoWidget.cxx	/^void TiaInfoWidget::handleMouseDown(int x, int y, int button, int clickCount)$/;"	f	class:TiaInfoWidget
handleMouseDown	./src/debugger/gui/TiaOutputWidget.cxx	/^void TiaOutputWidget::handleMouseDown(int x, int y, int button, int clickCount)$/;"	f	class:TiaOutputWidget
handleMouseDown	./src/debugger/gui/TiaZoomWidget.cxx	/^void TiaZoomWidget::handleMouseDown(int x, int y, int button, int clickCount)$/;"	f	class:TiaZoomWidget
handleMouseDown	./src/debugger/gui/ToggleWidget.cxx	/^void ToggleWidget::handleMouseDown(int x, int y, int button, int clickCount)$/;"	f	class:ToggleWidget
handleMouseDown	./src/gui/Dialog.cxx	/^void Dialog::handleMouseDown(int x, int y, int button, int clickCount)$/;"	f	class:Dialog
handleMouseDown	./src/gui/EditTextWidget.cxx	/^void EditTextWidget::handleMouseDown(int x, int y, int button, int clickCount)$/;"	f	class:EditTextWidget
handleMouseDown	./src/gui/ListWidget.cxx	/^void ListWidget::handleMouseDown(int x, int y, int button, int clickCount)$/;"	f	class:ListWidget
handleMouseDown	./src/gui/PopUpWidget.cxx	/^void PopUpDialog::handleMouseDown(int x, int y, int button, int clickCount)$/;"	f	class:PopUpDialog
handleMouseDown	./src/gui/PopUpWidget.cxx	/^void PopUpWidget::handleMouseDown(int x, int y, int button, int clickCount)$/;"	f	class:PopUpWidget
handleMouseDown	./src/gui/ScrollBarWidget.cxx	/^void ScrollBarWidget::handleMouseDown(int x, int y, int button,$/;"	f	class:ScrollBarWidget
handleMouseDown	./src/gui/TabWidget.cxx	/^void TabWidget::handleMouseDown(int x, int y, int button, int clickCount)$/;"	f	class:TabWidget
handleMouseDown	./src/gui/Widget.cxx	/^void SliderWidget::handleMouseDown(int x, int y, int button, int clickCount)$/;"	f	class:SliderWidget
handleMouseDown	./src/gui/Widget.hxx	/^    virtual void handleMouseDown(int x, int y, int button, int clickCount) {}$/;"	f	class:Widget
handleMouseEntered	./src/gui/ScrollBarWidget.cxx	/^void ScrollBarWidget::handleMouseEntered(int button)$/;"	f	class:ScrollBarWidget
handleMouseEntered	./src/gui/Widget.cxx	/^void ButtonWidget::handleMouseEntered(int button)$/;"	f	class:ButtonWidget
handleMouseEntered	./src/gui/Widget.hxx	/^    virtual void handleMouseEntered(int button)	{}$/;"	f	class:CheckboxWidget
handleMouseEntered	./src/gui/Widget.hxx	/^    virtual void handleMouseEntered(int button) {}$/;"	f	class:Widget
handleMouseLeft	./src/gui/ScrollBarWidget.cxx	/^void ScrollBarWidget::handleMouseLeft(int button)$/;"	f	class:ScrollBarWidget
handleMouseLeft	./src/gui/Widget.cxx	/^void ButtonWidget::handleMouseLeft(int button)$/;"	f	class:ButtonWidget
handleMouseLeft	./src/gui/Widget.hxx	/^    virtual void handleMouseLeft(int button)	{}$/;"	f	class:CheckboxWidget
handleMouseLeft	./src/gui/Widget.hxx	/^    virtual void handleMouseLeft(int button) {}$/;"	f	class:Widget
handleMouseMotionEvent	./src/emucore/EventHandler.cxx	/^void EventHandler::handleMouseMotionEvent(SDL_Event& event)$/;"	f	class:EventHandler
handleMouseMotionEvent	./src/gui/DialogContainer.cxx	/^void DialogContainer::handleMouseMotionEvent(int x, int y, int button)$/;"	f	class:DialogContainer
handleMouseMoved	./src/debugger/gui/ContextMenu.cxx	/^void ContextMenu::handleMouseMoved(int x, int y, int button)$/;"	f	class:ContextMenu
handleMouseMoved	./src/gui/Dialog.cxx	/^void Dialog::handleMouseMoved(int x, int y, int button)$/;"	f	class:Dialog
handleMouseMoved	./src/gui/PopUpWidget.cxx	/^void PopUpDialog::handleMouseMoved(int x, int y, int button)$/;"	f	class:PopUpDialog
handleMouseMoved	./src/gui/ScrollBarWidget.cxx	/^void ScrollBarWidget::handleMouseMoved(int x, int y, int button)$/;"	f	class:ScrollBarWidget
handleMouseMoved	./src/gui/Widget.cxx	/^void SliderWidget::handleMouseMoved(int x, int y, int button)$/;"	f	class:SliderWidget
handleMouseMoved	./src/gui/Widget.hxx	/^    virtual void handleMouseMoved(int x, int y, int button) {}$/;"	f	class:Widget
handleMouseUp	./src/debugger/gui/DataGridWidget.cxx	/^void DataGridWidget::handleMouseUp(int x, int y, int button, int clickCount)$/;"	f	class:DataGridWidget
handleMouseUp	./src/debugger/gui/ToggleWidget.cxx	/^void ToggleWidget::handleMouseUp(int x, int y, int button, int clickCount)$/;"	f	class:ToggleWidget
handleMouseUp	./src/gui/Dialog.cxx	/^void Dialog::handleMouseUp(int x, int y, int button, int clickCount)$/;"	f	class:Dialog
handleMouseUp	./src/gui/ListWidget.cxx	/^void ListWidget::handleMouseUp(int x, int y, int button, int clickCount)$/;"	f	class:ListWidget
handleMouseUp	./src/gui/ScrollBarWidget.cxx	/^void ScrollBarWidget::handleMouseUp(int x, int y, int button,$/;"	f	class:ScrollBarWidget
handleMouseUp	./src/gui/Widget.cxx	/^void ButtonWidget::handleMouseUp(int x, int y, int button, int clickCount)$/;"	f	class:ButtonWidget
handleMouseUp	./src/gui/Widget.cxx	/^void CheckboxWidget::handleMouseUp(int x, int y, int button, int clickCount)$/;"	f	class:CheckboxWidget
handleMouseUp	./src/gui/Widget.cxx	/^void SliderWidget::handleMouseUp(int x, int y, int button, int clickCount)$/;"	f	class:SliderWidget
handleMouseUp	./src/gui/Widget.hxx	/^    virtual void handleMouseUp(int x, int y, int button, int clickCount) {}$/;"	f	class:Widget
handleMouseWheel	./src/debugger/gui/ContextMenu.cxx	/^void ContextMenu::handleMouseWheel(int x, int y, int direction)$/;"	f	class:ContextMenu
handleMouseWheel	./src/debugger/gui/PromptWidget.cxx	/^void PromptWidget::handleMouseWheel(int x, int y, int direction)$/;"	f	class:PromptWidget
handleMouseWheel	./src/gui/Dialog.cxx	/^void Dialog::handleMouseWheel(int x, int y, int direction)$/;"	f	class:Dialog
handleMouseWheel	./src/gui/ListWidget.cxx	/^void ListWidget::handleMouseWheel(int x, int y, int direction)$/;"	f	class:ListWidget
handleMouseWheel	./src/gui/PopUpWidget.cxx	/^void PopUpDialog::handleMouseWheel(int x, int y, int direction)$/;"	f	class:PopUpDialog
handleMouseWheel	./src/gui/ScrollBarWidget.cxx	/^void ScrollBarWidget::handleMouseWheel(int x, int y, int direction)$/;"	f	class:ScrollBarWidget
handleMouseWheel	./src/gui/Widget.hxx	/^    virtual void handleMouseWheel(int x, int y, int direction) {}$/;"	f	class:Widget
handleNavEvent	./src/gui/Dialog.cxx	/^bool Dialog::handleNavEvent(Event::Type e)$/;"	f	class:Dialog
handleRendererChange	./src/gui/VideoDialog.cxx	/^void VideoDialog::handleRendererChange(int item)$/;"	f	class:VideoDialog
handleResizeEvent	./src/emucore/EventHandler.cxx	/^void EventHandler::handleResizeEvent()$/;"	f	class:EventHandler
handleResizeEvent	./src/gui/DialogContainer.cxx	/^void DialogContainer::handleResizeEvent()$/;"	f	class:DialogContainer
handleScreenChanged	./src/gui/Dialog.hxx	/^    virtual void handleScreenChanged() {}$/;"	f	class:Dialog
handleSoundEnableChange	./src/gui/AudioDialog.cxx	/^void AudioDialog::handleSoundEnableChange(bool active)$/;"	f	class:AudioDialog
hardCodedEquates	./src/debugger/EquateList.cxx	/^static Equate hardCodedEquates[] = {$/;"	v	file:
hasParent	./src/emucore/FSNode.cxx	/^bool FilesystemNode::hasParent() const$/;"	f	class:FilesystemNode
hat	./src/gui/DialogContainer.hxx	/^      int hat;$/;"	m	struct:DialogContainer::__anon42
haveListFile	./src/debugger/Debugger.hxx	/^    bool haveListFile() const { return sourceLines.size() > 0; }$/;"	f	class:Debugger
height	./src/common/FrameBufferGL.hxx	/^      int     width, height;$/;"	m	struct:FrameBufferGL::glBufferType
height	./src/emucore/OSystem.hxx	/^  uInt32 height;$/;"	m	struct:Resolution
height	./src/emucore/TIA.cxx	/^uInt32 TIA::height() const $/;"	f	class:TIA
height	./src/gui/Font.hxx	/^  int           height;      \/* height in pixels *\/$/;"	m	struct:__anon35
height	./src/gui/Rect.hxx	/^	int height() const { return bottom - top; }$/;"	f	struct:GUI::Rect
hideMessage	./src/emucore/FrameBuffer.cxx	/^void FrameBuffer::hideMessage()$/;"	f	class:FrameBuffer
hilite	./src/debugger/gui/ToggleWidget.hxx	/^    void drawWidget(bool hilite) = 0;$/;"	m	class:ToggleWidget
historyScroll	./src/debugger/gui/PromptWidget.cxx	/^void PromptWidget::historyScroll(int direction)$/;"	f	class:PromptWidget
hm	./src/debugger/TIADebug.hxx	/^    IntArray hm;$/;"	m	class:TiaState
hmBL	./src/debugger/TIADebug.cxx	/^uInt8 TIADebug::hmBL(int newVal)$/;"	f	class:TIADebug
hmM0	./src/debugger/TIADebug.cxx	/^uInt8 TIADebug::hmM0(int newVal)$/;"	f	class:TIADebug
hmM1	./src/debugger/TIADebug.cxx	/^uInt8 TIADebug::hmM1(int newVal)$/;"	f	class:TIADebug
hmP0	./src/debugger/TIADebug.cxx	/^uInt8 TIADebug::hmP0(int newVal)$/;"	f	class:TIADebug
hmP1	./src/debugger/TIADebug.cxx	/^uInt8 TIADebug::hmP1(int newVal)$/;"	f	class:TIADebug
holmes_id	./src/emucore/rsynth/holmes.c	/^char *holmes_id = "$Id: holmes.c,v 1.2 2006\/06\/12 14:12:52 stephena Exp $";$/;"	v
i	./src/debugger/CpuDebug.hxx	/^    int i() { return mySystem->m6502().I; }$/;"	f	class:CpuDebug
imageHeight	./src/emucore/FrameBuffer.hxx	/^    inline const uInt32 imageHeight() { return myImageDim.h; }$/;"	f	class:FrameBuffer
imageWidth	./src/emucore/FrameBuffer.hxx	/^    inline const uInt32 imageWidth()  { return myImageDim.w; }$/;"	f	class:FrameBuffer
image_h	./src/common/VideoModeList.hxx	/^  uInt32 image_x, image_y, image_w, image_h;$/;"	m	struct:VideoMode
image_w	./src/common/VideoModeList.hxx	/^  uInt32 image_x, image_y, image_w, image_h;$/;"	m	struct:VideoMode
image_x	./src/common/VideoModeList.hxx	/^  uInt32 image_x, image_y, image_w, image_h;$/;"	m	struct:VideoMode
image_y	./src/common/VideoModeList.hxx	/^  uInt32 image_x, image_y, image_w, image_h;$/;"	m	struct:VideoMode
incbank	./src/emucore/CartMB.cxx	/^void CartridgeMB::incbank()$/;"	f	class:CartridgeMB
incrementCell	./src/debugger/gui/DataGridWidget.cxx	/^void DataGridWidget::incrementCell()$/;"	f	class:DataGridWidget
incrementCycles	./src/emucore/m6502/src/System.hxx	/^    void incrementCycles(uInt32 amount) $/;"	f	class:System
incrementalUpdate	./src/debugger/gui/RomWidget.cxx	/^void RomWidget::incrementalUpdate(int line, int rows)$/;"	f	class:RomWidget
initSubsystem	./src/common/FrameBufferGL.cxx	/^bool FrameBufferGL::initSubsystem(VideoMode mode)$/;"	f	class:FrameBufferGL
initSubsystem	./src/common/FrameBufferSoft.cxx	/^bool FrameBufferSoft::initSubsystem(VideoMode mode)$/;"	f	class:FrameBufferSoft
initSubsystem	./src/gp2x/FrameBufferGP2X.cxx	/^bool FrameBufferGP2X::initSubsystem(VideoMode mode)$/;"	f	class:FrameBufferGP2X
initialUpdate	./src/debugger/gui/RomWidget.cxx	/^void RomWidget::initialUpdate()$/;"	f	class:RomWidget
initialValue	./src/emucore/Settings.hxx	/^      string initialValue;$/;"	m	struct:Settings::Setting
initialize	./src/common/SoundNull.hxx	/^    void initialize() { }$/;"	f	class:SoundNull
initialize	./src/common/SoundSDL.cxx	/^void SoundSDL::initialize()$/;"	f	class:SoundSDL
initialize	./src/debugger/Debugger.cxx	/^void Debugger::initialize()$/;"	f	class:Debugger
initialize	./src/emucore/EventHandler.cxx	/^void EventHandler::initialize()$/;"	f	class:EventHandler
initialize	./src/emucore/FrameBuffer.cxx	/^void FrameBuffer::initialize(const string& title, uInt32 width, uInt32 height)$/;"	f	class:FrameBuffer
initialize	./src/gui/RomInfoWidget.cxx	/^void RomInfoWidget::initialize()$/;"	f	class:RomInfoWidget
initialize	./src/wince/SoundWinCE.cxx	/^void SoundWinCE::initialize()$/;"	f	class:SoundWinCE
initializeAudio	./src/emucore/Console.cxx	/^void Console::initializeAudio()$/;"	f	class:Console
initializeROM	./src/emucore/CartAR.cxx	/^void CartridgeAR::initializeROM(bool fastbios)$/;"	f	class:CartridgeAR
initializeVideo	./src/debugger/Debugger.cxx	/^void Debugger::initializeVideo()$/;"	f	class:Debugger
initializeVideo	./src/emucore/Console.cxx	/^void Console::initializeVideo(bool full)$/;"	f	class:Console
initializeVideo	./src/gui/Launcher.cxx	/^void Launcher::initializeVideo()$/;"	f	class:Launcher
input	./src/yacc/YaccParser.cxx	/^const char *input, *c;$/;"	v
insert	./src/emucore/PropsSet.cxx	/^void PropertiesSet::insert(const Properties& properties, bool save)$/;"	f	class:PropertiesSet
insertIntoPrompt	./src/debugger/gui/PromptWidget.cxx	/^void PromptWidget::insertIntoPrompt(const char* str)$/;"	f	class:PromptWidget
insertNode	./src/emucore/PropsSet.cxx	/^void PropertiesSet::insertNode(TreeNode* &t, const Properties& properties,$/;"	f	class:PropertiesSet
insert_at	./src/common/Array.hxx	/^    void insert_at(int idx, const T& element)$/;"	f	class:Common::Array
install	./src/emucore/Cart0840.cxx	/^void Cartridge0840::install(System& system)$/;"	f	class:Cartridge0840
install	./src/emucore/Cart2K.cxx	/^void Cartridge2K::install(System& system)$/;"	f	class:Cartridge2K
install	./src/emucore/Cart3E.cxx	/^void Cartridge3E::install(System& system)$/;"	f	class:Cartridge3E
install	./src/emucore/Cart3F.cxx	/^void Cartridge3F::install(System& system)$/;"	f	class:Cartridge3F
install	./src/emucore/Cart4A50.cxx	/^void Cartridge4A50::install(System& system)$/;"	f	class:Cartridge4A50
install	./src/emucore/Cart4K.cxx	/^void Cartridge4K::install(System& system)$/;"	f	class:Cartridge4K
install	./src/emucore/CartAR.cxx	/^void CartridgeAR::install(System& system)$/;"	f	class:CartridgeAR
install	./src/emucore/CartCV.cxx	/^void CartridgeCV::install(System& system)$/;"	f	class:CartridgeCV
install	./src/emucore/CartDPC.cxx	/^void CartridgeDPC::install(System& system)$/;"	f	class:CartridgeDPC
install	./src/emucore/CartE0.cxx	/^void CartridgeE0::install(System& system)$/;"	f	class:CartridgeE0
install	./src/emucore/CartE7.cxx	/^void CartridgeE7::install(System& system)$/;"	f	class:CartridgeE7
install	./src/emucore/CartF4.cxx	/^void CartridgeF4::install(System& system)$/;"	f	class:CartridgeF4
install	./src/emucore/CartF4SC.cxx	/^void CartridgeF4SC::install(System& system)$/;"	f	class:CartridgeF4SC
install	./src/emucore/CartF6.cxx	/^void CartridgeF6::install(System& system)$/;"	f	class:CartridgeF6
install	./src/emucore/CartF6SC.cxx	/^void CartridgeF6SC::install(System& system)$/;"	f	class:CartridgeF6SC
install	./src/emucore/CartF8.cxx	/^void CartridgeF8::install(System& system)$/;"	f	class:CartridgeF8
install	./src/emucore/CartF8SC.cxx	/^void CartridgeF8SC::install(System& system)$/;"	f	class:CartridgeF8SC
install	./src/emucore/CartFASC.cxx	/^void CartridgeFASC::install(System& system)$/;"	f	class:CartridgeFASC
install	./src/emucore/CartFE.cxx	/^void CartridgeFE::install(System& system)$/;"	f	class:CartridgeFE
install	./src/emucore/CartMB.cxx	/^void CartridgeMB::install(System& system)$/;"	f	class:CartridgeMB
install	./src/emucore/CartMC.cxx	/^void CartridgeMC::install(System& system)$/;"	f	class:CartridgeMC
install	./src/emucore/CartSB.cxx	/^void CartridgeSB::install(System& system)$/;"	f	class:CartridgeSB
install	./src/emucore/CartUA.cxx	/^void CartridgeUA::install(System& system)$/;"	f	class:CartridgeUA
install	./src/emucore/CartX07.cxx	/^void CartridgeX07::install(System& system)$/;"	f	class:CartridgeX07
install	./src/emucore/M6532.cxx	/^void M6532::install(System& system)$/;"	f	class:M6532
install	./src/emucore/M6532.cxx	/^void M6532::install(System& system, Device& device)$/;"	f	class:M6532
install	./src/emucore/TIA.cxx	/^void TIA::install(System& system)$/;"	f	class:TIA
install	./src/emucore/TIA.cxx	/^void TIA::install(System& system, Device& device)$/;"	f	class:TIA
install	./src/emucore/m6502/src/M6502.cxx	/^void M6502::install(System& system)$/;"	f	class:M6502
install	./src/emucore/m6502/src/NullDev.cxx	/^void NullDevice::install(System& system)$/;"	f	class:NullDevice
instance	./src/gui/GuiObject.hxx	/^    OSystem* instance() { return myOSystem; }$/;"	f	class:GuiObject
interpolate	./src/emucore/rsynth/holmes.c	/^interpolate(char *w, char *p, slope_t * s, slope_t * e, float mid, long t,$/;"	f
interruptHandler	./src/emucore/m6502/src/M6502Hi.cxx	/^void M6502High::interruptHandler()$/;"	f	class:M6502High
interruptHandler	./src/emucore/m6502/src/M6502Low.cxx	/^void M6502Low::interruptHandler()$/;"	f	class:M6502Low
intersects	./src/gui/Rect.hxx	/^	bool intersects(const Rect & r) const {$/;"	f	struct:GUI::Rect
invIfChanged	./src/debugger/Debugger.cxx	/^const string Debugger::invIfChanged(int reg, int oldReg)$/;"	f	class:Debugger
invalidate	./src/debugger/gui/RomWidget.hxx	/^    void invalidate() { myListIsDirty = true; }$/;"	f	class:RomWidget
inverse	./src/debugger/DebuggerParser.hxx	/^    static inline string inverse(const string& msg = "")$/;"	f	class:DebuggerParser
invertCell	./src/debugger/gui/DataGridWidget.cxx	/^void DataGridWidget::invertCell()$/;"	f	class:DataGridWidget
irq	./src/emucore/m6502/src/M6502.cxx	/^void M6502::irq()$/;"	f	class:M6502
isActive	./src/emucore/StateManager.cxx	/^bool StateManager::isActive()$/;"	f	class:StateManager
isClear	./src/debugger/PackedBitArray.cxx	/^int PackedBitArray::isClear(unsigned int bit) {$/;"	f	class:PackedBitArray
isDir	./src/gui/GameList.hxx	/^    inline const bool isDir(int i)$/;"	f	class:GameList
isDirectory	./src/emucore/FSNode.hxx	/^    virtual bool isDirectory() const { return _realNode->isDirectory(); }$/;"	f	class:FilesystemNode
isDirectory	./src/gp2x/FSNodeGP2X.cxx	/^    virtual bool isDirectory() const { return _isDirectory; }$/;"	f	class:POSIXFilesystemNode
isDirectory	./src/unix/FSNodePOSIX.cxx	/^    virtual bool isDirectory() const { return _isDirectory; }$/;"	f	class:POSIXFilesystemNode
isDirectory	./src/win32/FSNodeWin32.cxx	/^    virtual bool isDirectory() const { return _isDirectory; }$/;"	f	class:WindowsFilesystemNode
isDirectory	./src/wince/FSNodeWinCE.cxx	/^    virtual bool isDirectory() const { return _isDirectory; }$/;"	f	class:WindowsFilesystemNode
isEditable	./src/gui/EditableWidget.hxx	/^    bool isEditable() const	 { return _editable; }$/;"	f	class:EditableWidget
isEmpty	./src/common/Array.hxx	/^    bool isEmpty() const$/;"	f	class:Common::Array
isEmpty	./src/common/VideoModeList.hxx	/^    bool isEmpty() const { return myModeList.isEmpty(); }$/;"	f	class:VideoModeList
isEnabled	./src/gui/Widget.hxx	/^    bool isEnabled() const   { return _flags & WIDGET_ENABLED;       }$/;"	f	class:Widget
isMouseDown	./src/gui/PopUpWidget.cxx	/^bool PopUpDialog::isMouseDown()$/;"	f	class:PopUpDialog
isOpen	./src/emucore/Deserializer.cxx	/^bool Deserializer::isOpen(void)$/;"	f	class:Deserializer
isOpen	./src/emucore/Serializer.cxx	/^bool Serializer::isOpen(void)$/;"	f	class:Serializer
isProbably0840	./src/emucore/Cart.cxx	/^bool Cartridge::isProbably0840(const uInt8* image, uInt32 size)$/;"	f	class:Cartridge
isProbably3E	./src/emucore/Cart.cxx	/^bool Cartridge::isProbably3E(const uInt8* image, uInt32 size)$/;"	f	class:Cartridge
isProbably3F	./src/emucore/Cart.cxx	/^bool Cartridge::isProbably3F(const uInt8* image, uInt32 size)$/;"	f	class:Cartridge
isProbably4A50	./src/emucore/Cart.cxx	/^bool Cartridge::isProbably4A50(const uInt8* image, uInt32 size)$/;"	f	class:Cartridge
isProbablyCV	./src/emucore/Cart.cxx	/^bool Cartridge::isProbablyCV(const uInt8* image, uInt32 size)$/;"	f	class:Cartridge
isProbablyE0	./src/emucore/Cart.cxx	/^bool Cartridge::isProbablyE0(const uInt8* image, uInt32 size)$/;"	f	class:Cartridge
isProbablyE7	./src/emucore/Cart.cxx	/^bool Cartridge::isProbablyE7(const uInt8* image, uInt32 size)$/;"	f	class:Cartridge
isProbablyFE	./src/emucore/Cart.cxx	/^bool Cartridge::isProbablyFE(const uInt8* image, uInt32 size)$/;"	f	class:Cartridge
isProbablySB	./src/emucore/Cart.cxx	/^bool Cartridge::isProbablySB(const uInt8* image, uInt32 size)$/;"	f	class:Cartridge
isProbablySC	./src/emucore/Cart.cxx	/^bool Cartridge::isProbablySC(const uInt8* image, uInt32 size)$/;"	f	class:Cartridge
isProbablyUA	./src/emucore/Cart.cxx	/^bool Cartridge::isProbablyUA(const uInt8* image, uInt32 size)$/;"	f	class:Cartridge
isSet	./src/debugger/PackedBitArray.cxx	/^int PackedBitArray::isSet(unsigned int bit) {$/;"	f	class:PackedBitArray
isSuccessfullyInitialized	./src/common/SoundNull.hxx	/^    bool isSuccessfullyInitialized() const { return false; }$/;"	f	class:SoundNull
isSuccessfullyInitialized	./src/common/SoundSDL.cxx	/^bool SoundSDL::isSuccessfullyInitialized() const$/;"	f	class:SoundSDL
isSuccessfullyInitialized	./src/wince/SoundWinCE.cxx	/^bool SoundWinCE::isSuccessfullyInitialized() const$/;"	f	class:SoundWinCE
isValid	./src/emucore/FSNode.hxx	/^    virtual bool isValid() const { return _realNode->isValid(); }$/;"	f	class:FilesystemNode
isValid	./src/gp2x/FSNodeGP2X.cxx	/^    virtual bool isValid() const { return _isValid; }$/;"	f	class:POSIXFilesystemNode
isValid	./src/unix/FSNodePOSIX.cxx	/^    virtual bool isValid() const { return _isValid; }$/;"	f	class:POSIXFilesystemNode
isValid	./src/win32/FSNodeWin32.cxx	/^    virtual bool isValid() const { return _isValid; }$/;"	f	class:WindowsFilesystemNode
isValid	./src/wince/FSNodeWinCE.cxx	/^    virtual bool isValid() const { return _isValid; }$/;"	f	class:WindowsFilesystemNode
isValidCode	./src/cheat/CheatManager.cxx	/^bool CheatManager::isValidCode(const string& code)$/;"	f	class:CheatManager
isValidList	./src/emucore/EventHandler.cxx	/^bool EventHandler::isValidList(string& list, IntArray& map, uInt32 length)$/;"	f	class:EventHandler
isValidPNGHeader	./src/gui/RomInfoWidget.cxx	/^bool RomInfoWidget::isValidPNGHeader(uInt8* header)$/;"	f	class:RomInfoWidget
isValidRect	./src/gui/Rect.hxx	/^	bool isValidRect() const {$/;"	f	struct:GUI::Rect
isValidRomName	./src/emucore/OSystem.cxx	/^bool OSystem::isValidRomName(const string& filename, string& extension)$/;"	f	class:OSystem
isVisible	./src/gui/Dialog.hxx	/^    bool isVisible() const { return _visible; }$/;"	f	class:Dialog
isVisible	./src/gui/Widget.hxx	/^    bool isVisible() const   { return !(_flags & WIDGET_INVISIBLE);  }$/;"	f	class:Widget
isWidgetInChain	./src/gui/Widget.cxx	/^bool Widget::isWidgetInChain(Widget* w, Widget* find)$/;"	f	class:Widget
isWidgetInChain	./src/gui/Widget.cxx	/^bool Widget::isWidgetInChain(WidgetArray& list, Widget* find)$/;"	f	class:Widget
is_base_prefix	./src/yacc/YaccParser.cxx	/^inline bool is_base_prefix(char x) { return ( (x=='\\\\' || x=='$' || x=='#') ); }$/;"	f	namespace:YaccParser
is_identifier	./src/yacc/YaccParser.cxx	/^inline bool is_identifier(char x) {$/;"	f	namespace:YaccParser
is_operator	./src/yacc/YaccParser.cxx	/^inline bool is_operator(char x) {$/;"	f	namespace:YaccParser
islandscape	./src/wince/FrameBufferWinCE.hxx	/^	bool issmartphone, islandscape, issquare, legacygapi, screenlocked;$/;"	m	class:FrameBufferWinCE
issmartphone	./src/wince/FrameBufferWinCE.hxx	/^	bool issmartphone, islandscape, issquare, legacygapi, screenlocked;$/;"	m	class:FrameBufferWinCE
isspace	./src/win32/SDL_win32_main.c	53;"	d	file:
issquare	./src/wince/FrameBufferWinCE.hxx	/^	bool issmartphone, islandscape, issquare, legacygapi, screenlocked;$/;"	m	class:FrameBufferWinCE
items	./src/emucore/SpeakJet.hxx	/^    int items;$/;"	m	struct:SpeechBuffer
iterator	./src/common/Array.hxx	/^    typedef T *iterator;$/;"	t	class:Common::Array
joyButtonHandled	./src/emucore/OSystem.cxx	/^bool OSystem::joyButtonHandled(int button)$/;"	f	class:OSystem
joyButtonHandled	./src/gp2x/OSystemGP2X.cxx	/^bool OSystemGP2X::joyButtonHandled(int button)$/;"	f	class:OSystemGP2X
kARG_BASE_SPCL	./src/debugger/DebuggerParser.hxx	/^      kARG_BASE_SPCL,   \/\/ base specifier: 2, 10, or 16 (or "bin" "dec" "hex")$/;"	e	enum:DebuggerParser::__anon61
kARG_BOOL	./src/debugger/DebuggerParser.hxx	/^      kARG_BOOL,        \/\/ 0 or 1 only$/;"	e	enum:DebuggerParser::__anon61
kARG_BYTE	./src/debugger/DebuggerParser.hxx	/^      kARG_BYTE,        \/\/ single 8-bit value$/;"	e	enum:DebuggerParser::__anon61
kARG_END_ARGS	./src/debugger/DebuggerParser.hxx	/^      kARG_END_ARGS     \/\/ sentinel, occurs at end of list$/;"	e	enum:DebuggerParser::__anon61
kARG_FILE	./src/debugger/DebuggerParser.hxx	/^      kARG_FILE,        \/\/ filename$/;"	e	enum:DebuggerParser::__anon61
kARG_LABEL	./src/debugger/DebuggerParser.hxx	/^      kARG_LABEL,       \/\/ label (need not be defined, treated as string)$/;"	e	enum:DebuggerParser::__anon61
kARG_MULTI_BYTE	./src/debugger/DebuggerParser.hxx	/^      kARG_MULTI_BYTE,  \/\/ multiple 8-bit values (must occur last)$/;"	e	enum:DebuggerParser::__anon61
kARG_MULTI_WORD	./src/debugger/DebuggerParser.hxx	/^      kARG_MULTI_WORD,  \/\/ multiple 16-bit values (must occur last)$/;"	e	enum:DebuggerParser::__anon61
kARG_WORD	./src/debugger/DebuggerParser.hxx	/^      kARG_WORD,        \/\/ single 16-bit value$/;"	e	enum:DebuggerParser::__anon61
kARegAddr	./src/debugger/gui/CpuWidget.cxx	/^  kARegAddr,$/;"	e	enum:__anon65	file:
kAUDCID	./src/debugger/gui/AudioWidget.cxx	/^  kAUDCID,$/;"	e	enum:__anon63	file:
kAUDFID	./src/debugger/gui/AudioWidget.cxx	/^  kAUDFID,$/;"	e	enum:__anon63	file:
kAUDVID	./src/debugger/gui/AudioWidget.cxx	/^  kAUDVID$/;"	e	enum:__anon63	file:
kAboutCmd	./src/gui/OptionsDialog.hxx	/^      kAboutCmd    = 'ABOU',$/;"	e	enum:OptionsDialog::__anon25
kAcceptCmd	./src/gui/InputTextDialog.hxx	/^      kAcceptCmd = 'ACPT'$/;"	e	enum:InputTextDialog::__anon53
kAddCheatCmd	./src/cheat/CheatCodeDialog.hxx	/^      kAddCheatCmd       = 'CHTa',$/;"	e	enum:CheatCodeDialog::__anon80
kAddOneShotCmd	./src/cheat/CheatCodeDialog.hxx	/^      kAddOneShotCmd     = 'CHTo',$/;"	e	enum:CheatCodeDialog::__anon80
kAspectRatioChanged	./src/gui/VideoDialog.hxx	/^      kAspectRatioChanged = 'VDar',$/;"	e	enum:VideoDialog::__anon51
kAudCmd	./src/gui/OptionsDialog.hxx	/^      kAudCmd      = 'AUDO',$/;"	e	enum:OptionsDialog::__anon25
kAudioWidget	./src/gui/Widget.hxx	/^  kAudioWidget        = 'AUDW',$/;"	e	enum:__anon46
kAuditCmd	./src/gui/OptionsDialog.hxx	/^      kAuditCmd    = 'RAUD',$/;"	e	enum:OptionsDialog::__anon25
kAuditDirChosenCmd	./src/gui/RomAuditDialog.hxx	/^      kAuditDirChosenCmd = 'RAch'  \/\/ audit dir changed$/;"	e	enum:RomAuditDialog::__anon52
kBASE_10	./src/debugger/DebuggerParser.hxx	/^	kBASE_10,$/;"	e	enum:__anon58
kBASE_16	./src/debugger/DebuggerParser.hxx	/^	kBASE_16,$/;"	e	enum:__anon58
kBASE_16_4	./src/debugger/DebuggerParser.hxx	/^	kBASE_16_4,$/;"	e	enum:__anon58
kBASE_2	./src/debugger/DebuggerParser.hxx	/^	kBASE_2,$/;"	e	enum:__anon58
kBASE_DEFAULT	./src/debugger/DebuggerParser.hxx	/^	kBASE_DEFAULT$/;"	e	enum:__anon58
kBGColor	./src/emucore/FrameBuffer.hxx	/^  kBGColor,$/;"	e	enum:__anon20
kBL_PFID	./src/debugger/gui/TiaWidget.cxx	/^  kBL_PFID,   \/\/ Make these first, since we want them to start from 0$/;"	e	enum:__anon68	file:
kBWCmd	./src/gui/CommandDialog.hxx	/^      kBWCmd         = 'Cbwt',$/;"	e	enum:CommandDialog::__anon54
kBottomCenter	./src/emucore/FrameBuffer.hxx	/^  kBottomCenter,$/;"	e	enum:MessagePosition
kBottomLeft	./src/emucore/FrameBuffer.hxx	/^  kBottomLeft,$/;"	e	enum:MessagePosition
kBottomRight	./src/emucore/FrameBuffer.hxx	/^  kBottomRight$/;"	e	enum:MessagePosition
kBtnColor	./src/emucore/FrameBuffer.hxx	/^  kBtnColor,$/;"	e	enum:__anon20
kBtnColorHi	./src/emucore/FrameBuffer.hxx	/^  kBtnColorHi,$/;"	e	enum:__anon20
kBtnTextColor	./src/emucore/FrameBuffer.hxx	/^  kBtnTextColor,$/;"	e	enum:__anon20
kBtnTextColorHi	./src/emucore/FrameBuffer.hxx	/^  kBtnTextColorHi,$/;"	e	enum:__anon20
kBufferSize	./src/debugger/gui/PromptWidget.hxx	/^      kBufferSize     = 32768,$/;"	e	enum:PromptWidget::__anon67
kButtonHeight	./src/gui/Widget.hxx	/^  kButtonHeight = 16$/;"	e	enum:__anon47
kButtonWidget	./src/gui/Widget.hxx	/^  kButtonWidget       = 'BTTN',$/;"	e	enum:__anon46
kButtonWidth	./src/gui/Widget.hxx	/^  kButtonWidth  = 50,$/;"	e	enum:__anon47
kCMenuItemSelectedCmd	./src/debugger/gui/ContextMenu.hxx	/^  kCMenuItemSelectedCmd = 'CMsl'$/;"	e	enum:__anon73
kCOLUBKAddr	./src/debugger/gui/TiaWidget.cxx	/^  kCOLUBKAddr$/;"	e	enum:__anon70	file:
kCOLUP0Addr	./src/debugger/gui/TiaWidget.cxx	/^  kCOLUP0Addr,$/;"	e	enum:__anon70	file:
kCOLUP1Addr	./src/debugger/gui/TiaWidget.cxx	/^  kCOLUP1Addr,$/;"	e	enum:__anon70	file:
kCOLUPFAddr	./src/debugger/gui/TiaWidget.cxx	/^  kCOLUPFAddr,$/;"	e	enum:__anon70	file:
kCValEntered	./src/debugger/gui/RamWidget.hxx	/^      kCValEntered = 'RWcv'$/;"	e	enum:RamWidget::__anon74
kCheatAdded	./src/cheat/CheatCodeDialog.hxx	/^      kCheatAdded        = 'CHad',$/;"	e	enum:CheatCodeDialog::__anon80
kCheatCmd	./src/gui/OptionsDialog.hxx	/^      kCheatCmd    = 'CHET',$/;"	e	enum:OptionsDialog::__anon25
kCheatEdited	./src/cheat/CheatCodeDialog.hxx	/^      kCheatEdited       = 'CHed',$/;"	e	enum:CheatCodeDialog::__anon80
kCheatFileChosenCmd	./src/gui/FileSnapDialog.hxx	/^      kCheatFileChosenCmd   = 'LOcc', \/\/ cheatfile changed$/;"	e	enum:FileSnapDialog::__anon28
kCheckActionCmd	./src/gui/GuiObject.hxx	/^  kCheckActionCmd  = 'CBAC',$/;"	e	enum:__anon31
kCheckColor	./src/emucore/FrameBuffer.hxx	/^  kCheckColor,$/;"	e	enum:__anon20
kCheckboxWidget	./src/gui/Widget.hxx	/^  kCheckboxWidget     = 'CHKB',$/;"	e	enum:__anon46
kChooseAuditDirCmd	./src/gui/RomAuditDialog.hxx	/^      kChooseAuditDirCmd = 'RAsl', \/\/ audit dir select$/;"	e	enum:RomAuditDialog::__anon52
kChooseCheatFileCmd	./src/gui/FileSnapDialog.hxx	/^      kChooseCheatFileCmd   = 'LOcf', \/\/ cheatfile (stella.cht)$/;"	e	enum:FileSnapDialog::__anon28
kChooseCmd	./src/gui/BrowserDialog.hxx	/^      kChooseCmd = 'CHOS',$/;"	e	enum:BrowserDialog::__anon29
kChoosePaletteFileCmd	./src/gui/FileSnapDialog.hxx	/^      kChoosePaletteFileCmd = 'LOpf', \/\/ palette file (stella.pal)$/;"	e	enum:FileSnapDialog::__anon28
kChoosePropsFileCmd	./src/gui/FileSnapDialog.hxx	/^      kChoosePropsFileCmd   = 'LOpr', \/\/ properties file (stella.pro)$/;"	e	enum:FileSnapDialog::__anon28
kChooseRomDirCmd	./src/gui/FileSnapDialog.hxx	/^      kChooseRomDirCmd      = 'LOrm', \/\/ rom select$/;"	e	enum:FileSnapDialog::__anon28
kChooseSnapDirCmd	./src/gui/FileSnapDialog.hxx	/^      kChooseSnapDirCmd     = 'LOsn', \/\/ snapshot dir$/;"	e	enum:FileSnapDialog::__anon28
kChooseStateDirCmd	./src/gui/FileSnapDialog.hxx	/^      kChooseStateDirCmd    = 'LOsd', \/\/ state dir$/;"	e	enum:FileSnapDialog::__anon28
kCmpCmd	./src/debugger/gui/RamWidget.hxx	/^      kCmpCmd      = 'RWcp',$/;"	e	enum:RamWidget::__anon74
kColor	./src/emucore/FrameBuffer.hxx	/^  kColor = 256,$/;"	e	enum:__anon20
kColorCmd	./src/gui/CommandDialog.hxx	/^      kColorCmd      = 'Ccol',$/;"	e	enum:CommandDialog::__anon54
kColorRegsID	./src/debugger/gui/TiaWidget.cxx	/^  kColorRegsID,$/;"	e	enum:__anon68	file:
kColorWidget	./src/gui/Widget.hxx	/^  kColorWidget        = 'COLR',$/;"	e	enum:__anon46
kCpuRegID	./src/debugger/gui/CpuWidget.cxx	/^  kCpuRegID$/;"	e	enum:__anon64	file:
kCpuWidget	./src/gui/Widget.hxx	/^  kCpuWidget          = 'CPUW',$/;"	e	enum:__anon46
kCxclrCmd	./src/debugger/gui/TiaWidget.cxx	/^  kCxclrCmd = 'Scxl'$/;"	e	enum:__anon69	file:
kDDAdvCmd	./src/debugger/gui/DebuggerDialog.cxx	/^  kDDAdvCmd   = 'DDav',$/;"	e	enum:__anon72	file:
kDDExitCmd	./src/debugger/gui/DebuggerDialog.cxx	/^  kDDExitCmd  = 'DDex'$/;"	e	enum:__anon72	file:
kDDSAdvCmd	./src/debugger/gui/DebuggerDialog.cxx	/^  kDDSAdvCmd  = 'DDsv',$/;"	e	enum:__anon72	file:
kDDStepCmd	./src/debugger/gui/DebuggerDialog.cxx	/^  kDDStepCmd  = 'DDst',$/;"	e	enum:__anon72	file:
kDDTraceCmd	./src/debugger/gui/DebuggerDialog.cxx	/^  kDDTraceCmd = 'DDtr',$/;"	e	enum:__anon72	file:
kDGDecCmd	./src/debugger/gui/DataGridOpsWidget.hxx	/^  kDGDecCmd    = 'DGdc',$/;"	e	enum:__anon75
kDGIncCmd	./src/debugger/gui/DataGridOpsWidget.hxx	/^  kDGIncCmd    = 'DGic',$/;"	e	enum:__anon75
kDGInvertCmd	./src/debugger/gui/DataGridOpsWidget.hxx	/^  kDGInvertCmd = 'DGiv',$/;"	e	enum:__anon75
kDGItemActivatedCmd	./src/debugger/gui/DataGridWidget.hxx	/^  kDGItemActivatedCmd     = 'DGac',$/;"	e	enum:__anon71
kDGItemDataChangedCmd	./src/debugger/gui/DataGridWidget.hxx	/^  kDGItemDataChangedCmd   = 'DGch',$/;"	e	enum:__anon71
kDGItemDoubleClickedCmd	./src/debugger/gui/DataGridWidget.hxx	/^  kDGItemDoubleClickedCmd = 'DGdb',$/;"	e	enum:__anon71
kDGNegateCmd	./src/debugger/gui/DataGridOpsWidget.hxx	/^  kDGNegateCmd = 'DGng',$/;"	e	enum:__anon75
kDGSelectionChangedCmd	./src/debugger/gui/DataGridWidget.hxx	/^  kDGSelectionChangedCmd  = 'DGsc'$/;"	e	enum:__anon71
kDGShiftLCmd	./src/debugger/gui/DataGridOpsWidget.hxx	/^  kDGShiftLCmd = 'DGls',$/;"	e	enum:__anon75
kDGShiftRCmd	./src/debugger/gui/DataGridOpsWidget.hxx	/^  kDGShiftRCmd = 'DGrs'$/;"	e	enum:__anon75
kDGZeroCmd	./src/debugger/gui/DataGridOpsWidget.hxx	/^  kDGZeroCmd   = 'DGze',$/;"	e	enum:__anon75
kDHeightChanged	./src/gui/UIDialog.hxx	/^      kDHeightChanged = 'UIdh',$/;"	e	enum:UIDialog::__anon48
kDWidthChanged	./src/gui/UIDialog.hxx	/^      kDWidthChanged  = 'UIdw',$/;"	e	enum:UIDialog::__anon48
kDashLine	./src/emucore/FrameBuffer.hxx	/^  kDashLine$/;"	e	enum:FrameStyle
kDataGridOpsWidget	./src/gui/Widget.hxx	/^  kDataGridOpsWidget  = 'BGRO',$/;"	e	enum:__anon46
kDataGridWidget	./src/gui/Widget.hxx	/^  kDataGridWidget     = 'BGRI',$/;"	e	enum:__anon46
kDbgChangedColor	./src/emucore/FrameBuffer.hxx	/^  kDbgChangedColor,$/;"	e	enum:__anon20
kDbgChangedTextColor	./src/emucore/FrameBuffer.hxx	/^  kDbgChangedTextColor,$/;"	e	enum:__anon20
kDbgColorHi	./src/emucore/FrameBuffer.hxx	/^  kDbgColorHi,$/;"	e	enum:__anon20
kDefaultsCmd	./src/gui/GuiObject.hxx	/^  kDefaultsCmd     = 'DEFA',$/;"	e	enum:__anon31
kDelBLID	./src/debugger/gui/TiaWidget.cxx	/^  kDelP0ID,   kDelP1ID,   kDelBLID,$/;"	e	enum:__anon68	file:
kDelP0ID	./src/debugger/gui/TiaWidget.cxx	/^  kDelP0ID,   kDelP1ID,   kDelBLID,$/;"	e	enum:__anon68	file:
kDelP1ID	./src/debugger/gui/TiaWidget.cxx	/^  kDelP0ID,   kDelP1ID,   kDelBLID,$/;"	e	enum:__anon68	file:
kDlgColor	./src/emucore/FrameBuffer.hxx	/^  kDlgColor,$/;"	e	enum:__anon20
kDoubleClickDelay	./src/gui/DialogContainer.hxx	/^      kDoubleClickDelay   = 500,$/;"	e	enum:DialogContainer::__anon37
kDownArrowPart	./src/gui/ScrollBarWidget.hxx	/^      kDownArrowPart,$/;"	e	enum:ScrollBarWidget::__anon34
kEditAcceptCmd	./src/gui/EditableWidget.hxx	/^  kEditAcceptCmd  = 'EDac',$/;"	e	enum:__anon44
kEditCancelCmd	./src/gui/EditableWidget.hxx	/^  kEditCancelCmd  = 'EDcl',$/;"	e	enum:__anon44
kEditChangedCmd	./src/gui/EditableWidget.hxx	/^  kEditChangedCmd = 'EDch'$/;"	e	enum:__anon44
kEditCheatCmd	./src/cheat/CheatCodeDialog.hxx	/^      kEditCheatCmd      = 'CHTe',$/;"	e	enum:CheatCodeDialog::__anon80
kEditCmd	./src/gui/GuiObject.hxx	/^  kEditCmd         = 'EDIT',$/;"	e	enum:__anon31
kEditTextWidget	./src/gui/Widget.hxx	/^  kEditTextWidget     = 'EDIT',$/;"	e	enum:__anon46
kEditableWidget	./src/gui/Widget.hxx	/^  kEditableWidget     = 'EDLE',$/;"	e	enum:__anon46
kEmulActionListSize	./src/emucore/EventHandler.hxx	/^      kEmulActionListSize = 75,$/;"	e	enum:EventHandler::__anon13
kEmulationMode	./src/emucore/EventHandler.hxx	/^  kEmulationMode = 0,  \/\/ make sure these are set correctly,$/;"	e	enum:EventMode
kEnaBLID	./src/debugger/gui/TiaWidget.cxx	/^  kEnaM0ID,   kEnaM1ID,   kEnaBLID,$/;"	e	enum:__anon68	file:
kEnaM0ID	./src/debugger/gui/TiaWidget.cxx	/^  kEnaM0ID,   kEnaM1ID,   kEnaBLID,$/;"	e	enum:__anon68	file:
kEnaM1ID	./src/debugger/gui/TiaWidget.cxx	/^  kEnaM0ID,   kEnaM1ID,   kEnaBLID,$/;"	e	enum:__anon68	file:
kEraseCmd	./src/gui/EventMappingWidget.hxx	/^      kEraseCmd    = 'eras',$/;"	e	enum:EventMappingWidget::__anon33
kEventMappingWidget	./src/gui/Widget.hxx	/^  kEventMappingWidget = 'EVMP',$/;"	e	enum:__anon46
kExitCmd	./src/gui/CommandDialog.hxx	/^      kExitCmd       = 'Clex'$/;"	e	enum:CommandDialog::__anon54
kExitCmd	./src/gui/OptionsDialog.hxx	/^      kExitCmd     = 'EXIM'$/;"	e	enum:OptionsDialog::__anon25
kFileSnapCmd	./src/gui/OptionsDialog.hxx	/^      kFileSnapCmd = 'FLSN',$/;"	e	enum:OptionsDialog::__anon25
kFormatCmd	./src/gui/CommandDialog.hxx	/^      kFormatCmd     = 'Cfmt',$/;"	e	enum:CommandDialog::__anon54
kFrameRateChanged	./src/gui/VideoDialog.hxx	/^      kFrameRateChanged   = 'VDfr',$/;"	e	enum:VideoDialog::__anon51
kFullScrChanged	./src/gui/VideoDialog.hxx	/^      kFullScrChanged     = 'VDfs'$/;"	e	enum:VideoDialog::__anon51
kGLBuffer	./src/emucore/FrameBuffer.hxx	/^  kGLBuffer$/;"	e	enum:BufferType
kGRP0ID	./src/debugger/gui/TiaWidget.cxx	/^  kGRP0ID,    kGRP1ID,$/;"	e	enum:__anon68	file:
kGRP1ID	./src/debugger/gui/TiaWidget.cxx	/^  kGRP0ID,    kGRP1ID,$/;"	e	enum:__anon68	file:
kGoUpCmd	./src/gui/BrowserDialog.hxx	/^      kGoUpCmd   = 'GOUP'$/;"	e	enum:BrowserDialog::__anon29
kHMBLID	./src/debugger/gui/TiaWidget.cxx	/^  kHMM0ID,    kHMM1ID,    kHMBLID,$/;"	e	enum:__anon68	file:
kHMM0ID	./src/debugger/gui/TiaWidget.cxx	/^  kHMM0ID,    kHMM1ID,    kHMBLID,$/;"	e	enum:__anon68	file:
kHMM1ID	./src/debugger/gui/TiaWidget.cxx	/^  kHMM0ID,    kHMM1ID,    kHMBLID,$/;"	e	enum:__anon68	file:
kHMP0ID	./src/debugger/gui/TiaWidget.cxx	/^  kHMP0ID,    kHMP1ID,$/;"	e	enum:__anon68	file:
kHMP1ID	./src/debugger/gui/TiaWidget.cxx	/^  kHMP0ID,    kHMP1ID,$/;"	e	enum:__anon68	file:
kHelpCmd	./src/gui/OptionsDialog.hxx	/^      kHelpCmd     = 'HELP',$/;"	e	enum:OptionsDialog::__anon25
kHistorySize	./src/debugger/gui/PromptWidget.hxx	/^      kHistorySize    = 20$/;"	e	enum:PromptWidget::__anon67
kHmclrCmd	./src/debugger/gui/TiaWidget.cxx	/^  kHmclrCmd = 'Shmc',$/;"	e	enum:__anon69	file:
kHmoveCmd	./src/debugger/gui/TiaWidget.cxx	/^  kHmoveCmd = 'Shmv',$/;"	e	enum:__anon69	file:
kIN_ARG	./src/debugger/DebuggerParser.hxx	/^      kIN_ARG$/;"	e	enum:DebuggerParser::__anon60
kIN_BRACE	./src/debugger/DebuggerParser.hxx	/^      kIN_BRACE,$/;"	e	enum:DebuggerParser::__anon60
kIN_COMMAND	./src/debugger/DebuggerParser.hxx	/^      kIN_COMMAND,$/;"	e	enum:DebuggerParser::__anon60
kIN_SPACE	./src/debugger/DebuggerParser.hxx	/^      kIN_SPACE,$/;"	e	enum:DebuggerParser::__anon60
kInfoCmd	./src/gui/OptionsDialog.hxx	/^      kInfoCmd     = 'INFO',$/;"	e	enum:OptionsDialog::__anon25
kInptCmd	./src/gui/OptionsDialog.hxx	/^      kInptCmd     = 'INPT',$/;"	e	enum:OptionsDialog::__anon25
kJDirDown	./src/gp2x/OSystemGP2X.hxx	/^      kJDirDown  =  4,  kJDirDownRight =  5,$/;"	e	enum:OSystemGP2X::__anon23
kJDirDownLeft	./src/gp2x/OSystemGP2X.hxx	/^      kJDirLeft  =  2,  kJDirDownLeft  =  3,$/;"	e	enum:OSystemGP2X::__anon23
kJDirDownRight	./src/gp2x/OSystemGP2X.hxx	/^      kJDirDown  =  4,  kJDirDownRight =  5,$/;"	e	enum:OSystemGP2X::__anon23
kJDirLeft	./src/gp2x/OSystemGP2X.hxx	/^      kJDirLeft  =  2,  kJDirDownLeft  =  3,$/;"	e	enum:OSystemGP2X::__anon23
kJDirRight	./src/gp2x/OSystemGP2X.hxx	/^      kJDirRight =  6,  kJDirUpRight   =  7$/;"	e	enum:OSystemGP2X::__anon23
kJDirUp	./src/gp2x/OSystemGP2X.hxx	/^      kJDirUp    =  0,  kJDirUpLeft    =  1,$/;"	e	enum:OSystemGP2X::__anon23
kJDirUpLeft	./src/gp2x/OSystemGP2X.hxx	/^      kJDirUp    =  0,  kJDirUpLeft    =  1,$/;"	e	enum:OSystemGP2X::__anon23
kJDirUpRight	./src/gp2x/OSystemGP2X.hxx	/^      kJDirRight =  6,  kJDirUpRight   =  7$/;"	e	enum:OSystemGP2X::__anon23
kJHatCentered	./src/emucore/EventHandler.hxx	/^      kJHatCentered$/;"	e	enum:EventHandler::JoyHat
kJHatDown	./src/emucore/EventHandler.hxx	/^      kJHatDown,$/;"	e	enum:EventHandler::JoyHat
kJHatLeft	./src/emucore/EventHandler.hxx	/^      kJHatLeft,$/;"	e	enum:EventHandler::JoyHat
kJHatRight	./src/emucore/EventHandler.hxx	/^      kJHatRight,$/;"	e	enum:EventHandler::JoyHat
kJHatUp	./src/emucore/EventHandler.hxx	/^      kJHatUp,$/;"	e	enum:EventHandler::JoyHat
kLHeightChanged	./src/gui/UIDialog.hxx	/^      kLHeightChanged = 'UIlh',$/;"	e	enum:UIDialog::__anon48
kLWidthChanged	./src/gui/UIDialog.hxx	/^      kLWidthChanged  = 'UIlw',$/;"	e	enum:UIDialog::__anon48
kLeftCChanged	./src/gui/GameInfoDialog.hxx	/^      kLeftCChanged    = 'LCch',$/;"	e	enum:GameInfoDialog::__anon50
kLeftChanged	./src/gui/InputDialog.hxx	/^      kLeftChanged   = 'LCch',$/;"	e	enum:InputDialog::__anon30
kLeftDiffACmd	./src/gui/CommandDialog.hxx	/^      kLeftDiffACmd  = 'Clda',$/;"	e	enum:CommandDialog::__anon54
kLeftDiffBCmd	./src/gui/CommandDialog.hxx	/^      kLeftDiffBCmd  = 'Cldb',$/;"	e	enum:CommandDialog::__anon54
kLineBufferSize	./src/debugger/gui/PromptWidget.hxx	/^      kLineBufferSize = 256,$/;"	e	enum:PromptWidget::__anon67
kListAll	./src/emucore/FSNode.hxx	/^      kListAll = 3$/;"	e	enum:AbstractFilesystemNode::__anon18
kListDirectoriesOnly	./src/emucore/FSNode.hxx	/^      kListDirectoriesOnly = 2,$/;"	e	enum:AbstractFilesystemNode::__anon18
kListFilesOnly	./src/emucore/FSNode.hxx	/^      kListFilesOnly = 1,$/;"	e	enum:AbstractFilesystemNode::__anon18
kListItemActivatedCmd	./src/gui/ListWidget.hxx	/^  kListItemActivatedCmd     = 'LIac',  \/\/ item activated by return\/enter - 'data' will be item index$/;"	e	enum:__anon49
kListItemChecked	./src/gui/CheckListWidget.hxx	/^  kListItemChecked = 'LIct'  \/\/ checkbox toggled on current line$/;"	e	enum:__anon24
kListItemDataChangedCmd	./src/gui/ListWidget.hxx	/^  kListItemDataChangedCmd   = 'LIch',  \/\/ item data changed - 'data' will be item index$/;"	e	enum:__anon49
kListItemDoubleClickedCmd	./src/gui/ListWidget.hxx	/^  kListItemDoubleClickedCmd = 'LIdb',  \/\/ double click on item - 'data' will be item index$/;"	e	enum:__anon49
kListNumberingOff	./src/gui/StringListWidget.hxx	/^  kListNumberingOff  = -1,$/;"	e	enum:NumberingMode
kListNumberingOne	./src/gui/StringListWidget.hxx	/^  kListNumberingOne  = 1$/;"	e	enum:NumberingMode
kListNumberingZero	./src/gui/StringListWidget.hxx	/^  kListNumberingZero = 0,$/;"	e	enum:NumberingMode
kListScrolledCmd	./src/gui/ListWidget.hxx	/^  kListScrolledCmd          = 'Lscl'   \/\/ list scrolled - 'data' will be current position$/;"	e	enum:__anon49
kListSelectionChangedCmd	./src/gui/ListWidget.hxx	/^  kListSelectionChangedCmd  = 'Lsch',  \/\/ selection changed - 'data' will be item index$/;"	e	enum:__anon49
kListWidget	./src/gui/Widget.hxx	/^  kListWidget         = 'LIST',$/;"	e	enum:__anon46
kLoadStateCmd	./src/gui/CommandDialog.hxx	/^      kLoadStateCmd  = 'Clst',$/;"	e	enum:CommandDialog::__anon54
kM0_BLID	./src/debugger/gui/TiaWidget.cxx	/^  kM0_PFID,   kM0_BLID,   kM0_M1ID,$/;"	e	enum:__anon68	file:
kM0_M1ID	./src/debugger/gui/TiaWidget.cxx	/^  kM0_PFID,   kM0_BLID,   kM0_M1ID,$/;"	e	enum:__anon68	file:
kM0_PFID	./src/debugger/gui/TiaWidget.cxx	/^  kM0_PFID,   kM0_BLID,   kM0_M1ID,$/;"	e	enum:__anon68	file:
kM1_BLID	./src/debugger/gui/TiaWidget.cxx	/^  kM1_PFID,   kM1_BLID,$/;"	e	enum:__anon68	file:
kM1_PFID	./src/debugger/gui/TiaWidget.cxx	/^  kM1_PFID,   kM1_BLID,$/;"	e	enum:__anon68	file:
kMAX_ARG_TYPES	./src/debugger/DebuggerParser.hxx	/^      kMAX_ARG_TYPES = 10 \/\/ TODO: put in separate header file Command.hxx$/;"	e	enum:DebuggerParser::__anon59
kMenuActionListSize	./src/emucore/EventHandler.hxx	/^      kMenuActionListSize = 13$/;"	e	enum:EventHandler::__anon13
kMenuMode	./src/emucore/EventHandler.hxx	/^  kMenuMode      = 1,  \/\/ since they'll be used as array indices$/;"	e	enum:EventMode
kMiddleCenter	./src/emucore/FrameBuffer.hxx	/^  kMiddleCenter,$/;"	e	enum:MessagePosition
kMiddleLeft	./src/emucore/FrameBuffer.hxx	/^  kMiddleLeft,$/;"	e	enum:MessagePosition
kMiddleRight	./src/emucore/FrameBuffer.hxx	/^  kMiddleRight,$/;"	e	enum:MessagePosition
kMoviePlaybackMode	./src/emucore/StateManager.hxx	/^      kMoviePlaybackMode,$/;"	e	enum:StateManager::Mode
kMovieRecordMode	./src/emucore/StateManager.hxx	/^      kMovieRecordMode,$/;"	e	enum:StateManager::Mode
kNextCmd	./src/gui/GuiObject.hxx	/^  kNextCmd         = 'NEXT',$/;"	e	enum:__anon31
kNoPart	./src/gui/ScrollBarWidget.hxx	/^      kNoPart,$/;"	e	enum:ScrollBarWidget::__anon34
kNumCartTypes	./src/gui/GameInfoDialog.hxx	/^      kNumCartTypes       = 25,$/;"	e	enum:GameInfoDialog::__anon50
kNumColors	./src/emucore/FrameBuffer.hxx	/^  kNumColors$/;"	e	enum:__anon20
kNumCols	./src/gui/CommandDialog.hxx	/^      kNumCols = 4$/;"	e	enum:CommandDialog::__anon55
kNumCommands	./src/debugger/DebuggerParser.hxx	/^      kNumCommands   = 57,$/;"	e	enum:DebuggerParser::__anon59
kNumControllerTypes	./src/gui/GameInfoDialog.hxx	/^      kNumControllerTypes = 5$/;"	e	enum:GameInfoDialog::__anon50
kNumJoyAxis	./src/emucore/EventHandler.hxx	/^      kNumJoyAxis    = 16,$/;"	e	enum:EventHandler::__anon14
kNumJoyButtons	./src/emucore/EventHandler.hxx	/^      kNumJoyButtons = 24,$/;"	e	enum:EventHandler::__anon14
kNumJoyHats	./src/emucore/EventHandler.hxx	/^      kNumJoyHats    = 16$/;"	e	enum:EventHandler::__anon14
kNumJoysticks	./src/emucore/EventHandler.hxx	/^      kNumJoysticks  = 8,$/;"	e	enum:EventHandler::__anon14
kNumModes	./src/emucore/EventHandler.hxx	/^  kNumModes      = 2$/;"	e	enum:EventMode
kNumRows	./src/gui/CommandDialog.hxx	/^      kNumRows = 4,$/;"	e	enum:CommandDialog::__anon55
kNumUIPalettes	./src/emucore/OSystem.hxx	/^    enum { kNumUIPalettes = 2 };$/;"	e	enum:OSystem::__anon7
kNusizM0ID	./src/debugger/gui/TiaWidget.cxx	/^  kNusizM0ID, kNusizM1ID, kSizeBLID,$/;"	e	enum:__anon68	file:
kNusizM1ID	./src/debugger/gui/TiaWidget.cxx	/^  kNusizM0ID, kNusizM1ID, kSizeBLID,$/;"	e	enum:__anon68	file:
kNusizP0ID	./src/debugger/gui/TiaWidget.cxx	/^  kNusizP0ID, kNusizP1ID,$/;"	e	enum:__anon68	file:
kNusizP1ID	./src/debugger/gui/TiaWidget.cxx	/^  kNusizP0ID, kNusizP1ID,$/;"	e	enum:__anon68	file:
kOKCmd	./src/gui/GuiObject.hxx	/^  kOKCmd           = 'OK  ',$/;"	e	enum:__anon31
kOffMode	./src/emucore/StateManager.hxx	/^      kOffMode,$/;"	e	enum:StateManager::Mode
kOneShotCheatAdded	./src/cheat/CheatCodeDialog.hxx	/^      kOneShotCheatAdded = 'CHoa',$/;"	e	enum:CheatCodeDialog::__anon80
kOptionsCmd	./src/gui/LauncherDialog.hxx	/^      kOptionsCmd = 'OPTI',$/;"	e	enum:LauncherDialog::__anon27
kP0_BLID	./src/debugger/gui/TiaWidget.cxx	/^  kP0_PFID,   kP0_BLID,   kP0_M1ID,   kP0_M0ID,   kP0_P1ID,$/;"	e	enum:__anon68	file:
kP0_M0ID	./src/debugger/gui/TiaWidget.cxx	/^  kP0_PFID,   kP0_BLID,   kP0_M1ID,   kP0_M0ID,   kP0_P1ID,$/;"	e	enum:__anon68	file:
kP0_M1ID	./src/debugger/gui/TiaWidget.cxx	/^  kP0_PFID,   kP0_BLID,   kP0_M1ID,   kP0_M0ID,   kP0_P1ID,$/;"	e	enum:__anon68	file:
kP0_P1ID	./src/debugger/gui/TiaWidget.cxx	/^  kP0_PFID,   kP0_BLID,   kP0_M1ID,   kP0_M0ID,   kP0_P1ID,$/;"	e	enum:__anon68	file:
kP0_PFID	./src/debugger/gui/TiaWidget.cxx	/^  kP0_PFID,   kP0_BLID,   kP0_M1ID,   kP0_M0ID,   kP0_P1ID,$/;"	e	enum:__anon68	file:
kP1_BLID	./src/debugger/gui/TiaWidget.cxx	/^  kP1_PFID,   kP1_BLID,   kP1_M1ID,   kP1_M0ID,$/;"	e	enum:__anon68	file:
kP1_M0ID	./src/debugger/gui/TiaWidget.cxx	/^  kP1_PFID,   kP1_BLID,   kP1_M1ID,   kP1_M0ID,$/;"	e	enum:__anon68	file:
kP1_M1ID	./src/debugger/gui/TiaWidget.cxx	/^  kP1_PFID,   kP1_BLID,   kP1_M1ID,   kP1_M0ID,$/;"	e	enum:__anon68	file:
kP1_PFID	./src/debugger/gui/TiaWidget.cxx	/^  kP1_PFID,   kP1_BLID,   kP1_M1ID,   kP1_M0ID,$/;"	e	enum:__anon68	file:
kPCRegAddr	./src/debugger/gui/CpuWidget.cxx	/^  kPCRegAddr,$/;"	e	enum:__anon65	file:
kPCRegID	./src/debugger/gui/CpuWidget.cxx	/^  kPCRegID,$/;"	e	enum:__anon64	file:
kPF0ID	./src/debugger/gui/TiaWidget.cxx	/^  kPF0ID,     kPF1ID,     kPF2ID,$/;"	e	enum:__anon68	file:
kPF1ID	./src/debugger/gui/TiaWidget.cxx	/^  kPF0ID,     kPF1ID,     kPF2ID,$/;"	e	enum:__anon68	file:
kPF2ID	./src/debugger/gui/TiaWidget.cxx	/^  kPF0ID,     kPF1ID,     kPF2ID,$/;"	e	enum:__anon68	file:
kPPBlendChanged	./src/gui/GameInfoDialog.hxx	/^      kPPBlendChanged  = 'PBch',$/;"	e	enum:GameInfoDialog::__anon50
kPSRegB	./src/debugger/gui/CpuWidget.cxx	/^  kPSRegB = 3,$/;"	e	enum:__anon66	file:
kPSRegC	./src/debugger/gui/CpuWidget.cxx	/^  kPSRegC = 7$/;"	e	enum:__anon66	file:
kPSRegD	./src/debugger/gui/CpuWidget.cxx	/^  kPSRegD = 4,$/;"	e	enum:__anon66	file:
kPSRegI	./src/debugger/gui/CpuWidget.cxx	/^  kPSRegI = 5,$/;"	e	enum:__anon66	file:
kPSRegN	./src/debugger/gui/CpuWidget.cxx	/^  kPSRegN = 0,$/;"	e	enum:__anon66	file:
kPSRegV	./src/debugger/gui/CpuWidget.cxx	/^  kPSRegV = 1,$/;"	e	enum:__anon66	file:
kPSRegZ	./src/debugger/gui/CpuWidget.cxx	/^  kPSRegZ = 6,$/;"	e	enum:__anon66	file:
kPSpeedChanged	./src/gui/InputDialog.hxx	/^      kPSpeedChanged = 'PSch'$/;"	e	enum:InputDialog::__anon30
kPaddleChanged	./src/gui/InputDialog.hxx	/^      kPaddleChanged = 'PDch',$/;"	e	enum:InputDialog::__anon30
kPageDownPart	./src/gui/ScrollBarWidget.hxx	/^      kPageDownPart$/;"	e	enum:ScrollBarWidget::__anon34
kPageUpPart	./src/gui/ScrollBarWidget.hxx	/^      kPageUpPart,$/;"	e	enum:ScrollBarWidget::__anon34
kPaletteCmd	./src/gui/CommandDialog.hxx	/^      kPaletteCmd    = 'Cpal',$/;"	e	enum:CommandDialog::__anon54
kPaletteFileChosenCmd	./src/gui/FileSnapDialog.hxx	/^      kPaletteFileChosenCmd = 'LOpc', \/\/ palette file changed$/;"	e	enum:FileSnapDialog::__anon28
kPhosphorChanged	./src/gui/GameInfoDialog.hxx	/^      kPhosphorChanged = 'PPch',$/;"	e	enum:GameInfoDialog::__anon50
kPhosphor_16	./src/common/FrameBufferSoft.hxx	/^      kPhosphor_16,$/;"	e	enum:FrameBufferSoft::RenderType
kPhosphor_24	./src/common/FrameBufferSoft.hxx	/^      kPhosphor_24,$/;"	e	enum:FrameBufferSoft::RenderType
kPhosphor_32	./src/common/FrameBufferSoft.hxx	/^      kPhosphor_32$/;"	e	enum:FrameBufferSoft::RenderType
kPopUpWidget	./src/gui/Widget.hxx	/^  kPopUpWidget        = 'POPU',$/;"	e	enum:__anon46
kPosBLID	./src/debugger/gui/TiaWidget.cxx	/^  kPosM0ID,   kPosM1ID,   kPosBLID,$/;"	e	enum:__anon68	file:
kPosM0ID	./src/debugger/gui/TiaWidget.cxx	/^  kPosM0ID,   kPosM1ID,   kPosBLID,$/;"	e	enum:__anon68	file:
kPosM1ID	./src/debugger/gui/TiaWidget.cxx	/^  kPosM0ID,   kPosM1ID,   kPosBLID,$/;"	e	enum:__anon68	file:
kPosP0ID	./src/debugger/gui/TiaWidget.cxx	/^  kPosP0ID,   kPosP1ID,$/;"	e	enum:__anon68	file:
kPosP1ID	./src/debugger/gui/TiaWidget.cxx	/^  kPosP0ID,   kPosP1ID,$/;"	e	enum:__anon68	file:
kPrevCmd	./src/gui/GuiObject.hxx	/^  kPrevCmd         = 'PREV',$/;"	e	enum:__anon31
kPrevDirCmd	./src/gui/LauncherDialog.hxx	/^      kPrevDirCmd = 'PRVD',$/;"	e	enum:LauncherDialog::__anon27
kPriorityPFID	./src/debugger/gui/TiaWidget.cxx	/^  kRefPFID,   kScorePFID, kPriorityPFID$/;"	e	enum:__anon68	file:
kPromptWidget	./src/gui/Widget.hxx	/^  kPromptWidget       = 'PROM',$/;"	e	enum:__anon46
kPropsFileChosenCmd	./src/gui/FileSnapDialog.hxx	/^      kPropsFileChosenCmd   = 'LOrc'  \/\/ properties file changed$/;"	e	enum:FileSnapDialog::__anon28
kQuitCmd	./src/gui/LauncherDialog.hxx	/^      kQuitCmd    = 'QUIT'$/;"	e	enum:LauncherDialog::__anon27
kRamID	./src/debugger/gui/TiaWidget.cxx	/^  kRamID,$/;"	e	enum:__anon68	file:
kRamSize	./src/debugger/Debugger.hxx	/^  kRamSize = 128$/;"	e	enum:__anon77
kRamStart	./src/debugger/Debugger.hxx	/^  kRamStart = 0x80,$/;"	e	enum:__anon77
kRamWidget	./src/gui/Widget.hxx	/^  kRamWidget          = 'RAMW',$/;"	e	enum:__anon46
kRefP0ID	./src/debugger/gui/TiaWidget.cxx	/^  kRefP0ID,   kRefP1ID,$/;"	e	enum:__anon68	file:
kRefP1ID	./src/debugger/gui/TiaWidget.cxx	/^  kRefP0ID,   kRefP1ID,$/;"	e	enum:__anon68	file:
kRefPFID	./src/debugger/gui/TiaWidget.cxx	/^  kRefPFID,   kScorePFID, kPriorityPFID$/;"	e	enum:__anon68	file:
kRefreshAllCmd	./src/gui/GuiObject.hxx	/^  kRefreshAllCmd   = 'REFA',$/;"	e	enum:__anon31
kReloadRomCmd	./src/gui/CommandDialog.hxx	/^      kReloadRomCmd  = 'Crom',$/;"	e	enum:CommandDialog::__anon54
kReloadRomDirCmd	./src/gui/LauncherDialog.hxx	/^  kReloadRomDirCmd  = 'rdrl'   \/\/ reload the current listing$/;"	e	enum:__anon26
kRemCheatCmd	./src/cheat/CheatCodeDialog.hxx	/^      kRemCheatCmd       = 'CHTr'$/;"	e	enum:CheatCodeDialog::__anon80
kRendererChanged	./src/gui/VideoDialog.hxx	/^      kRendererChanged    = 'VDrd',$/;"	e	enum:VideoDialog::__anon51
kRepeatInitialDelay	./src/gui/DialogContainer.hxx	/^      kRepeatInitialDelay = 400,$/;"	e	enum:DialogContainer::__anon37
kRepeatSustainDelay	./src/gui/DialogContainer.hxx	/^      kRepeatSustainDelay = 50$/;"	e	enum:DialogContainer::__anon37
kResBLCmd	./src/debugger/gui/TiaWidget.cxx	/^  kResBLCmd = 'Srbl',$/;"	e	enum:__anon69	file:
kResM0Cmd	./src/debugger/gui/TiaWidget.cxx	/^  kResM0Cmd = 'Srm0',$/;"	e	enum:__anon69	file:
kResM1Cmd	./src/debugger/gui/TiaWidget.cxx	/^  kResM1Cmd = 'Srm1',$/;"	e	enum:__anon69	file:
kResMP0ID	./src/debugger/gui/TiaWidget.cxx	/^  kResMP0ID,  kResMP1ID,$/;"	e	enum:__anon68	file:
kResMP1ID	./src/debugger/gui/TiaWidget.cxx	/^  kResMP0ID,  kResMP1ID,$/;"	e	enum:__anon68	file:
kResP0Cmd	./src/debugger/gui/TiaWidget.cxx	/^  kResP0Cmd = 'Srp0',$/;"	e	enum:__anon69	file:
kResP1Cmd	./src/debugger/gui/TiaWidget.cxx	/^  kResP1Cmd = 'Srp1',$/;"	e	enum:__anon69	file:
kResetCmd	./src/gui/CommandDialog.hxx	/^      kResetCmd      = 'Cres',$/;"	e	enum:CommandDialog::__anon54
kResizeCmd	./src/gui/GuiObject.hxx	/^  kResizeCmd       = 'RESZ'$/;"	e	enum:__anon31
kRestartCmd	./src/debugger/gui/RamWidget.hxx	/^      kRestartCmd  = 'RWrs',$/;"	e	enum:RamWidget::__anon74
kRevertCmd	./src/debugger/gui/RamWidget.hxx	/^      kRevertCmd   = 'RWrv',$/;"	e	enum:RamWidget::__anon74
kRewindPlaybackMode	./src/emucore/StateManager.hxx	/^      kRewindPlaybackMode,$/;"	e	enum:StateManager::Mode
kRewindRecordMode	./src/emucore/StateManager.hxx	/^      kRewindRecordMode$/;"	e	enum:StateManager::Mode
kRightCChanged	./src/gui/GameInfoDialog.hxx	/^      kRightCChanged   = 'RCch',$/;"	e	enum:GameInfoDialog::__anon50
kRightChanged	./src/gui/InputDialog.hxx	/^      kRightChanged  = 'RCch',$/;"	e	enum:InputDialog::__anon30
kRightDiffACmd	./src/gui/CommandDialog.hxx	/^      kRightDiffACmd = 'Crda',$/;"	e	enum:CommandDialog::__anon54
kRightDiffBCmd	./src/gui/CommandDialog.hxx	/^      kRightDiffBCmd = 'Crdb',$/;"	e	enum:CommandDialog::__anon54
kRomDirChosenCmd	./src/gui/LauncherDialog.hxx	/^  kRomDirChosenCmd  = 'romc',  \/\/ rom chosen$/;"	e	enum:__anon26
kRomListWidget	./src/gui/Widget.hxx	/^  kRomListWidget      = 'ROML',$/;"	e	enum:__anon46
kRomNameEntered	./src/debugger/gui/RomWidget.cxx	/^  kRomNameEntered = 'RWrn'$/;"	e	enum:__anon62	file:
kRomWidget	./src/gui/Widget.hxx	/^  kRomWidget          = 'ROMW',$/;"	e	enum:__anon46
kRsyncCmd	./src/debugger/gui/TiaWidget.cxx	/^  kRsyncCmd = 'Srsy',$/;"	e	enum:__anon69	file:
kSPRegAddr	./src/debugger/gui/CpuWidget.cxx	/^  kSPRegAddr,$/;"	e	enum:__anon65	file:
kSValEntered	./src/debugger/gui/RamWidget.hxx	/^      kSValEntered = 'RWsv',$/;"	e	enum:RamWidget::__anon74
kSaveStateCmd	./src/gui/CommandDialog.hxx	/^      kSaveStateCmd  = 'Csst',$/;"	e	enum:CommandDialog::__anon54
kScorePFID	./src/debugger/gui/TiaWidget.cxx	/^  kRefPFID,   kScorePFID, kPriorityPFID$/;"	e	enum:__anon68	file:
kScrollBarWidget	./src/gui/Widget.hxx	/^  kScrollBarWidget    = 'SCRB',$/;"	e	enum:__anon46
kScrollBarWidth	./src/gui/GuiObject.hxx	/^  kScrollBarWidth = 9$/;"	e	enum:__anon32
kScrollColor	./src/emucore/FrameBuffer.hxx	/^  kScrollColor,$/;"	e	enum:__anon20
kScrollColorHi	./src/emucore/FrameBuffer.hxx	/^  kScrollColorHi,$/;"	e	enum:__anon20
kSearchCmd	./src/debugger/gui/RamWidget.hxx	/^      kSearchCmd   = 'RWse',$/;"	e	enum:RamWidget::__anon74
kSelectCmd	./src/gui/CommandDialog.hxx	/^      kSelectCmd     = 'Csel',$/;"	e	enum:CommandDialog::__anon54
kSetPositionCmd	./src/gui/GuiObject.hxx	/^  kSetPositionCmd  = 'SETP',$/;"	e	enum:__anon31
kShadowColor	./src/emucore/FrameBuffer.hxx	/^  kShadowColor,$/;"	e	enum:__anon20
kSizeBLID	./src/debugger/gui/TiaWidget.cxx	/^  kNusizM0ID, kNusizM1ID, kSizeBLID,$/;"	e	enum:__anon68	file:
kSliderColor	./src/emucore/FrameBuffer.hxx	/^  kSliderColor,$/;"	e	enum:__anon20
kSliderColorHi	./src/emucore/FrameBuffer.hxx	/^  kSliderColorHi,$/;"	e	enum:__anon20
kSliderPart	./src/gui/ScrollBarWidget.hxx	/^      kSliderPart,$/;"	e	enum:ScrollBarWidget::__anon34
kSliderWidget	./src/gui/Widget.hxx	/^  kSliderWidget       = 'SLDE',$/;"	e	enum:__anon46
kSnapDirChosenCmd	./src/gui/LauncherDialog.hxx	/^  kSnapDirChosenCmd = 'snpc',  \/\/ snap chosen$/;"	e	enum:__anon26
kSnapshotCmd	./src/gui/CommandDialog.hxx	/^      kSnapshotCmd   = 'Csnp',$/;"	e	enum:CommandDialog::__anon54
kSoftBuffer	./src/emucore/FrameBuffer.hxx	/^  kSoftBuffer,$/;"	e	enum:BufferType
kSoftZoom_16	./src/common/FrameBufferSoft.hxx	/^      kSoftZoom_16,$/;"	e	enum:FrameBufferSoft::RenderType
kSoftZoom_24	./src/common/FrameBufferSoft.hxx	/^      kSoftZoom_24,$/;"	e	enum:FrameBufferSoft::RenderType
kSoftZoom_32	./src/common/FrameBufferSoft.hxx	/^      kSoftZoom_32,$/;"	e	enum:FrameBufferSoft::RenderType
kSolidFill	./src/gui/CheckListWidget.hxx	/^  kSolidFill$/;"	e	enum:CheckStyle
kSolidLine	./src/emucore/FrameBuffer.hxx	/^  kSolidLine,$/;"	e	enum:FrameStyle
kSoundEnableChanged	./src/gui/AudioDialog.hxx	/^      kSoundEnableChanged = 'ADse'$/;"	e	enum:AudioDialog::__anon36
kStartCmd	./src/gui/LauncherDialog.hxx	/^      kStartCmd   = 'STRT',$/;"	e	enum:LauncherDialog::__anon27
kStartMapCmd	./src/gui/EventMappingWidget.hxx	/^      kStartMapCmd = 'map ',$/;"	e	enum:EventMappingWidget::__anon33
kStateDirChosenCmd	./src/gui/FileSnapDialog.hxx	/^      kStateDirChosenCmd    = 'LOsc', \/\/ state dir changed$/;"	e	enum:FileSnapDialog::__anon28
kStateSlotCmd	./src/gui/CommandDialog.hxx	/^      kStateSlotCmd  = 'Ccst',$/;"	e	enum:CommandDialog::__anon54
kStaticTextWidget	./src/gui/Widget.hxx	/^  kStaticTextWidget   = 'TEXT',$/;"	e	enum:__anon46
kStopMapCmd	./src/gui/EventMappingWidget.hxx	/^      kStopMapCmd  = 'smap'$/;"	e	enum:EventMappingWidget::__anon33
kTIAZoomChanged	./src/gui/VideoDialog.hxx	/^      kTIAZoomChanged     = 'VDti',$/;"	e	enum:VideoDialog::__anon51
kTWItemDataChangedCmd	./src/debugger/gui/ToggleWidget.hxx	/^  kTWItemDataChangedCmd   = 'TWch',$/;"	e	enum:__anon76
kTWSelectionChangedCmd	./src/debugger/gui/ToggleWidget.hxx	/^  kTWSelectionChangedCmd  = 'TWsc'$/;"	e	enum:__anon76
kTabChangedCmd	./src/gui/GuiObject.hxx	/^  kTabChangedCmd   = 'TBCH',$/;"	e	enum:__anon31
kTabLeftOffset	./src/gui/TabWidget.hxx	/^      kTabLeftOffset = 4,$/;"	e	enum:TabWidget::__anon56
kTabPadding	./src/gui/TabWidget.hxx	/^      kTabPadding = 3$/;"	e	enum:TabWidget::__anon56
kTabSpacing	./src/gui/TabWidget.hxx	/^      kTabSpacing = 2,$/;"	e	enum:TabWidget::__anon56
kTabWidget	./src/gui/Widget.hxx	/^  kTabWidget          = 'TABW',$/;"	e	enum:__anon46
kTextAlignCenter	./src/emucore/FrameBuffer.hxx	/^  kTextAlignCenter,$/;"	e	enum:TextAlignment
kTextAlignLeft	./src/emucore/FrameBuffer.hxx	/^  kTextAlignLeft,$/;"	e	enum:TextAlignment
kTextAlignRight	./src/emucore/FrameBuffer.hxx	/^  kTextAlignRight$/;"	e	enum:TextAlignment
kTextColor	./src/emucore/FrameBuffer.hxx	/^  kTextColor,$/;"	e	enum:__anon20
kTextColorEm	./src/emucore/FrameBuffer.hxx	/^  kTextColorEm,$/;"	e	enum:__anon20
kTextColorHi	./src/emucore/FrameBuffer.hxx	/^  kTextColorHi,$/;"	e	enum:__anon20
kTiaInfoWidget	./src/gui/Widget.hxx	/^  kTiaInfoWidget      = 'TIAI',$/;"	e	enum:__anon46
kTiaOutputWidget	./src/gui/Widget.hxx	/^  kTiaOutputWidget    = 'TIAO',$/;"	e	enum:__anon46
kTiaWidget	./src/gui/Widget.hxx	/^  kTiaWidget          = 'TIAW',$/;"	e	enum:__anon46
kTiaZoomWidget	./src/gui/Widget.hxx	/^  kTiaZoomWidget      = 'TIAZ',$/;"	e	enum:__anon46
kToggleBitWidget	./src/gui/Widget.hxx	/^  kToggleBitWidget    = 'TGLB',$/;"	e	enum:__anon46
kTogglePixelWidget	./src/gui/Widget.hxx	/^  kTogglePixelWidget  = 'TGLP',$/;"	e	enum:__anon46
kToggleWidget	./src/gui/Widget.hxx	/^  kToggleWidget       = 'TOGL'$/;"	e	enum:__anon46
kTopCenter	./src/emucore/FrameBuffer.hxx	/^  kTopCenter,$/;"	e	enum:MessagePosition
kTopLeft	./src/emucore/FrameBuffer.hxx	/^  kTopLeft,$/;"	e	enum:MessagePosition
kTopRight	./src/emucore/FrameBuffer.hxx	/^  kTopRight,$/;"	e	enum:MessagePosition
kUIZoomChanged	./src/gui/VideoDialog.hxx	/^      kUIZoomChanged      = 'VDui',$/;"	e	enum:VideoDialog::__anon51
kUndoCmd	./src/debugger/gui/RamWidget.hxx	/^      kUndoCmd     = 'RWud',$/;"	e	enum:RamWidget::__anon74
kUpArrowPart	./src/gui/ScrollBarWidget.hxx	/^      kUpArrowPart,$/;"	e	enum:ScrollBarWidget::__anon34
kUsrIfaceCmd	./src/gui/OptionsDialog.hxx	/^      kUsrIfaceCmd = 'URIF',$/;"	e	enum:OptionsDialog::__anon25
kVersion	./src/emucore/StateManager.hxx	/^      kVersion = 001$/;"	e	enum:StateManager::__anon5
kVidCmd	./src/gui/OptionsDialog.hxx	/^      kVidCmd      = 'VIDO',$/;"	e	enum:OptionsDialog::__anon25
kVolumeChanged	./src/gui/AudioDialog.hxx	/^      kVolumeChanged      = 'ADvc',$/;"	e	enum:AudioDialog::__anon36
kWLinesChanged	./src/gui/UIDialog.hxx	/^      kWLinesChanged  = 'UIsl'$/;"	e	enum:UIDialog::__anon48
kWidColor	./src/emucore/FrameBuffer.hxx	/^  kWidColor,$/;"	e	enum:__anon20
kWidFrameColor	./src/emucore/FrameBuffer.hxx	/^  kWidFrameColor,$/;"	e	enum:__anon20
kWsyncCmd	./src/debugger/gui/TiaWidget.cxx	/^  kWsyncCmd = 'Swsy',$/;"	e	enum:__anon69	file:
kXFill	./src/gui/CheckListWidget.hxx	/^  kXFill,$/;"	e	enum:CheckStyle
kXRegAddr	./src/debugger/gui/CpuWidget.cxx	/^  kXRegAddr,$/;"	e	enum:__anon65	file:
kYRegAddr	./src/debugger/gui/CpuWidget.cxx	/^  kYRegAddr$/;"	e	enum:__anon65	file:
kbdAlt	./src/emucore/EventHandler.hxx	/^    inline bool kbdAlt(int mod)$/;"	f	class:EventHandler
kbdControl	./src/emucore/EventHandler.hxx	/^    inline bool kbdControl(int mod)$/;"	f	class:EventHandler
kbdShift	./src/emucore/EventHandler.hxx	/^    inline bool kbdShift(int mod)$/;"	f	class:EventHandler
key	./src/emucore/EventHandler.hxx	/^      char* key;$/;"	m	struct:EventHandler::ActionList
key	./src/emucore/Settings.hxx	/^      string key;$/;"	m	struct:Settings::Setting
keyAtIndex	./src/emucore/EventHandler.cxx	/^string EventHandler::keyAtIndex(int idx, EventMode mode)$/;"	f	class:EventHandler
keycode	./src/gui/DialogContainer.hxx	/^      int keycode;$/;"	m	struct:DialogContainer::__anon38
killChar	./src/debugger/gui/PromptWidget.cxx	/^void PromptWidget::killChar(int direction)$/;"	f	class:PromptWidget
killChar	./src/gui/EditableWidget.cxx	/^bool EditableWidget::killChar(int direction)$/;"	f	class:EditableWidget
killLastWord	./src/debugger/gui/PromptWidget.cxx	/^void PromptWidget::killLastWord()$/;"	f	class:PromptWidget
killLastWord	./src/gui/EditableWidget.cxx	/^bool EditableWidget::killLastWord()$/;"	f	class:EditableWidget
killLine	./src/debugger/gui/PromptWidget.cxx	/^void PromptWidget::killLine(int direction)$/;"	f	class:PromptWidget
killLine	./src/gui/EditableWidget.cxx	/^bool EditableWidget::killLine(int direction)$/;"	f	class:EditableWidget
label	./src/debugger/Equate.hxx	/^  string label;$/;"	m	struct:Equate
labelToAddr	./src/debugger/EquateList.hxx	/^    typedef map<string, Equate> labelToAddr;$/;"	t	class:EquateList
lastAccessWasRead	./src/emucore/m6502/src/M6502.hxx	/^    bool lastAccessWasRead() const { return myLastAccessWasRead; }$/;"	f	class:M6502
lastExp	./src/yacc/y.tab.c	/^Expression* lastExp = 0;$/;"	v
lastPathComponent	./src/gp2x/FSNodeGP2X.cxx	/^static const char* lastPathComponent(const string& str)$/;"	f	file:
lastPathComponent	./src/unix/FSNodePOSIX.cxx	/^static const char* lastPathComponent(const string& str)$/;"	f	file:
lastPathComponent	./src/win32/FSNodeWin32.cxx	/^static const char* lastPathComponent(const string& str)$/;"	f	file:
lastPathComponent	./src/wince/FSNodeWinCE.cxx	/^static const char* lastPathComponent(const string& str)$/;"	f	file:
launcher	./src/emucore/OSystem.hxx	/^    inline Launcher& launcher(void) const { return *myLauncher; }$/;"	f	class:OSystem
launcherFont	./src/emucore/OSystem.hxx	/^    inline const GUI::Font& launcherFont() const { return *myLauncherFont; }$/;"	f	class:OSystem
leaveDebugMode	./src/emucore/EventHandler.cxx	/^void EventHandler::leaveDebugMode()$/;"	f	class:EventHandler
leaveMenuMode	./src/emucore/EventHandler.cxx	/^void EventHandler::leaveMenuMode()$/;"	f	class:EventHandler
left	./src/emucore/PropsSet.hxx	/^      TreeNode* left;$/;"	m	struct:PropertiesSet::TreeNode
left	./src/gui/Rect.hxx	/^  int top, left;        \/\/!< The point at the top left of the rectangle (part of the rect).$/;"	m	struct:GUI::Rect
legacygapi	./src/wince/FrameBufferWinCE.hxx	/^	bool issmartphone, islandscape, issquare, legacygapi, screenlocked;$/;"	m	class:FrameBufferWinCE
lineDim	./src/wince/FrameBufferWinCE.hxx	/^    virtual uInt32 lineDim() { return 1; };$/;"	f	class:FrameBufferWinCE
linear	./src/emucore/rsynth/holmes.c	/^linear(float a, float b, long t, long d)$/;"	f
linestep	./src/wince/FrameBufferWinCE.hxx	/^	Int32 pixelstep, pixelstepdouble, linestep, linestepdouble, scrpixelstep, scrlinestep;$/;"	m	class:FrameBufferWinCE
linestepdouble	./src/wince/FrameBufferWinCE.hxx	/^	Int32 pixelstep, pixelstepdouble, linestep, linestepdouble, scrpixelstep, scrlinestep;$/;"	m	class:FrameBufferWinCE
list	./src/cheat/CheatManager.hxx	/^    const CheatList& list() { return myCheatList; }$/;"	f	class:CheatManager
listDir	./src/emucore/FSNode.hxx	/^    virtual FSList listDir(ListMode mode = kListDirectoriesOnly) const$/;"	f	class:FilesystemNode
listDir	./src/gp2x/FSNodeGP2X.cxx	/^FSList POSIXFilesystemNode::listDir(ListMode mode) const$/;"	f	class:POSIXFilesystemNode
listDir	./src/unix/FSNodePOSIX.cxx	/^FSList POSIXFilesystemNode::listDir(ListMode mode) const$/;"	f	class:POSIXFilesystemNode
listDir	./src/win32/FSNodeWin32.cxx	/^FSList WindowsFilesystemNode::listDir(ListMode mode) const$/;"	f	class:WindowsFilesystemNode
listDir	./src/wince/FSNodeWinCE.cxx	/^FSList WindowsFilesystemNode::listDir(ListMode mode) const$/;"	f	class:WindowsFilesystemNode
load	./src/common/SoundNull.cxx	/^bool SoundNull::load(Deserializer& in)$/;"	f	class:SoundNull
load	./src/common/SoundSDL.cxx	/^bool SoundSDL::load(Deserializer& in)$/;"	f	class:SoundSDL
load	./src/emucore/Cart0840.cxx	/^bool Cartridge0840::load(Deserializer& in)$/;"	f	class:Cartridge0840
load	./src/emucore/Cart2K.cxx	/^bool Cartridge2K::load(Deserializer& in)$/;"	f	class:Cartridge2K
load	./src/emucore/Cart3E.cxx	/^bool Cartridge3E::load(Deserializer& in)$/;"	f	class:Cartridge3E
load	./src/emucore/Cart3F.cxx	/^bool Cartridge3F::load(Deserializer& in)$/;"	f	class:Cartridge3F
load	./src/emucore/Cart4A50.cxx	/^bool Cartridge4A50::load(Deserializer& in)$/;"	f	class:Cartridge4A50
load	./src/emucore/Cart4K.cxx	/^bool Cartridge4K::load(Deserializer& in)$/;"	f	class:Cartridge4K
load	./src/emucore/CartAR.cxx	/^bool CartridgeAR::load(Deserializer& in)$/;"	f	class:CartridgeAR
load	./src/emucore/CartCV.cxx	/^bool CartridgeCV::load(Deserializer& in)$/;"	f	class:CartridgeCV
load	./src/emucore/CartDPC.cxx	/^bool CartridgeDPC::load(Deserializer& in)$/;"	f	class:CartridgeDPC
load	./src/emucore/CartE0.cxx	/^bool CartridgeE0::load(Deserializer& in)$/;"	f	class:CartridgeE0
load	./src/emucore/CartE7.cxx	/^bool CartridgeE7::load(Deserializer& in)$/;"	f	class:CartridgeE7
load	./src/emucore/CartF4.cxx	/^bool CartridgeF4::load(Deserializer& in)$/;"	f	class:CartridgeF4
load	./src/emucore/CartF4SC.cxx	/^bool CartridgeF4SC::load(Deserializer& in)$/;"	f	class:CartridgeF4SC
load	./src/emucore/CartF6.cxx	/^bool CartridgeF6::load(Deserializer& in)$/;"	f	class:CartridgeF6
load	./src/emucore/CartF6SC.cxx	/^bool CartridgeF6SC::load(Deserializer& in)$/;"	f	class:CartridgeF6SC
load	./src/emucore/CartF8.cxx	/^bool CartridgeF8::load(Deserializer& in)$/;"	f	class:CartridgeF8
load	./src/emucore/CartF8SC.cxx	/^bool CartridgeF8SC::load(Deserializer& in)$/;"	f	class:CartridgeF8SC
load	./src/emucore/CartFASC.cxx	/^bool CartridgeFASC::load(Deserializer& in)$/;"	f	class:CartridgeFASC
load	./src/emucore/CartFE.cxx	/^bool CartridgeFE::load(Deserializer& in)$/;"	f	class:CartridgeFE
load	./src/emucore/CartMB.cxx	/^bool CartridgeMB::load(Deserializer& in)$/;"	f	class:CartridgeMB
load	./src/emucore/CartMC.cxx	/^bool CartridgeMC::load(Deserializer& in)$/;"	f	class:CartridgeMC
load	./src/emucore/CartSB.cxx	/^bool CartridgeSB::load(Deserializer& in)$/;"	f	class:CartridgeSB
load	./src/emucore/CartUA.cxx	/^bool CartridgeUA::load(Deserializer& in)$/;"	f	class:CartridgeUA
load	./src/emucore/CartX07.cxx	/^bool CartridgeX07::load(Deserializer& in)$/;"	f	class:CartridgeX07
load	./src/emucore/Console.cxx	/^bool Console::load(Deserializer& in)$/;"	f	class:Console
load	./src/emucore/Control.cxx	/^bool Controller::load(Deserializer& in)$/;"	f	class:Controller
load	./src/emucore/M6532.cxx	/^bool M6532::load(Deserializer& in)$/;"	f	class:M6532
load	./src/emucore/Props.cxx	/^void Properties::load(istream& in)$/;"	f	class:Properties
load	./src/emucore/PropsSet.cxx	/^void PropertiesSet::load(const string& filename, bool save)$/;"	f	class:PropertiesSet
load	./src/emucore/Switches.cxx	/^bool Switches::load(Deserializer& in)$/;"	f	class:Switches
load	./src/emucore/TIA.cxx	/^bool TIA::load(Deserializer& in)$/;"	f	class:TIA
load	./src/emucore/m6502/src/M6502Hi.cxx	/^bool M6502High::load(Deserializer& in)$/;"	f	class:M6502High
load	./src/emucore/m6502/src/M6502Low.cxx	/^bool M6502Low::load(Deserializer& in)$/;"	f	class:M6502Low
load	./src/emucore/m6502/src/NullDev.cxx	/^bool NullDevice::load(Deserializer& in)$/;"	f	class:NullDevice
load	./src/emucore/m6502/src/System.cxx	/^bool System::load(Deserializer& in)$/;"	f	class:System
load	./src/wince/SoundWinCE.cxx	/^bool SoundWinCE::load(Deserializer& in)$/;"	f	class:SoundWinCE
loadCheatDatabase	./src/cheat/CheatManager.cxx	/^void CheatManager::loadCheatDatabase()$/;"	f	class:CheatManager
loadCheats	./src/cheat/CheatManager.cxx	/^void CheatManager::loadCheats(const string& md5sum)$/;"	f	class:CheatManager
loadCommandLine	./src/emucore/Settings.cxx	/^string Settings::loadCommandLine(int argc, char** argv)$/;"	f	class:Settings
loadConfig	./src/cheat/CheatCodeDialog.cxx	/^void CheatCodeDialog::loadConfig()$/;"	f	class:CheatCodeDialog
loadConfig	./src/debugger/gui/AudioWidget.cxx	/^void AudioWidget::loadConfig()$/;"	f	class:AudioWidget
loadConfig	./src/debugger/gui/CpuWidget.cxx	/^void CpuWidget::loadConfig()$/;"	f	class:CpuWidget
loadConfig	./src/debugger/gui/DebuggerDialog.cxx	/^void DebuggerDialog::loadConfig()$/;"	f	class:DebuggerDialog
loadConfig	./src/debugger/gui/PromptWidget.cxx	/^void PromptWidget::loadConfig()$/;"	f	class:PromptWidget
loadConfig	./src/debugger/gui/RamWidget.cxx	/^void RamWidget::loadConfig()$/;"	f	class:RamWidget
loadConfig	./src/debugger/gui/RomWidget.cxx	/^void RomWidget::loadConfig()$/;"	f	class:RomWidget
loadConfig	./src/debugger/gui/TiaInfoWidget.cxx	/^void TiaInfoWidget::loadConfig()$/;"	f	class:TiaInfoWidget
loadConfig	./src/debugger/gui/TiaOutputWidget.cxx	/^void TiaOutputWidget::loadConfig()$/;"	f	class:TiaOutputWidget
loadConfig	./src/debugger/gui/TiaWidget.cxx	/^void TiaWidget::loadConfig()$/;"	f	class:TiaWidget
loadConfig	./src/debugger/gui/TiaZoomWidget.cxx	/^void TiaZoomWidget::loadConfig()$/;"	f	class:TiaZoomWidget
loadConfig	./src/emucore/Settings.cxx	/^void Settings::loadConfig()$/;"	f	class:Settings
loadConfig	./src/gui/AboutDialog.hxx	/^    void loadConfig() { displayInfo(); }$/;"	f	class:AboutDialog
loadConfig	./src/gui/AudioDialog.cxx	/^void AudioDialog::loadConfig()$/;"	f	class:AudioDialog
loadConfig	./src/gui/Dialog.hxx	/^    virtual void loadConfig() {}$/;"	f	class:Dialog
loadConfig	./src/gui/EventMappingWidget.cxx	/^void EventMappingWidget::loadConfig()$/;"	f	class:EventMappingWidget
loadConfig	./src/gui/FileSnapDialog.cxx	/^void FileSnapDialog::loadConfig()$/;"	f	class:FileSnapDialog
loadConfig	./src/gui/GameInfoDialog.cxx	/^void GameInfoDialog::loadConfig()$/;"	f	class:GameInfoDialog
loadConfig	./src/gui/HelpDialog.hxx	/^    void loadConfig() { displayInfo(); }$/;"	f	class:HelpDialog
loadConfig	./src/gui/InputDialog.cxx	/^void InputDialog::loadConfig()$/;"	f	class:InputDialog
loadConfig	./src/gui/LauncherDialog.cxx	/^void LauncherDialog::loadConfig()$/;"	f	class:LauncherDialog
loadConfig	./src/gui/OptionsDialog.cxx	/^void OptionsDialog::loadConfig()$/;"	f	class:OptionsDialog
loadConfig	./src/gui/RomAuditDialog.cxx	/^void RomAuditDialog::loadConfig()$/;"	f	class:RomAuditDialog
loadConfig	./src/gui/RomInfoWidget.cxx	/^void RomInfoWidget::loadConfig()$/;"	f	class:RomInfoWidget
loadConfig	./src/gui/TabWidget.cxx	/^void TabWidget::loadConfig()$/;"	f	class:TabWidget
loadConfig	./src/gui/UIDialog.cxx	/^void UIDialog::loadConfig()$/;"	f	class:UIDialog
loadConfig	./src/gui/VideoDialog.cxx	/^void VideoDialog::loadConfig()$/;"	f	class:VideoDialog
loadConfig	./src/gui/Widget.hxx	/^    virtual void loadConfig() {}$/;"	f	class:Widget
loadConfig	./src/macosx/SettingsMACOSX.cxx	/^void SettingsMACOSX::loadConfig()$/;"	f	class:SettingsMACOSX
loadDirListing	./src/gui/LauncherDialog.cxx	/^void LauncherDialog::loadDirListing()$/;"	f	class:LauncherDialog
loadFile	./src/debugger/EquateList.cxx	/^string EquateList::loadFile(const string& file)$/;"	f	class:EquateList
loadFuncs	./src/common/FrameBufferGL.cxx	/^bool FrameBufferGL::loadFuncs()$/;"	f	class:FrameBufferGL
loadIntoRAM	./src/emucore/CartAR.cxx	/^void CartridgeAR::loadIntoRAM(uInt8 load)$/;"	f	class:CartridgeAR
loadLibrary	./src/common/FrameBufferGL.cxx	/^bool FrameBufferGL::loadLibrary(const string& library)$/;"	f	class:FrameBufferGL
loadListFile	./src/debugger/Debugger.cxx	/^string Debugger::loadListFile(string f)$/;"	f	class:Debugger
loadRomInfo	./src/gui/LauncherDialog.cxx	/^void LauncherDialog::loadRomInfo()$/;"	f	class:LauncherDialog
loadState	./src/debugger/Debugger.cxx	/^void Debugger::loadState(int state)$/;"	f	class:Debugger
loadState	./src/emucore/StateManager.cxx	/^void StateManager::loadState(int slot)$/;"	f	class:StateManager
loadUserPalette	./src/emucore/Console.cxx	/^void Console::loadUserPalette()$/;"	f	class:Console
loadView	./src/gui/GameInfoDialog.cxx	/^void GameInfoDialog::loadView()$/;"	f	class:GameInfoDialog
local	./src/emucore/unzip.c	27;"	d	file:
lock	./src/emucore/SpeakJet.hxx	/^    SDL_sem *lock;$/;"	m	struct:SpeechBuffer
lockBank	./src/emucore/Cart.hxx	/^    void lockBank()   { bankLocked = true;  }$/;"	f	class:Cartridge
lockDataBus	./src/emucore/m6502/src/System.cxx	/^void System::lockDataBus()$/;"	f	class:System
lockState	./src/debugger/Debugger.cxx	/^void Debugger::lockState()$/;"	f	class:Debugger
lostFocus	./src/gui/Widget.cxx	/^void Widget::lostFocus()$/;"	f	class:Widget
lostFocusWidget	./src/debugger/gui/DataGridWidget.cxx	/^void DataGridWidget::lostFocusWidget()$/;"	f	class:DataGridWidget
lostFocusWidget	./src/gui/EditTextWidget.cxx	/^void EditTextWidget::lostFocusWidget()$/;"	f	class:EditTextWidget
lostFocusWidget	./src/gui/ListWidget.cxx	/^void ListWidget::lostFocusWidget()$/;"	f	class:ListWidget
lostFocusWidget	./src/gui/Widget.hxx	/^    virtual void lostFocusWidget() {}$/;"	f	class:Widget
lowpass_ptr	./src/emucore/rsynth/opsynth.c	/^} lowpass_t, *lowpass_ptr;$/;"	t	typeref:struct:__anon9	file:
lowpass_t	./src/emucore/rsynth/opsynth.c	/^} lowpass_t, *lowpass_ptr;$/;"	t	typeref:struct:__anon9	file:
lshiftCell	./src/debugger/gui/DataGridWidget.cxx	/^void DataGridWidget::lshiftCell()$/;"	f	class:DataGridWidget
m6502	./src/debugger/CpuDebug.hxx	/^    M6502 &m6502() { return mySystem->m6502(); }$/;"	f	class:CpuDebug
m6502	./src/emucore/m6502/src/System.hxx	/^    M6502& m6502()$/;"	f	class:System
m6532	./src/emucore/m6502/src/System.hxx	/^    M6532& m6532()$/;"	f	class:System
macOSXSendMenuEvent	./src/macosx/OSystemMACOSX.cxx	/^void macOSXSendMenuEvent(int event)$/;"	f
macOpenConsole	./src/macosx/OSystemMACOSX.cxx	/^void macOpenConsole(char *romname)$/;"	f
main	./src/emucore/misc/romtohex.cxx	/^main()$/;"	f
main	./src/tools/check-sig.cxx	/^int main(int ac, char* av[])$/;"	f
main	./src/win32/SDL_win32_main.c	33;"	d	file:
main	./src/yacc/calctest.c	/^int main(int argc, char **argv) {$/;"	f
mainLoop	./src/emucore/OSystem.cxx	/^void OSystem::mainLoop()$/;"	f	class:OSystem
mainLoop	./src/wince/OSystemWinCE.cxx	/^void OSystemWinCE::mainLoop()$/;"	f	class:OSystemWinCE
makeDir	./src/gp2x/FSNodeGP2X.cxx	/^bool AbstractFilesystemNode::makeDir(const string& path)$/;"	f	class:AbstractFilesystemNode
makeDir	./src/unix/FSNodePOSIX.cxx	/^bool AbstractFilesystemNode::makeDir(const string& path)$/;"	f	class:AbstractFilesystemNode
makeDir	./src/win32/FSNodeWin32.cxx	/^bool AbstractFilesystemNode::makeDir(const string& path)$/;"	f	class:AbstractFilesystemNode
makeDir	./src/wince/FSNodeWinCE.cxx	/^bool AbstractFilesystemNode::makeDir(const string& path)$/;"	f	class:AbstractFilesystemNode
mapRGB	./src/common/FrameBufferGL.hxx	/^    Uint32 mapRGB(Uint8 r, Uint8 g, Uint8 b) const$/;"	f	class:FrameBufferGL
mapRGB	./src/common/FrameBufferSoft.hxx	/^    Uint32 mapRGB(Uint8 r, Uint8 g, Uint8 b) const$/;"	f	class:FrameBufferSoft
mapRGB	./src/gp2x/FrameBufferGP2X.hxx	/^    virtual Uint32 mapRGB(Uint8 r, Uint8 g, Uint8 b) const$/;"	f	class:FrameBufferGP2X
mapRGB	./src/wince/FrameBufferWinCE.hxx	/^    virtual Uint32 mapRGB(Uint8 r, Uint8 g, Uint8 b) { return 0xFFFFFFFF; };$/;"	f	class:FrameBufferWinCE
mapStelladaptors	./src/emucore/EventHandler.cxx	/^void EventHandler::mapStelladaptors(const string& sa1, const string& sa2)$/;"	f	class:EventHandler
matchingCharsIgnoringCase	./src/gui/ListWidget.cxx	/^static bool matchingCharsIgnoringCase(string s, string pattern)$/;"	f	file:
maxWindowSizeForScreen	./src/emucore/FrameBuffer.cxx	/^uInt32 FrameBuffer::maxWindowSizeForScreen(uInt32 screenWidth, uInt32 screenHeight)$/;"	f	class:FrameBuffer
maximumResistance	./src/emucore/Control.cxx	/^const Int32 Controller::maximumResistance = 0x7FFFFFFF;$/;"	m	class:Controller	file:
maximumResistance	./src/emucore/Control.hxx	/^    static const Int32 maximumResistance;$/;"	m	class:Controller
maxwidth	./src/gui/Font.hxx	/^  int           maxwidth;    \/* max width in pixels *\/$/;"	m	struct:__anon35
md5	./src/gui/GameList.hxx	/^    inline const string& md5(int i)$/;"	f	class:GameList
mediaSource	./src/emucore/Console.hxx	/^    MediaSource& mediaSource() const { return *myMediaSource; }$/;"	f	class:Console
menu	./src/emucore/OSystem.hxx	/^    inline Menu& menu(void) const { return *myMenu; }$/;"	f	class:OSystem
message	./src/debugger/gui/DebuggerDialog.hxx	/^    EditTextWidget* message()    { return myMessageBox; }$/;"	f	class:DebuggerDialog
message	./src/emucore/m6502/src/M6502.hxx	/^      string message;$/;"	m	struct:M6502::HitTrapInfo
minimumResistance	./src/emucore/Control.cxx	/^const Int32 Controller::minimumResistance = 0x00000000;$/;"	m	class:Controller	file:
minimumResistance	./src/emucore/Control.hxx	/^    static const Int32 minimumResistance;$/;"	m	class:Controller
minydim	./src/wince/FrameBufferWinCE.hxx	/^	uInt16 minydim, optgreenmaskN, optgreenmask;$/;"	m	class:FrameBufferWinCE
more	./src/emucore/rsynth/trie.c	/^    struct trie_s *more;$/;"	m	struct:trie_s	typeref:struct:trie_s::trie_s	file:
moveDown	./src/debugger/gui/ContextMenu.cxx	/^void ContextMenu::moveDown()$/;"	f	class:ContextMenu
moveDown	./src/gui/PopUpWidget.cxx	/^void PopUpDialog::moveDown()$/;"	f	class:PopUpDialog
moveTo	./src/gui/Rect.hxx	/^	void moveTo(const Point & p) {$/;"	f	struct:GUI::Rect
moveTo	./src/gui/Rect.hxx	/^	void moveTo(int x, int y) {$/;"	f	struct:GUI::Rect
moveUp	./src/debugger/gui/ContextMenu.cxx	/^void ContextMenu::moveUp()$/;"	f	class:ContextMenu
moveUp	./src/gui/PopUpWidget.cxx	/^void PopUpDialog::moveUp()$/;"	f	class:PopUpDialog
moveWord	./src/gui/EditableWidget.cxx	/^bool EditableWidget::moveWord(int direction)$/;"	f	class:EditableWidget
mute	./src/common/SoundNull.hxx	/^    void mute(bool state) { }$/;"	f	class:SoundNull
mute	./src/common/SoundSDL.cxx	/^void SoundSDL::mute(bool state)$/;"	f	class:SoundSDL
mute	./src/wince/SoundWinCE.cxx	/^void SoundWinCE::mute(bool state)$/;"	f	class:SoundWinCE
my6502	./src/emucore/CartAR.hxx	/^    M6502High* my6502;$/;"	m	class:CartridgeAR
myAUDC	./src/emucore/TIASnd.hxx	/^    uInt8 myAUDC[2];$/;"	m	class:TIASound
myAUDC0	./src/emucore/TIA.hxx	/^    uInt8 myAUDC0;$/;"	m	class:TIA
myAUDC1	./src/emucore/TIA.hxx	/^    uInt8 myAUDC1;$/;"	m	class:TIA
myAUDF	./src/emucore/TIASnd.hxx	/^    uInt8 myAUDF[2];$/;"	m	class:TIASound
myAUDF0	./src/emucore/TIA.hxx	/^    uInt8 myAUDF0;$/;"	m	class:TIA
myAUDF1	./src/emucore/TIA.hxx	/^    uInt8 myAUDF1;$/;"	m	class:TIA
myAUDV	./src/emucore/TIASnd.hxx	/^    uInt8 myAUDV[2];$/;"	m	class:TIASound
myAUDV0	./src/emucore/TIA.hxx	/^    uInt8 myAUDV0;$/;"	m	class:TIA
myAUDV1	./src/emucore/TIA.hxx	/^    uInt8 myAUDV1;$/;"	m	class:TIA
myAboutButton	./src/gui/OptionsDialog.hxx	/^    ButtonWidget* myAboutButton;$/;"	m	class:OptionsDialog
myAboutDialog	./src/gui/OptionsDialog.hxx	/^    AboutDialog*     myAboutDialog;$/;"	m	class:OptionsDialog
myAboutString	./src/emucore/Cart.cxx	/^string Cartridge::myAboutString;$/;"	m	class:Cartridge	file:
myAboutString	./src/emucore/Cart.hxx	/^    static string myAboutString;$/;"	m	class:Cartridge
myAboutString	./src/emucore/Console.hxx	/^    string myAboutString;$/;"	m	class:Console
myActionSelected	./src/gui/EventMappingWidget.hxx	/^    int myActionSelected;$/;"	m	class:EventMappingWidget
myActionsList	./src/gui/EventMappingWidget.hxx	/^    StringListWidget* myActionsList;$/;"	m	class:EventMappingWidget
myActiveEvents	./src/gp2x/OSystemGP2X.hxx	/^    bool   myActiveEvents[8];$/;"	m	class:OSystemGP2X
myActiveMode	./src/emucore/StateManager.hxx	/^    Mode myActiveMode;$/;"	m	class:StateManager
myAddrList	./src/debugger/gui/RomWidget.hxx	/^    IntArray myAddrList;$/;"	m	class:RomWidget
myAddressMask	./src/emucore/m6502/src/System.hxx	/^    const uInt16 myAddressMask;$/;"	m	class:System
myAllowAllDirectionsFlag	./src/emucore/EventHandler.hxx	/^    bool myAllowAllDirectionsFlag;$/;"	m	class:EventHandler
myAllowHMOVEBlanks	./src/emucore/TIA.hxx	/^    bool myAllowHMOVEBlanks;$/;"	m	class:TIA
myAnalogPinValue	./src/emucore/Control.hxx	/^    Int32 myAnalogPinValue[2];$/;"	m	class:Controller
myArray	./src/gui/GameList.hxx	/^    vector<Entry> myArray;$/;"	m	class:GameList
myArrowsY	./src/gui/PopUpWidget.hxx	/^    int myArrowsY;$/;"	m	class:PopUpWidget
myAspectRatioLabel	./src/gui/VideoDialog.hxx	/^    StaticTextWidget* myAspectRatioLabel;$/;"	m	class:VideoDialog
myAspectRatioSlider	./src/gui/VideoDialog.hxx	/^    SliderWidget*     myAspectRatioSlider;$/;"	m	class:VideoDialog
myAudC	./src/debugger/gui/AudioWidget.hxx	/^    DataGridWidget* myAudC;$/;"	m	class:AudioWidget
myAudF	./src/debugger/gui/AudioWidget.hxx	/^    DataGridWidget* myAudF;$/;"	m	class:AudioWidget
myAudV	./src/debugger/gui/AudioWidget.hxx	/^    DataGridWidget* myAudV;$/;"	m	class:AudioWidget
myAudioDialog	./src/gui/OptionsDialog.hxx	/^    AudioDialog*     myAudioDialog;$/;"	m	class:OptionsDialog
myAudioSettingsButton	./src/gui/OptionsDialog.hxx	/^    ButtonWidget* myAudioSettingsButton;$/;"	m	class:OptionsDialog
myAvgPalette	./src/emucore/FrameBuffer.hxx	/^    Uint32 myAvgPalette[256][256];$/;"	m	class:FrameBuffer
myAxisRepeatTime	./src/gui/DialogContainer.hxx	/^    int myAxisRepeatTime;$/;"	m	class:DialogContainer
myBLBit	./src/emucore/TIA.hxx	/^      myBLBit = 0x10,         \/\/ Bit for Ball$/;"	e	enum:TIA::__anon6
myBank	./src/debugger/gui/RomWidget.hxx	/^    DataGridWidget*  myBank;$/;"	m	class:RomWidget
myBankCount	./src/debugger/gui/RomWidget.hxx	/^    EditTextWidget*  myBankCount;$/;"	m	class:RomWidget
myBaseDialog	./src/gui/DialogContainer.hxx	/^    Dialog*  myBaseDialog;$/;"	m	class:DialogContainer
myBaseDim	./src/emucore/FrameBuffer.hxx	/^    SDL_Rect myBaseDim;$/;"	m	class:FrameBuffer
myBaseDir	./src/emucore/OSystem.hxx	/^    string myBaseDir;$/;"	m	class:OSystem
myBaseHeight	./src/gui/Surface.hxx	/^    int myBaseHeight;$/;"	m	class:GUI::Surface
myBaseOffset	./src/common/FrameBufferSoft.hxx	/^    int myBaseOffset;$/;"	m	class:FrameBufferSoft
myBasePtr	./src/gp2x/FrameBufferGP2X.hxx	/^    uInt16* myBasePtr;$/;"	m	class:FrameBufferGP2X
myBaseWidth	./src/gui/Surface.hxx	/^    int myBaseWidth;$/;"	m	class:GUI::Surface
myBinValue	./src/debugger/gui/RamWidget.hxx	/^    EditTextWidget* myBinValue;$/;"	m	class:RamWidget
myBinValue	./src/debugger/gui/TiaWidget.hxx	/^    EditTextWidget* myBinValue;$/;"	m	class:TiaWidget
myBitEnabled	./src/emucore/TIA.hxx	/^    bool myBitEnabled[6];$/;"	m	class:TIA
myBoosterEvent	./src/emucore/Booster.hxx	/^                myFireEvent, myBoosterEvent, myTriggerEvent,$/;"	m	class:BoosterGrip
myBottoms	./src/emucore/CartDPC.hxx	/^    uInt8 myBottoms[8];$/;"	m	class:CartridgeDPC
myBreakCondNames	./src/emucore/m6502/src/M6502.hxx	/^    StringList myBreakCondNames;$/;"	m	class:M6502
myBreakConds	./src/emucore/m6502/src/M6502.hxx	/^    ExpressionList myBreakConds;$/;"	m	class:M6502
myBreakPoints	./src/debugger/Debugger.hxx	/^    PackedBitArray* myBreakPoints;$/;"	m	class:Debugger
myBreakPoints	./src/emucore/m6502/src/M6502.hxx	/^    PackedBitArray* myBreakPoints;$/;"	m	class:M6502
myBrowser	./src/gui/FileSnapDialog.hxx	/^    BrowserDialog* myBrowser;$/;"	m	class:FileSnapDialog
myBrowser	./src/gui/RomAuditDialog.hxx	/^    BrowserDialog* myBrowser;$/;"	m	class:RomAuditDialog
myBuffer	./src/common/FrameBufferGL.hxx	/^    glBufferType myBuffer;$/;"	m	class:FrameBufferGL
myBuffer	./src/common/SoundSDL.hxx	/^        RegWrite* myBuffer;$/;"	m	class:SoundSDL::RegWriteQueue
myBuffer	./src/wince/SoundWinCE.hxx	/^        RegWrite* myBuffer;$/;"	m	class:SoundWinCE::RegWriteQueue
myBuffers	./src/wince/SoundWinCE.hxx	/^	WAVEHDR *myBuffers;$/;"	m	class:SoundWinCE
myBuffnum	./src/wince/SoundWinCE.hxx	/^	int myLatency, myMixRate, myBuffnum;$/;"	m	class:SoundWinCE
myButtonRepeatTime	./src/gui/DialogContainer.hxx	/^    int myButtonRepeatTime;$/;"	m	class:DialogContainer
myBytesPerPixel	./src/common/FrameBufferSoft.hxx	/^    int myBytesPerPixel;$/;"	m	class:FrameBufferSoft
myBytesWidth	./src/debugger/gui/RomListWidget.hxx	/^    int myBytesWidth;$/;"	m	class:RomListWidget
myCCWEvent	./src/emucore/Driving.hxx	/^    Event::Type myCWEvent, myCCWEvent, myFireEvent, myXAxisValue, myYAxisValue;$/;"	m	class:Driving
myCOLUBK	./src/emucore/TIA.hxx	/^    uInt32& myCOLUBK;       \/\/ Background color register (replicated 4 times)$/;"	m	class:TIA
myCOLUBKColor	./src/debugger/gui/TiaWidget.hxx	/^    ColorWidget* myCOLUBKColor;$/;"	m	class:TiaWidget
myCOLUP0	./src/emucore/TIA.hxx	/^    uInt32& myCOLUP0;       \/\/ Player 0 color register (replicated 4 times)$/;"	m	class:TIA
myCOLUP0Color	./src/debugger/gui/TiaWidget.hxx	/^    ColorWidget* myCOLUP0Color;$/;"	m	class:TiaWidget
myCOLUP1	./src/emucore/TIA.hxx	/^    uInt32& myCOLUP1;       \/\/ Player 1 color register (replicated 4 times)$/;"	m	class:TIA
myCOLUP1Color	./src/debugger/gui/TiaWidget.hxx	/^    ColorWidget* myCOLUP1Color;$/;"	m	class:TiaWidget
myCOLUPF	./src/emucore/TIA.hxx	/^    uInt32& myCOLUPF;       \/\/ Playfield color register (replicated 4 times)$/;"	m	class:TIA
myCOLUPFColor	./src/debugger/gui/TiaWidget.hxx	/^    ColorWidget* myCOLUPFColor;$/;"	m	class:TiaWidget
myCTRLPF	./src/emucore/TIA.hxx	/^    uInt8 myCTRLPF;       \/\/ Playfield control register$/;"	m	class:TIA
myCWEvent	./src/emucore/Driving.hxx	/^    Event::Type myCWEvent, myCCWEvent, myFireEvent, myXAxisValue, myYAxisValue;$/;"	m	class:Driving
myCancelButton	./src/cheat/CheatCodeDialog.hxx	/^    ButtonWidget* myCancelButton;$/;"	m	class:CheatCodeDialog
myCancelButton	./src/gui/GameInfoDialog.hxx	/^    ButtonWidget* myCancelButton;$/;"	m	class:GameInfoDialog
myCancelMapButton	./src/gui/EventMappingWidget.hxx	/^    ButtonWidget*     myCancelMapButton;$/;"	m	class:EventMappingWidget
myCapacity	./src/common/SoundSDL.hxx	/^        uInt32 myCapacity;$/;"	m	class:SoundSDL::RegWriteQueue
myCapacity	./src/wince/SoundWinCE.hxx	/^        uInt32 myCapacity;$/;"	m	class:SoundWinCE::RegWriteQueue
myCart	./src/emucore/Console.hxx	/^    Cartridge *myCart;$/;"	m	class:Console
myCenterCheckbox	./src/gui/VideoDialog.hxx	/^    CheckboxWidget*   myCenterCheckbox;$/;"	m	class:VideoDialog
myChannels	./src/emucore/TIASnd.hxx	/^    uInt32 myChannels;$/;"	m	class:TIASound
myCharge	./src/emucore/Paddles.hxx	/^    int myCharge[2];$/;"	m	class:Paddles
myCheatCodeButton	./src/gui/OptionsDialog.hxx	/^    ButtonWidget* myCheatCodeButton;$/;"	m	class:OptionsDialog
myCheatCodeDialog	./src/gui/OptionsDialog.hxx	/^    CheatCodeDialog* myCheatCodeDialog;$/;"	m	class:OptionsDialog
myCheatFile	./src/cheat/CheatManager.hxx	/^    string myCheatFile;$/;"	m	class:CheatManager
myCheatFile	./src/emucore/OSystem.hxx	/^    string myCheatFile;$/;"	m	class:OSystem
myCheatFile	./src/gui/FileSnapDialog.hxx	/^    EditTextWidget* myCheatFile;$/;"	m	class:FileSnapDialog
myCheatInput	./src/cheat/CheatCodeDialog.hxx	/^    InputTextDialog* myCheatInput;$/;"	m	class:CheatCodeDialog
myCheatList	./src/cheat/CheatCodeDialog.hxx	/^    CheckListWidget* myCheatList;$/;"	m	class:CheatCodeDialog
myCheatList	./src/cheat/CheatManager.hxx	/^    CheatList myCheatList;$/;"	m	class:CheatManager
myCheatManager	./src/emucore/OSystem.hxx	/^    CheatManager* myCheatManager;$/;"	m	class:OSystem
myCheatMap	./src/cheat/CheatManager.hxx	/^    CheatCodeMap myCheatMap;$/;"	m	class:CheatManager
myClickRepeatTime	./src/gui/DialogContainer.hxx	/^    int myClickRepeatTime;$/;"	m	class:DialogContainer
myClickX	./src/debugger/gui/TiaOutputWidget.hxx	/^    int myClickX, myClickY;$/;"	m	class:TiaOutputWidget
myClickY	./src/debugger/gui/TiaOutputWidget.hxx	/^    int myClickX, myClickY;$/;"	m	class:TiaOutputWidget
myClipHeight	./src/gui/Surface.hxx	/^    int myClipHeight;$/;"	m	class:GUI::Surface
myClipVolumeCheckbox	./src/gui/AudioDialog.hxx	/^    CheckboxWidget*   myClipVolumeCheckbox;$/;"	m	class:AudioDialog
myClipWidth	./src/gui/Surface.hxx	/^    int myClipWidth;$/;"	m	class:GUI::Surface
myClockAtLastUpdate	./src/emucore/TIA.hxx	/^    Int32 myClockAtLastUpdate;$/;"	m	class:TIA
myClockStartDisplay	./src/emucore/TIA.hxx	/^    Int32 myClockStartDisplay;$/;"	m	class:TIA
myClockStopDisplay	./src/emucore/TIA.hxx	/^    Int32 myClockStopDisplay;$/;"	m	class:TIA
myClockWhenFrameStarted	./src/emucore/TIA.hxx	/^    Int32 myClockWhenFrameStarted;$/;"	m	class:TIA
myClocksToEndOfScanLine	./src/emucore/TIA.hxx	/^    Int32 myClocksToEndOfScanLine;$/;"	m	class:TIA
myCmd	./src/gui/InputTextDialog.hxx	/^    int	 myCmd;$/;"	m	class:InputTextDialog
myCode	./src/cheat/Cheat.hxx	/^    string myCode;$/;"	m	class:Cheat
myCollision	./src/debugger/gui/TiaWidget.hxx	/^    CheckboxWidget* myCollision[15];$/;"	m	class:TiaWidget
myCollision	./src/emucore/TIA.hxx	/^    uInt16 myCollision;    \/\/ Collision register$/;"	m	class:TIA
myColor	./src/emucore/TIA.hxx	/^    uInt32 myColor[4];$/;"	m	class:TIA
myColorClocks	./src/debugger/gui/TiaInfoWidget.hxx	/^    EditTextWidget* myColorClocks;$/;"	m	class:TiaInfoWidget
myColorLossCheckbox	./src/gui/VideoDialog.hxx	/^    CheckboxWidget*   myColorLossCheckbox;$/;"	m	class:VideoDialog
myColorLossEnabled	./src/emucore/TIA.hxx	/^    bool myColorLossEnabled;$/;"	m	class:TIA
myColorRegs	./src/debugger/gui/TiaWidget.hxx	/^    DataGridWidget* myColorRegs;$/;"	m	class:TiaWidget
myCommandMenu	./src/emucore/OSystem.hxx	/^    CommandMenu* myCommandMenu;$/;"	m	class:OSystem
myCompareButton	./src/debugger/gui/RamWidget.hxx	/^    ButtonWidget* myCompareButton;$/;"	m	class:RamWidget
myConfigFile	./src/emucore/OSystem.hxx	/^    string myConfigFile;$/;"	m	class:OSystem
myConsole	./src/debugger/Debugger.hxx	/^    Console* myConsole;$/;"	m	class:Debugger
myConsole	./src/emucore/M6532.hxx	/^    const Console& myConsole;$/;"	m	class:M6532
myConsole	./src/emucore/OSystem.hxx	/^    Console* myConsole;$/;"	m	class:OSystem
myConsole	./src/emucore/TIA.hxx	/^    const Console& myConsole;$/;"	m	class:TIA
myConsoleFont	./src/emucore/OSystem.hxx	/^    GUI::Font* myConsoleFont;$/;"	m	class:OSystem
myController	./src/emucore/EventHandler.hxx	/^    Controller::Type myController[2];$/;"	m	class:EventHandler
myControllers	./src/emucore/Console.hxx	/^    Controller* myControllers[2];$/;"	m	class:Console
myCounter	./src/emucore/Driving.hxx	/^    uInt32 myCounter;$/;"	m	class:Driving
myCounter	./src/emucore/TIASnd.hxx	/^        uInt32 myCounter;$/;"	m	class:TIASound::FreqDiv
myCounters	./src/emucore/CartDPC.hxx	/^    uInt16 myCounters[8];$/;"	m	class:CartridgeDPC
myCpu	./src/debugger/gui/DebuggerDialog.hxx	/^    CpuWidget*       myCpu;$/;"	m	class:DebuggerDialog
myCpuDebug	./src/debugger/Debugger.hxx	/^    CpuDebug* myCpuDebug;$/;"	m	class:Debugger
myCpuGrid	./src/debugger/gui/CpuWidget.hxx	/^    DataGridWidget*  myCpuGrid;$/;"	m	class:CpuWidget
myCurrentAxisDown	./src/gui/DialogContainer.hxx	/^    } myCurrentAxisDown;$/;"	m	class:DialogContainer	typeref:struct:DialogContainer::__anon41
myCurrentBLMask	./src/emucore/TIA.hxx	/^    uInt8* myCurrentBLMask;$/;"	m	class:TIA
myCurrentBank	./src/debugger/gui/RomWidget.hxx	/^    int  myCurrentBank;$/;"	m	class:RomWidget
myCurrentBank	./src/emucore/Cart0840.hxx	/^    uInt16 myCurrentBank;$/;"	m	class:Cartridge0840
myCurrentBank	./src/emucore/Cart3E.hxx	/^    uInt16 myCurrentBank;$/;"	m	class:Cartridge3E
myCurrentBank	./src/emucore/Cart3F.hxx	/^    uInt16 myCurrentBank;$/;"	m	class:Cartridge3F
myCurrentBank	./src/emucore/CartAR.hxx	/^    uInt16 myCurrentBank;$/;"	m	class:CartridgeAR
myCurrentBank	./src/emucore/CartDPC.hxx	/^    uInt16 myCurrentBank;$/;"	m	class:CartridgeDPC
myCurrentBank	./src/emucore/CartF4.hxx	/^    uInt16 myCurrentBank;$/;"	m	class:CartridgeF4
myCurrentBank	./src/emucore/CartF4SC.hxx	/^    uInt16 myCurrentBank;$/;"	m	class:CartridgeF4SC
myCurrentBank	./src/emucore/CartF6.hxx	/^    uInt16 myCurrentBank;$/;"	m	class:CartridgeF6
myCurrentBank	./src/emucore/CartF6SC.hxx	/^    uInt16 myCurrentBank;$/;"	m	class:CartridgeF6SC
myCurrentBank	./src/emucore/CartF8.hxx	/^    uInt16 myCurrentBank;$/;"	m	class:CartridgeF8
myCurrentBank	./src/emucore/CartF8SC.hxx	/^    uInt16 myCurrentBank;$/;"	m	class:CartridgeF8SC
myCurrentBank	./src/emucore/CartFASC.hxx	/^    uInt16 myCurrentBank;$/;"	m	class:CartridgeFASC
myCurrentBank	./src/emucore/CartMB.hxx	/^    uInt16 myCurrentBank;$/;"	m	class:CartridgeMB
myCurrentBank	./src/emucore/CartSB.hxx	/^    uInt16 myCurrentBank;$/;"	m	class:CartridgeSB
myCurrentBank	./src/emucore/CartUA.hxx	/^    uInt16 myCurrentBank;$/;"	m	class:CartridgeUA
myCurrentBank	./src/emucore/CartX07.hxx	/^    uInt16 myCurrentBank;$/;"	m	class:CartridgeX07
myCurrentBlock	./src/emucore/CartMC.hxx	/^    uInt8 myCurrentBlock[4];$/;"	m	class:CartridgeMC
myCurrentButtonDown	./src/gui/DialogContainer.hxx	/^    } myCurrentButtonDown;$/;"	m	class:DialogContainer	typeref:struct:DialogContainer::__anon40
myCurrentCheat	./src/cheat/CheatManager.hxx	/^    string myCurrentCheat;$/;"	m	class:CheatManager
myCurrentEvents	./src/gp2x/OSystemGP2X.hxx	/^    uInt8* myCurrentEvents;$/;"	m	class:OSystemGP2X
myCurrentFrameBuffer	./src/emucore/TIA.hxx	/^    uInt8* myCurrentFrameBuffer;$/;"	m	class:TIA
myCurrentGRP0	./src/emucore/TIA.hxx	/^    uInt8 myCurrentGRP0;$/;"	m	class:TIA
myCurrentGRP1	./src/emucore/TIA.hxx	/^    uInt8 myCurrentGRP1;$/;"	m	class:TIA
myCurrentHatDown	./src/gui/DialogContainer.hxx	/^    } myCurrentHatDown;$/;"	m	class:DialogContainer	typeref:struct:DialogContainer::__anon42
myCurrentKeyDown	./src/gui/DialogContainer.hxx	/^    } myCurrentKeyDown;$/;"	m	class:DialogContainer	typeref:struct:DialogContainer::__anon38
myCurrentM0Mask	./src/emucore/TIA.hxx	/^    uInt8* myCurrentM0Mask;$/;"	m	class:TIA
myCurrentM1Mask	./src/emucore/TIA.hxx	/^    uInt8* myCurrentM1Mask;$/;"	m	class:TIA
myCurrentModeList	./src/emucore/FrameBuffer.hxx	/^    VideoModeList* myCurrentModeList;$/;"	m	class:FrameBuffer
myCurrentMouseDown	./src/gui/DialogContainer.hxx	/^    } myCurrentMouseDown;$/;"	m	class:DialogContainer	typeref:struct:DialogContainer::__anon39
myCurrentNode	./src/gui/LauncherDialog.hxx	/^    FilesystemNode myCurrentNode;$/;"	m	class:LauncherDialog
myCurrentOutputBuffer	./src/emucore/SpeakJet.hxx	/^    SpeechBuffer *myCurrentOutputBuffer;$/;"	m	class:SpeakJet
myCurrentP0Mask	./src/emucore/TIA.hxx	/^    uInt8* myCurrentP0Mask;$/;"	m	class:TIA
myCurrentP1Mask	./src/emucore/TIA.hxx	/^    uInt8* myCurrentP1Mask;$/;"	m	class:TIA
myCurrentPFMask	./src/emucore/TIA.hxx	/^    uInt32* myCurrentPFMask;$/;"	m	class:TIA
myCurrentRAM	./src/emucore/CartE7.hxx	/^    uInt16 myCurrentRAM;$/;"	m	class:CartridgeE7
myCurrentScanline	./src/emucore/TIA.hxx	/^    Int32 myCurrentScanline;$/;"	m	class:TIA
myCurrentSlice	./src/emucore/CartE0.hxx	/^    uInt16 myCurrentSlice[4];$/;"	m	class:CartridgeE0
myCurrentSlice	./src/emucore/CartE7.hxx	/^    uInt16 myCurrentSlice[2];$/;"	m	class:CartridgeE7
myCurrentSlot	./src/emucore/StateManager.hxx	/^    int myCurrentSlot;$/;"	m	class:StateManager
myCurrentStep	./src/gui/ProgressDialog.hxx	/^    int myStart, myFinish, myStep, myCurrentStep;$/;"	m	class:ProgressDialog
myCycles	./src/emucore/m6502/src/System.hxx	/^    uInt32 myCycles;$/;"	m	class:System
myCyclesWhenInterruptReset	./src/emucore/M6532.hxx	/^    Int32 myCyclesWhenInterruptReset;$/;"	m	class:M6532
myCyclesWhenTimerSet	./src/emucore/M6532.hxx	/^    Int32 myCyclesWhenTimerSet;$/;"	m	class:M6532
myDDRA	./src/emucore/M6532.hxx	/^    uInt8 myDDRA;$/;"	m	class:M6532
myDDRB	./src/emucore/M6532.hxx	/^    uInt8 myDDRB;$/;"	m	class:M6532
myDENABL	./src/emucore/TIA.hxx	/^    bool myDENABL;        \/\/ Indicates if the virtically delayed ball is enabled$/;"	m	class:TIA
myDGRP0	./src/emucore/TIA.hxx	/^    uInt8 myDGRP0;        \/\/ Player 0 delayed graphics register$/;"	m	class:TIA
myDGRP1	./src/emucore/TIA.hxx	/^    uInt8 myDGRP1;        \/\/ Player 1 delayed graphics register$/;"	m	class:TIA
myData	./src/gui/Surface.hxx	/^    SDL_Surface* myData;$/;"	m	class:GUI::Surface
myDataBusLocked	./src/emucore/m6502/src/System.hxx	/^    bool myDataBusLocked;$/;"	m	class:System
myDataBusState	./src/emucore/m6502/src/System.hxx	/^    uInt8 myDataBusState;$/;"	m	class:System
myDataHoldRegister	./src/emucore/CartAR.hxx	/^    uInt8 myDataHoldRegister;$/;"	m	class:CartridgeAR
myDebugger	./src/debugger/DebuggerSystem.hxx	/^    Debugger* myDebugger;$/;"	m	class:DebuggerSystem
myDebugger	./src/emucore/OSystem.hxx	/^    Debugger* myDebugger;$/;"	m	class:OSystem
myDebugger	./src/emucore/m6502/src/M6502.hxx	/^    Debugger* myDebugger;$/;"	m	class:M6502
myDebuggerHeightLabel	./src/gui/UIDialog.hxx	/^    StaticTextWidget* myDebuggerHeightLabel;$/;"	m	class:UIDialog
myDebuggerHeightSlider	./src/gui/UIDialog.hxx	/^    SliderWidget*     myDebuggerHeightSlider;$/;"	m	class:UIDialog
myDebuggerWidthLabel	./src/gui/UIDialog.hxx	/^    StaticTextWidget* myDebuggerWidthLabel;$/;"	m	class:UIDialog
myDebuggerWidthSlider	./src/gui/UIDialog.hxx	/^    SliderWidget*     myDebuggerWidthSlider;$/;"	m	class:UIDialog
myDecValue	./src/debugger/gui/RamWidget.hxx	/^    EditTextWidget* myDecValue;$/;"	m	class:RamWidget
myDecValue	./src/debugger/gui/TiaWidget.hxx	/^    EditTextWidget* myDecValue;$/;"	m	class:TiaWidget
myDefPalette	./src/emucore/FrameBuffer.hxx	/^    Uint32 myDefPalette[256+kNumColors];$/;"	m	class:FrameBuffer
myDefaultsButton	./src/gui/EventMappingWidget.hxx	/^    ButtonWidget*     myDefaultsButton;$/;"	m	class:EventMappingWidget
myDefaultsSelected	./src/gui/GameInfoDialog.hxx	/^    bool myDefaultsSelected;$/;"	m	class:GameInfoDialog
myDelBL	./src/debugger/gui/TiaWidget.hxx	/^    CheckboxWidget* myDelBL;$/;"	m	class:TiaWidget
myDelP0	./src/debugger/gui/TiaWidget.hxx	/^    CheckboxWidget* myDelP0;$/;"	m	class:TiaWidget
myDelP1	./src/debugger/gui/TiaWidget.hxx	/^    CheckboxWidget* myDelP1;$/;"	m	class:TiaWidget
myDepth	./src/common/FrameBufferGL.hxx	/^    uInt32 myDepth;$/;"	m	class:FrameBufferGL
myDesc	./src/gui/AboutDialog.hxx	/^    StaticTextWidget* myDesc[LINES_PER_PAGE];$/;"	m	class:AboutDialog
myDesc	./src/gui/HelpDialog.hxx	/^    StaticTextWidget* myDesc[LINES_PER_PAGE];$/;"	m	class:HelpDialog
myDesktopHeight	./src/emucore/OSystem.hxx	/^    uInt32 myDesktopWidth, myDesktopHeight;$/;"	m	class:OSystem
myDesktopWidth	./src/emucore/OSystem.hxx	/^    uInt32 myDesktopWidth, myDesktopHeight;$/;"	m	class:OSystem
myDevices	./src/emucore/m6502/src/System.hxx	/^    Device* myDevices[100];$/;"	m	class:System
myDialogStack	./src/gui/DialogContainer.hxx	/^    FixedStack<Dialog *> myDialogStack;$/;"	m	class:DialogContainer
myDigitalPinState	./src/emucore/Control.hxx	/^    bool myDigitalPinState[5];$/;"	m	class:Controller
myDir	./src/gui/LauncherDialog.hxx	/^    StaticTextWidget* myDir;$/;"	m	class:LauncherDialog
myDirLabel	./src/gui/LauncherDialog.hxx	/^    StaticTextWidget* myDirLabel;$/;"	m	class:LauncherDialog
myDirtyFlag	./src/common/FrameBufferGL.hxx	/^    bool myDirtyFlag;$/;"	m	class:FrameBufferGL
myDirtyFlag	./src/common/FrameBufferSoft.hxx	/^    bool myDirtyFlag;$/;"	m	class:FrameBufferSoft
myDirtyFlag	./src/gp2x/FrameBufferGP2X.hxx	/^    bool myDirtyFlag;$/;"	m	class:FrameBufferGP2X
myDisasm	./src/debugger/gui/RomListWidget.hxx	/^    StringList myLabel, myDisasm;$/;"	m	class:RomListWidget
myDisplayFormat	./src/emucore/Console.hxx	/^    string myDisplayFormat;$/;"	m	class:Console
myDisplayFrameRate	./src/common/SoundSDL.hxx	/^    uInt32 myDisplayFrameRate;$/;"	m	class:SoundSDL
myDisplayFrameRate	./src/emucore/OSystem.hxx	/^    uInt32 myDisplayFrameRate;$/;"	m	class:OSystem
myDisplayFrameRate	./src/wince/SoundWinCE.hxx	/^    uInt32 myDisplayFrameRate;$/;"	m	class:SoundWinCE
myDisplayImage	./src/emucore/CartDPC.hxx	/^    uInt8 myDisplayImage[2048];$/;"	m	class:CartridgeDPC
myDivideByValue	./src/emucore/TIASnd.hxx	/^        uInt32 myDivideByValue;$/;"	m	class:TIASound::FreqDiv
myDownEvent	./src/emucore/Booster.hxx	/^    Event::Type myUpEvent, myDownEvent, myLeftEvent, myRightEvent,$/;"	m	class:BoosterGrip
myDownEvent	./src/emucore/Joystick.hxx	/^    Event::Type myUpEvent, myDownEvent, myLeftEvent, myRightEvent,$/;"	m	class:Joystick
myDownEvent	./src/emucore/TrackBall22.hxx	/^    Event::Type myUpEvent, myDownEvent, myLeftEvent, myRightEvent, myFireEvent;$/;"	m	class:TrackBall22
myDrawSurface	./src/gui/RomInfoWidget.hxx	/^    bool myDrawSurface;$/;"	m	class:RomInfoWidget
myDstScreen	./src/wince/FrameBufferWinCE.hxx	/^	uInt8 *myDstScreen;$/;"	m	class:FrameBufferWinCE
myDumpDisabledCycle	./src/emucore/TIA.hxx	/^    Int32 myDumpDisabledCycle;$/;"	m	class:TIA
myDumpEnabled	./src/emucore/TIA.hxx	/^    bool myDumpEnabled;$/;"	m	class:TIA
myENABL	./src/emucore/TIA.hxx	/^    bool myENABL;         \/\/ Indicates if the ball is enabled$/;"	m	class:TIA
myENAM0	./src/emucore/TIA.hxx	/^    bool myENAM0;         \/\/ Indicates if missle 0 is enabled$/;"	m	class:TIA
myENAM1	./src/emucore/TIA.hxx	/^    bool myENAM1;         \/\/ Indicates if missle 0 is enabled$/;"	m	class:TIA
myEditButton	./src/cheat/CheatCodeDialog.hxx	/^    ButtonWidget* myEditButton;$/;"	m	class:CheatCodeDialog
myEightEvent	./src/emucore/Keyboard.hxx	/^                mySevenEvent, myEightEvent, myNineEvent,$/;"	m	class:Keyboard
myEmulEventMapper	./src/gui/InputDialog.hxx	/^    EventMappingWidget* myEmulEventMapper;$/;"	m	class:InputDialog
myEnaBL	./src/debugger/gui/TiaWidget.hxx	/^    CheckboxWidget* myEnaBL;$/;"	m	class:TiaWidget
myEnaM0	./src/debugger/gui/TiaWidget.hxx	/^    CheckboxWidget* myEnaM0;$/;"	m	class:TiaWidget
myEnaM1	./src/debugger/gui/TiaWidget.hxx	/^    CheckboxWidget* myEnaM1;$/;"	m	class:TiaWidget
myEnabled	./src/cheat/Cheat.hxx	/^    bool myEnabled;$/;"	m	class:Cheat
myEnabledObjects	./src/emucore/TIA.hxx	/^    uInt8 myEnabledObjects;$/;"	m	class:TIA
myEquateList	./src/debugger/Debugger.hxx	/^    EquateList*     myEquateList;$/;"	m	class:Debugger
myEraseButton	./src/gui/EventMappingWidget.hxx	/^    ButtonWidget*     myEraseButton;$/;"	m	class:EventMappingWidget
myErrorFlag	./src/gui/InputTextDialog.hxx	/^    bool myErrorFlag;$/;"	m	class:InputTextDialog
myEvent	./src/emucore/Console.hxx	/^    Event* myEvent;$/;"	m	class:Console
myEvent	./src/emucore/Control.hxx	/^    const Event& myEvent;$/;"	m	class:Controller
myEvent	./src/emucore/EventHandler.hxx	/^    Event* myEvent;$/;"	m	class:EventHandler
myEvent	./src/emucore/Switches.hxx	/^    const Event& myEvent;$/;"	m	class:Switches
myEventHandler	./src/emucore/OSystem.hxx	/^    EventHandler* myEventHandler;$/;"	m	class:OSystem
myEventMode	./src/gui/EventMappingWidget.hxx	/^    EventMode myEventMode;$/;"	m	class:EventMappingWidget
myExecutionStatus	./src/emucore/m6502/src/M6502.hxx	/^    uInt8 myExecutionStatus;$/;"	m	class:M6502
myExternalSettings	./src/emucore/Settings.hxx	/^    SettingsArray myExternalSettings;$/;"	m	class:Settings
myFSResPopup	./src/gui/VideoDialog.hxx	/^    PopUpWidget*      myFSResPopup;$/;"	m	class:VideoDialog
myFSStretchPopup	./src/gui/VideoDialog.hxx	/^    PopUpWidget*      myFSStretchPopup;$/;"	m	class:VideoDialog
myFeatures	./src/emucore/OSystem.hxx	/^    string myFeatures;$/;"	m	class:OSystem
myFileSnapButton	./src/gui/OptionsDialog.hxx	/^    ButtonWidget* myFileSnapButton;$/;"	m	class:OptionsDialog
myFileSnapDialog	./src/gui/OptionsDialog.hxx	/^    FileSnapDialog*  myFileSnapDialog;$/;"	m	class:OptionsDialog
myFilterParamName	./src/common/FrameBufferGL.hxx	/^    string myFilterParamName;$/;"	m	class:FrameBufferGL
myFilterPopup	./src/gui/VideoDialog.hxx	/^    PopUpWidget*      myFilterPopup;$/;"	m	class:VideoDialog
myFinish	./src/gui/ProgressDialog.hxx	/^    int myStart, myFinish, myStep, myCurrentStep;$/;"	m	class:ProgressDialog
myFireEvent	./src/emucore/Booster.hxx	/^                myFireEvent, myBoosterEvent, myTriggerEvent,$/;"	m	class:BoosterGrip
myFireEvent	./src/emucore/Driving.hxx	/^    Event::Type myCWEvent, myCCWEvent, myFireEvent, myXAxisValue, myYAxisValue;$/;"	m	class:Driving
myFireEvent	./src/emucore/Joystick.hxx	/^                myXAxisValue, myYAxisValue, myFireEvent;$/;"	m	class:Joystick
myFireEvent	./src/emucore/TrackBall22.hxx	/^    Event::Type myUpEvent, myDownEvent, myLeftEvent, myRightEvent, myFireEvent;$/;"	m	class:TrackBall22
myFirstTime	./src/gui/EventMappingWidget.hxx	/^    bool myFirstTime;$/;"	m	class:EventMappingWidget
myFiveEvent	./src/emucore/Keyboard.hxx	/^                myFourEvent, myFiveEvent, mySixEvent,$/;"	m	class:Keyboard
myFlags	./src/emucore/CartDPC.hxx	/^    uInt8 myFlags[8];$/;"	m	class:CartridgeDPC
myFloatTIAOutputPins	./src/emucore/TIA.hxx	/^    bool myFloatTIAOutputPins;$/;"	m	class:TIA
myFont	./src/emucore/OSystem.hxx	/^    GUI::Font* myFont;$/;"	m	class:OSystem
myFontDesc	./src/gui/Font.hxx	/^    FontDesc myFontDesc;$/;"	m	class:GUI::Font
myFormat	./src/common/FrameBufferSoft.hxx	/^    SDL_PixelFormat* myFormat;$/;"	m	class:FrameBufferSoft
myFormat	./src/gp2x/FrameBufferGP2X.hxx	/^    SDL_PixelFormat* myFormat;$/;"	m	class:FrameBufferGP2X
myFormat	./src/gui/GameInfoDialog.hxx	/^    PopUpWidget*      myFormat;$/;"	m	class:GameInfoDialog
myFourEvent	./src/emucore/Keyboard.hxx	/^                myFourEvent, myFiveEvent, mySixEvent,$/;"	m	class:Keyboard
myFractionalClocks	./src/emucore/CartDPC.hxx	/^    double myFractionalClocks;$/;"	m	class:CartridgeDPC
myFragmentSizeLogBase2	./src/common/SoundSDL.hxx	/^    double myFragmentSizeLogBase2;$/;"	m	class:SoundSDL
myFragmentSizeLogBase2	./src/wince/SoundWinCE.hxx	/^    double myFragmentSizeLogBase2;$/;"	m	class:SoundWinCE
myFragsizePopup	./src/gui/AudioDialog.hxx	/^    PopUpWidget*      myFragsizePopup;$/;"	m	class:AudioDialog
myFrameBuffer	./src/emucore/OSystem.hxx	/^    FrameBuffer* myFrameBuffer;$/;"	m	class:OSystem
myFrameCount	./src/debugger/gui/TiaInfoWidget.hxx	/^    EditTextWidget* myFrameCount;$/;"	m	class:TiaInfoWidget
myFrameCounter	./src/emucore/StateManager.hxx	/^    int myFrameCounter;$/;"	m	class:StateManager
myFrameCounter	./src/emucore/TIA.hxx	/^    int myFrameCounter;$/;"	m	class:TIA
myFrameCycles	./src/debugger/gui/TiaInfoWidget.hxx	/^    EditTextWidget* myFrameCycles;$/;"	m	class:TiaInfoWidget
myFrameGreyed	./src/emucore/TIA.hxx	/^	 bool myFrameGreyed;$/;"	m	class:TIA
myFrameHeight	./src/emucore/TIA.hxx	/^    uInt32 myFrameHeight;$/;"	m	class:TIA
myFramePointer	./src/emucore/TIA.hxx	/^    uInt8* myFramePointer;$/;"	m	class:TIA
myFrameRateLabel	./src/gui/VideoDialog.hxx	/^    StaticTextWidget* myFrameRateLabel;$/;"	m	class:VideoDialog
myFrameRateSlider	./src/gui/VideoDialog.hxx	/^    SliderWidget*     myFrameRateSlider;$/;"	m	class:VideoDialog
myFrameWidth	./src/emucore/TIA.hxx	/^    uInt32 myFrameWidth;$/;"	m	class:TIA
myFrameXStart	./src/emucore/TIA.hxx	/^    uInt32 myFrameXStart;$/;"	m	class:TIA
myFrameYStart	./src/emucore/TIA.hxx	/^    uInt32 myFrameYStart;$/;"	m	class:TIA
myFramerate	./src/emucore/Console.hxx	/^    uInt32 myFramerate;$/;"	m	class:Console
myFreqDiv	./src/emucore/TIASnd.hxx	/^    FreqDiv myFreqDiv[2];    \/\/ Frequency dividers$/;"	m	class:TIASound
myFreqPopup	./src/gui/AudioDialog.hxx	/^    PopUpWidget*      myFreqPopup;$/;"	m	class:AudioDialog
myFryingFlag	./src/emucore/EventHandler.hxx	/^    bool myFryingFlag;$/;"	m	class:EventHandler
myFullscreenCheckbox	./src/gui/VideoDialog.hxx	/^    CheckboxWidget*   myFullscreenCheckbox;$/;"	m	class:VideoDialog
myFullscreenModeList	./src/emucore/FrameBuffer.hxx	/^    VideoModeList myFullscreenModeList;$/;"	m	class:FrameBuffer
myFwdMap	./src/debugger/EquateList.hxx	/^    labelToAddr myFwdMap;$/;"	m	class:EquateList
myGRP0	./src/debugger/gui/TiaWidget.hxx	/^    TogglePixelWidget* myGRP0;$/;"	m	class:TiaWidget
myGRP0	./src/emucore/TIA.hxx	/^    uInt8 myGRP0;         \/\/ Player 0 graphics register$/;"	m	class:TIA
myGRP1	./src/debugger/gui/TiaWidget.hxx	/^    TogglePixelWidget* myGRP1;$/;"	m	class:TiaWidget
myGRP1	./src/emucore/TIA.hxx	/^    uInt8 myGRP1;         \/\/ Player 1 graphics register$/;"	m	class:TIA
myGameInfoButton	./src/gui/OptionsDialog.hxx	/^    ButtonWidget* myGameInfoButton;$/;"	m	class:OptionsDialog
myGameInfoDialog	./src/gui/OptionsDialog.hxx	/^    GameInfoDialog*  myGameInfoDialog;$/;"	m	class:OptionsDialog
myGameList	./src/gui/LauncherDialog.hxx	/^    GameList*         myGameList;$/;"	m	class:LauncherDialog
myGameListCacheFile	./src/emucore/OSystem.hxx	/^    string myGameListCacheFile;$/;"	m	class:OSystem
myGameProperties	./src/gui/GameInfoDialog.hxx	/^    Properties myGameProperties;$/;"	m	class:GameInfoDialog
myGrabMouseFlag	./src/emucore/EventHandler.hxx	/^    bool myGrabMouseFlag;$/;"	m	class:EventHandler
myGrayIndex	./src/emucore/Driving.hxx	/^    uInt32 myGrayIndex;$/;"	m	class:Driving
myHCounter	./src/emucore/TrackBall22.hxx	/^    uInt32 myHCounter, myVCounter;$/;"	m	class:TrackBall22
myHMBL	./src/debugger/gui/TiaWidget.hxx	/^    DataGridWidget* myHMBL;$/;"	m	class:TiaWidget
myHMBL	./src/emucore/TIA.hxx	/^    Int8 myHMBL;          \/\/ Ball horizontal motion register$/;"	m	class:TIA
myHMM0	./src/debugger/gui/TiaWidget.hxx	/^    DataGridWidget* myHMM0;$/;"	m	class:TiaWidget
myHMM0	./src/emucore/TIA.hxx	/^    Int8 myHMM0;          \/\/ Missle 0 horizontal motion register$/;"	m	class:TIA
myHMM1	./src/debugger/gui/TiaWidget.hxx	/^    DataGridWidget* myHMM1;$/;"	m	class:TiaWidget
myHMM1	./src/emucore/TIA.hxx	/^    Int8 myHMM1;          \/\/ Missle 1 horizontal motion register$/;"	m	class:TIA
myHMOVEBlankEnabled	./src/emucore/TIA.hxx	/^    bool myHMOVEBlankEnabled;$/;"	m	class:TIA
myHMP0	./src/debugger/gui/TiaWidget.hxx	/^    DataGridWidget* myHMP0;$/;"	m	class:TiaWidget
myHMP0	./src/emucore/TIA.hxx	/^    Int8 myHMP0;          \/\/ Player 0 horizontal motion register$/;"	m	class:TIA
myHMP1	./src/debugger/gui/TiaWidget.hxx	/^    DataGridWidget* myHMP1;$/;"	m	class:TiaWidget
myHMP1	./src/emucore/TIA.hxx	/^    Int8 myHMP1;          \/\/ Player 1 horizontal motion register$/;"	m	class:TIA
myHardwareSpec	./src/common/SoundSDL.hxx	/^    SDL_AudioSpec myHardwareSpec;$/;"	m	class:SoundSDL
myHatRepeatTime	./src/gui/DialogContainer.hxx	/^    int myHatRepeatTime;$/;"	m	class:DialogContainer
myHaveProperties	./src/gui/RomInfoWidget.hxx	/^    bool myHaveProperties;$/;"	m	class:RomInfoWidget
myHaveTexRectEXT	./src/common/FrameBufferGL.hxx	/^    bool myHaveTexRectEXT;$/;"	m	class:FrameBufferGL
myHead	./src/common/SoundSDL.hxx	/^        uInt32 myHead;$/;"	m	class:SoundSDL::RegWriteQueue
myHead	./src/wince/SoundWinCE.hxx	/^        uInt32 myHead;$/;"	m	class:SoundWinCE::RegWriteQueue
myHeader	./src/emucore/CartAR.hxx	/^    uInt8 myHeader[256];$/;"	m	class:CartridgeAR
myHeight	./src/debugger/Debugger.hxx	/^    uInt32 myHeight;$/;"	m	class:Debugger
myHeight	./src/emucore/TIA.hxx	/^    uInt32 myHeight;$/;"	m	class:TIA
myHeight	./src/gui/GameInfoDialog.hxx	/^    EditTextWidget*   myHeight;$/;"	m	class:GameInfoDialog
myHeight	./src/gui/Launcher.hxx	/^    uInt32 myHeight;$/;"	m	class:Launcher
myHeight	./src/wince/FrameBufferWinCE.hxx	/^	uInt16 pal[256+kNumColors], myWidth, myWidthdiv4, myHeight, scrwidth, scrheight;$/;"	m	class:FrameBufferWinCE
myHeightScaleFactor	./src/common/FrameBufferGL.hxx	/^    float myWidthScaleFactor, myHeightScaleFactor;$/;"	m	class:FrameBufferGL
myHelpButton	./src/gui/OptionsDialog.hxx	/^    ButtonWidget* myHelpButton;$/;"	m	class:OptionsDialog
myHelpDialog	./src/gui/OptionsDialog.hxx	/^    HelpDialog*      myHelpDialog;$/;"	m	class:OptionsDialog
myHighlightedItem	./src/debugger/gui/RomListWidget.hxx	/^    int myHighlightedItem;$/;"	m	class:RomListWidget
myHitTrapInfo	./src/emucore/m6502/src/M6502.hxx	/^    HitTrapInfo myHitTrapInfo;$/;"	m	class:M6502
myHmoveBlanks	./src/gui/GameInfoDialog.hxx	/^    PopUpWidget*      myHmoveBlanks;$/;"	m	class:GameInfoDialog
myHotSpotPageAccess	./src/emucore/Cart0840.hxx	/^    System::PageAccess myHotSpotPageAccess[8];$/;"	m	class:Cartridge0840
myHotSpotPageAccess	./src/emucore/CartSB.hxx	/^    System::PageAccess myHotSpotPageAccess[8];$/;"	m	class:CartridgeSB
myHotSpotPageAccess	./src/emucore/CartUA.hxx	/^    System::PageAccess myHotSpotPageAccess;$/;"	m	class:CartridgeUA
myIdx	./src/common/VideoModeList.hxx	/^    int myIdx;$/;"	m	class:VideoModeList
myImage	./src/emucore/Cart0840.hxx	/^    uInt8 myImage[8192];$/;"	m	class:Cartridge0840
myImage	./src/emucore/Cart2K.hxx	/^    uInt8 myImage[2048];$/;"	m	class:Cartridge2K
myImage	./src/emucore/Cart3E.hxx	/^    uInt8* myImage;$/;"	m	class:Cartridge3E
myImage	./src/emucore/Cart3F.hxx	/^    uInt8* myImage;$/;"	m	class:Cartridge3F
myImage	./src/emucore/Cart4A50.hxx	/^    uInt8 myImage[131072];$/;"	m	class:Cartridge4A50
myImage	./src/emucore/Cart4K.hxx	/^    uInt8 myImage[4096];$/;"	m	class:Cartridge4K
myImage	./src/emucore/CartAR.hxx	/^    uInt8 myImage[8192];$/;"	m	class:CartridgeAR
myImage	./src/emucore/CartCV.hxx	/^    uInt8 myImage[2048];$/;"	m	class:CartridgeCV
myImage	./src/emucore/CartE0.hxx	/^    uInt8 myImage[8192];$/;"	m	class:CartridgeE0
myImage	./src/emucore/CartE7.hxx	/^    uInt8 myImage[16384];$/;"	m	class:CartridgeE7
myImage	./src/emucore/CartF4.hxx	/^    uInt8 myImage[32768];$/;"	m	class:CartridgeF4
myImage	./src/emucore/CartF4SC.hxx	/^    uInt8 myImage[32768];$/;"	m	class:CartridgeF4SC
myImage	./src/emucore/CartF6.hxx	/^    uInt8 myImage[16384];$/;"	m	class:CartridgeF6
myImage	./src/emucore/CartF6SC.hxx	/^    uInt8 myImage[16384];$/;"	m	class:CartridgeF6SC
myImage	./src/emucore/CartF8.hxx	/^    uInt8 myImage[8192];$/;"	m	class:CartridgeF8
myImage	./src/emucore/CartF8SC.hxx	/^    uInt8 myImage[8192];$/;"	m	class:CartridgeF8SC
myImage	./src/emucore/CartFASC.hxx	/^    uInt8 myImage[12288];$/;"	m	class:CartridgeFASC
myImage	./src/emucore/CartFE.hxx	/^    uInt8 myImage[8192];$/;"	m	class:CartridgeFE
myImage	./src/emucore/CartMB.hxx	/^    uInt8 myImage[65536];$/;"	m	class:CartridgeMB
myImage	./src/emucore/CartMC.hxx	/^    uInt8* myImage;$/;"	m	class:CartridgeMC
myImage	./src/emucore/CartSB.hxx	/^    uInt8* myImage;$/;"	m	class:CartridgeSB
myImage	./src/emucore/CartUA.hxx	/^    uInt8 myImage[8192];$/;"	m	class:CartridgeUA
myImage	./src/emucore/CartX07.hxx	/^    uInt8 myImage[65536];$/;"	m	class:CartridgeX07
myImageCopy	./src/emucore/CartDPC.hxx	/^    uInt8 myImageCopy[8192 + 2048 + 255];$/;"	m	class:CartridgeDPC
myImageDim	./src/emucore/FrameBuffer.hxx	/^    SDL_Rect myImageDim;$/;"	m	class:FrameBuffer
myImageOffset	./src/emucore/CartAR.hxx	/^    uInt32 myImageOffset[2];$/;"	m	class:CartridgeAR
myInUIMode	./src/common/FrameBufferSoft.hxx	/^    bool myInUIMode;$/;"	m	class:FrameBufferSoft
myInitializedCount	./src/emucore/FrameBuffer.hxx	/^    uInt32 myInitializedCount;$/;"	m	class:FrameBuffer
myInput	./src/gui/InputTextDialog.hxx	/^    InputWidget       myInput;$/;"	m	class:InputTextDialog
myInputBox	./src/debugger/gui/RamWidget.hxx	/^    InputTextDialog* myInputBox;$/;"	m	class:RamWidget
myInputDialog	./src/gui/OptionsDialog.hxx	/^    InputDialog*     myInputDialog;$/;"	m	class:OptionsDialog
myInstructionSystemCycleTable	./src/emucore/m6502/src/M6502.hxx	/^    uInt32 myInstructionSystemCycleTable[256]; $/;"	m	class:M6502
myInternalSettings	./src/emucore/Settings.hxx	/^    SettingsArray myInternalSettings;$/;"	m	class:Settings
myIntervalShift	./src/emucore/M6532.hxx	/^    uInt32 myIntervalShift;$/;"	m	class:M6532
myIsEnabled	./src/common/SoundSDL.hxx	/^    bool myIsEnabled;$/;"	m	class:SoundSDL
myIsEnabled	./src/wince/SoundWinCE.hxx	/^    bool myIsEnabled;$/;"	m	class:SoundWinCE
myIsGlobal	./src/gui/FileSnapDialog.hxx	/^    bool myIsGlobal;$/;"	m	class:FileSnapDialog
myIsGlobal	./src/gui/OptionsDialog.hxx	/^    bool myIsGlobal;$/;"	m	class:OptionsDialog
myIsInitializedFlag	./src/common/SoundSDL.hxx	/^    bool myIsInitializedFlag;$/;"	m	class:SoundSDL
myIsInitializedFlag	./src/wince/SoundWinCE.hxx	/^    bool myIsInitializedFlag;$/;"	m	class:SoundWinCE
myIsMuted	./src/common/SoundSDL.hxx	/^    bool myIsMuted;$/;"	m	class:SoundSDL
myIsMuted	./src/wince/SoundWinCE.hxx	/^    bool myIsMuted;$/;"	m	class:SoundWinCE
myIsRomHigh	./src/emucore/Cart4A50.hxx	/^    bool myIsRomHigh;      \/* true = ROM -- false = RAM at $1e00-$1eFF *\/$/;"	m	class:Cartridge4A50
myIsRomLow	./src/emucore/Cart4A50.hxx	/^    bool myIsRomLow;       \/* true = ROM -- false = RAM at $1000-$17ff *\/$/;"	m	class:Cartridge4A50
myIsRomMiddle	./src/emucore/Cart4A50.hxx	/^    bool myIsRomMiddle;    \/* true = ROM -- false = RAM at $1800-$1dff *\/$/;"	m	class:Cartridge4A50
myJack	./src/emucore/Control.hxx	/^    const Jack myJack;$/;"	m	class:Controller
myJoyAxisTable	./src/emucore/EventHandler.hxx	/^    Event::Type myJoyAxisTable[kNumJoysticks][kNumJoyAxis][2][kNumModes];$/;"	m	class:EventHandler
myJoyHatTable	./src/emucore/EventHandler.hxx	/^    Event::Type myJoyHatTable[kNumJoysticks][kNumJoyHats][4][kNumModes];$/;"	m	class:EventHandler
myJoyTable	./src/emucore/EventHandler.hxx	/^    Event::Type myJoyTable[kNumJoysticks][kNumJoyButtons][kNumModes];$/;"	m	class:EventHandler
myJustHitTrapFlag	./src/emucore/m6502/src/M6502.hxx	/^    bool myJustHitTrapFlag;$/;"	m	class:M6502
myKey	./src/gui/HelpDialog.hxx	/^    StaticTextWidget* myKey[LINES_PER_PAGE];$/;"	m	class:HelpDialog
myKeyMapping	./src/gui/EventMappingWidget.hxx	/^    StaticTextWidget* myKeyMapping;$/;"	m	class:EventMappingWidget
myKeyRepeat0	./src/emucore/Paddles.hxx	/^    int myKeyRepeat0;$/;"	m	class:Paddles
myKeyRepeat1	./src/emucore/Paddles.hxx	/^    int myKeyRepeat1;$/;"	m	class:Paddles
myKeyRepeatTime	./src/gui/DialogContainer.hxx	/^    int myKeyRepeatTime;$/;"	m	class:DialogContainer
myKeyTable	./src/emucore/EventHandler.hxx	/^    Event::Type myKeyTable[SDLK_LAST][kNumModes];$/;"	m	class:EventHandler
myLHS	./src/debugger/Expression.hxx	/^    Expression* myLHS;$/;"	m	class:Expression
myLabel	./src/debugger/DebuggerExpressions.hxx	/^    string myLabel;$/;"	m	class:EquateExpression
myLabel	./src/debugger/DebuggerExpressions.hxx	/^    string myLabel;$/;"	m	class:FunctionExpression
myLabel	./src/debugger/gui/RamWidget.hxx	/^    EditTextWidget* myLabel;$/;"	m	class:RamWidget
myLabel	./src/debugger/gui/RomListWidget.hxx	/^    StringList myLabel, myDisasm;$/;"	m	class:RomListWidget
myLabel	./src/debugger/gui/TiaWidget.hxx	/^    EditTextWidget* myLabel;$/;"	m	class:TiaWidget
myLabelWidth	./src/debugger/gui/RomListWidget.hxx	/^    int myLabelWidth;$/;"	m	class:RomListWidget
myLastAccessWasRead	./src/emucore/m6502/src/M6502.hxx	/^    bool myLastAccessWasRead;$/;"	m	class:M6502
myLastAddress	./src/emucore/Cart4A50.hxx	/^    uInt16 myLastAddress;$/;"	m	class:Cartridge4A50
myLastAddress	./src/emucore/m6502/src/M6502Hi.hxx	/^    uInt16 myLastAddress;$/;"	m	class:M6502High
myLastBank	./src/emucore/CartSB.hxx	/^    uInt16 myLastBank;$/;"	m	class:CartridgeSB
myLastCharge	./src/emucore/Paddles.hxx	/^    int myLastCharge[2];$/;"	m	class:Paddles
myLastClick	./src/gui/DialogContainer.hxx	/^    } myLastClick;$/;"	m	class:DialogContainer	typeref:struct:DialogContainer::__anon43
myLastData	./src/emucore/Cart4A50.hxx	/^    uInt8 myLastData;$/;"	m	class:Cartridge4A50
myLastDataWriteCycle	./src/emucore/AtariVox.hxx	/^    uInt32 myLastDataWriteCycle;$/;"	m	class:AtariVox
myLastHMOVEClock	./src/emucore/TIA.hxx	/^    Int32 myLastHMOVEClock;$/;"	m	class:TIA
myLastRegisterSetCycle	./src/common/SoundSDL.hxx	/^    Int32 myLastRegisterSetCycle;$/;"	m	class:SoundSDL
myLastRegisterSetCycle	./src/wince/SoundWinCE.hxx	/^    Int32 myLastRegisterSetCycle;$/;"	m	class:SoundWinCE
myLastYaxis	./src/emucore/Driving.hxx	/^    int myLastYaxis;$/;"	m	class:Driving
myLatency	./src/wince/SoundWinCE.hxx	/^	int myLatency, myMixRate, myBuffnum;$/;"	m	class:SoundWinCE
myLauncher	./src/emucore/OSystem.hxx	/^    Launcher* myLauncher;$/;"	m	class:OSystem
myLauncherFont	./src/emucore/OSystem.hxx	/^    GUI::Font* myLauncherFont;$/;"	m	class:OSystem
myLauncherFontPopup	./src/gui/UIDialog.hxx	/^    PopUpWidget*      myLauncherFontPopup;$/;"	m	class:UIDialog
myLauncherHeightLabel	./src/gui/UIDialog.hxx	/^    StaticTextWidget* myLauncherHeightLabel;$/;"	m	class:UIDialog
myLauncherHeightSlider	./src/gui/UIDialog.hxx	/^    SliderWidget*     myLauncherHeightSlider;$/;"	m	class:UIDialog
myLauncherWidthLabel	./src/gui/UIDialog.hxx	/^    StaticTextWidget* myLauncherWidthLabel;$/;"	m	class:UIDialog
myLauncherWidthSlider	./src/gui/UIDialog.hxx	/^    SliderWidget*     myLauncherWidthSlider;$/;"	m	class:UIDialog
myLeftDiff	./src/gui/GameInfoDialog.hxx	/^    PopUpWidget* myLeftDiff;$/;"	m	class:GameInfoDialog
myLeftEvent	./src/emucore/Booster.hxx	/^    Event::Type myUpEvent, myDownEvent, myLeftEvent, myRightEvent,$/;"	m	class:BoosterGrip
myLeftEvent	./src/emucore/Joystick.hxx	/^    Event::Type myUpEvent, myDownEvent, myLeftEvent, myRightEvent,$/;"	m	class:Joystick
myLeftEvent	./src/emucore/TrackBall22.hxx	/^    Event::Type myUpEvent, myDownEvent, myLeftEvent, myRightEvent, myFireEvent;$/;"	m	class:TrackBall22
myLeftMotion	./src/emucore/Paddles.hxx	/^    int myLeftMotion[2];$/;"	m	class:Paddles
myLeftPort	./src/gui/GameInfoDialog.hxx	/^    PopUpWidget* myLeftPort;$/;"	m	class:GameInfoDialog
myLeftPort	./src/gui/InputDialog.hxx	/^    PopUpWidget* myLeftPort;$/;"	m	class:InputDialog
myLibraryLoaded	./src/common/FrameBufferGL.cxx	/^bool FrameBufferGL::myLibraryLoaded = false;$/;"	m	class:FrameBufferGL	file:
myLibraryLoaded	./src/common/FrameBufferGL.hxx	/^    static bool myLibraryLoaded;$/;"	m	class:FrameBufferGL
myLineList	./src/debugger/gui/RomWidget.hxx	/^    AddrToLine myLineList;$/;"	m	class:RomWidget
myList	./src/gui/LauncherDialog.hxx	/^    StringListWidget* myList;$/;"	m	class:LauncherDialog
myListIsDirty	./src/cheat/CheatManager.hxx	/^    bool myListIsDirty;$/;"	m	class:CheatManager
myListIsDirty	./src/debugger/gui/RomWidget.hxx	/^    bool myListIsDirty;$/;"	m	class:RomWidget
myLoadImages	./src/emucore/CartAR.hxx	/^    uInt8* myLoadImages;$/;"	m	class:CartridgeAR
myM0Bit	./src/emucore/TIA.hxx	/^      myM0Bit = 0x02,         \/\/ Bit for Missle 0$/;"	e	enum:TIA::__anon6
myM0CosmicArkCounter	./src/emucore/TIA.hxx	/^    uInt32 myM0CosmicArkCounter;$/;"	m	class:TIA
myM0CosmicArkMotionEnabled	./src/emucore/TIA.hxx	/^    bool myM0CosmicArkMotionEnabled;$/;"	m	class:TIA
myM1Bit	./src/emucore/TIA.hxx	/^      myM1Bit = 0x08,         \/\/ Bit for Missle 1$/;"	e	enum:TIA::__anon6
myM6502	./src/emucore/m6502/src/System.hxx	/^    M6502* myM6502;$/;"	m	class:System
myM6532	./src/emucore/m6502/src/System.hxx	/^    M6532* myM6532;$/;"	m	class:System
myMD5	./src/emucore/StateManager.hxx	/^    string myMD5;$/;"	m	class:StateManager
myMD5	./src/gui/GameInfoDialog.hxx	/^    StaticTextWidget* myMD5;$/;"	m	class:GameInfoDialog
myManufacturer	./src/gui/GameInfoDialog.hxx	/^    EditTextWidget*   myManufacturer;$/;"	m	class:GameInfoDialog
myMapButton	./src/gui/EventMappingWidget.hxx	/^    ButtonWidget*     myMapButton;$/;"	m	class:EventMappingWidget
myMaximumNumberOfScanlines	./src/emucore/TIA.hxx	/^    Int32 myMaximumNumberOfScanlines;$/;"	m	class:TIA
myMediaSource	./src/emucore/Console.hxx	/^    MediaSource* myMediaSource;$/;"	m	class:Console
myMenu	./src/debugger/gui/RomListWidget.hxx	/^    ContextMenu* myMenu;$/;"	m	class:RomListWidget
myMenu	./src/debugger/gui/TiaOutputWidget.hxx	/^    ContextMenu*   myMenu;$/;"	m	class:TiaOutputWidget
myMenu	./src/debugger/gui/TiaZoomWidget.hxx	/^    ContextMenu* myMenu;$/;"	m	class:TiaZoomWidget
myMenu	./src/emucore/OSystem.hxx	/^    Menu* myMenu;$/;"	m	class:OSystem
myMenuEventMapper	./src/gui/InputDialog.hxx	/^    EventMappingWidget* myMenuEventMapper;$/;"	m	class:InputDialog
myMessage	./src/debugger/Debugger.hxx	/^    EditTextWidget*  myMessage;$/;"	m	class:Debugger
myMessage	./src/emucore/FrameBuffer.hxx	/^    Message myMessage;$/;"	m	class:FrameBuffer
myMessage	./src/gui/ProgressDialog.hxx	/^    StaticTextWidget* myMessage;$/;"	m	class:ProgressDialog
myMessageBox	./src/debugger/gui/DebuggerDialog.hxx	/^    EditTextWidget*  myMessageBox;$/;"	m	class:DebuggerDialog
myMethod	./src/debugger/DebuggerExpressions.hxx	/^    CPUDEBUG_INT_METHOD myMethod;$/;"	m	class:CpuMethodExpression
myMethod	./src/debugger/DebuggerExpressions.hxx	/^    TIADEBUG_INT_METHOD myMethod;$/;"	m	class:TiaMethodExpression
myMixRate	./src/wince/SoundWinCE.hxx	/^	int myLatency, myMixRate, myBuffnum;$/;"	m	class:SoundWinCE
myModeList	./src/common/VideoModeList.hxx	/^    Common::Array<VideoMode> myModeList;$/;"	m	class:VideoModeList
myModelNo	./src/gui/GameInfoDialog.hxx	/^    EditTextWidget*   myModelNo;$/;"	m	class:GameInfoDialog
myMovieReader	./src/emucore/StateManager.hxx	/^    Deserializer myMovieReader;$/;"	m	class:StateManager
myMovieWriter	./src/emucore/StateManager.hxx	/^    Serializer   myMovieWriter;$/;"	m	class:StateManager
myMusicMode	./src/emucore/CartDPC.hxx	/^    bool myMusicMode[3];$/;"	m	class:CartridgeDPC
myNUSIZ0	./src/emucore/TIA.hxx	/^    uInt8 myNUSIZ0;       \/\/ Number and size of player 0 and missle 0$/;"	m	class:TIA
myNUSIZ1	./src/emucore/TIA.hxx	/^    uInt8 myNUSIZ1;       \/\/ Number and size of player 1 and missle 1$/;"	m	class:TIA
myName	./src/cheat/Cheat.hxx	/^    string myName;$/;"	m	class:Cheat
myName	./src/emucore/Control.hxx	/^    string myName;$/;"	m	class:Controller
myName	./src/gui/GameInfoDialog.hxx	/^    EditTextWidget*   myName;$/;"	m	class:GameInfoDialog
myNextButton	./src/gui/AboutDialog.hxx	/^    ButtonWidget* myNextButton;$/;"	m	class:AboutDialog
myNextButton	./src/gui/HelpDialog.hxx	/^    ButtonWidget* myNextButton;$/;"	m	class:HelpDialog
myNineEvent	./src/emucore/Keyboard.hxx	/^                mySevenEvent, myEightEvent, myNineEvent,$/;"	m	class:Keyboard
myNote	./src/gui/GameInfoDialog.hxx	/^    EditTextWidget*   myNote;$/;"	m	class:GameInfoDialog
myNullDevice	./src/emucore/m6502/src/System.hxx	/^    NullDevice myNullDevice; $/;"	m	class:System
myNumChannels	./src/common/SoundSDL.hxx	/^    uInt32 myNumChannels;$/;"	m	class:SoundSDL
myNumChannels	./src/wince/SoundWinCE.hxx	/^    uInt32 myNumChannels;$/;"	m	class:SoundWinCE
myNumCols	./src/debugger/gui/TiaZoomWidget.hxx	/^    int myNumCols, myNumRows;$/;"	m	class:TiaZoomWidget
myNumPages	./src/gui/AboutDialog.hxx	/^    int myNumPages;$/;"	m	class:AboutDialog
myNumPages	./src/gui/HelpDialog.hxx	/^    uInt8 myNumPages;$/;"	m	class:HelpDialog
myNumRows	./src/debugger/gui/TiaZoomWidget.hxx	/^    int myNumCols, myNumRows;$/;"	m	class:TiaZoomWidget
myNumberOfDevices	./src/emucore/m6502/src/System.hxx	/^    uInt32 myNumberOfDevices;$/;"	m	class:System
myNumberOfDistinctAccesses	./src/emucore/CartAR.hxx	/^    uInt32 myNumberOfDistinctAccesses;$/;"	m	class:CartridgeAR
myNumberOfDistinctAccesses	./src/emucore/m6502/src/M6502Hi.hxx	/^    uInt32 myNumberOfDistinctAccesses;$/;"	m	class:M6502High
myNumberOfLoadImages	./src/emucore/CartAR.hxx	/^    uInt8 myNumberOfLoadImages;$/;"	m	class:CartridgeAR
myNumberOfPages	./src/emucore/m6502/src/System.hxx	/^    const uInt16 myNumberOfPages;$/;"	m	class:System
myNumberOfTypes	./src/emucore/Event.hxx	/^    const Int32 myNumberOfTypes;$/;"	m	class:Event
myNusizM0	./src/debugger/gui/TiaWidget.hxx	/^    DataGridWidget* myNusizM0;$/;"	m	class:TiaWidget
myNusizM1	./src/debugger/gui/TiaWidget.hxx	/^    DataGridWidget* myNusizM1;$/;"	m	class:TiaWidget
myNusizP0	./src/debugger/gui/TiaWidget.hxx	/^    DataGridWidget* myNusizP0;$/;"	m	class:TiaWidget
myNusizP0Text	./src/debugger/gui/TiaWidget.hxx	/^    EditTextWidget* myNusizP0Text;$/;"	m	class:TiaWidget
myNusizP1	./src/debugger/gui/TiaWidget.hxx	/^    DataGridWidget* myNusizP1;$/;"	m	class:TiaWidget
myNusizP1Text	./src/debugger/gui/TiaWidget.hxx	/^    EditTextWidget* myNusizP1Text;$/;"	m	class:TiaWidget
myOSystem	./src/cheat/Cheat.hxx	/^    OSystem* myOSystem;$/;"	m	class:Cheat
myOSystem	./src/cheat/CheatManager.hxx	/^    OSystem* myOSystem;$/;"	m	class:CheatManager
myOSystem	./src/emucore/Console.hxx	/^    OSystem* myOSystem;$/;"	m	class:Console
myOSystem	./src/emucore/EventHandler.hxx	/^    OSystem* myOSystem;$/;"	m	class:EventHandler
myOSystem	./src/emucore/FrameBuffer.hxx	/^    OSystem* myOSystem;$/;"	m	class:FrameBuffer
myOSystem	./src/emucore/PropsSet.hxx	/^    OSystem* myOSystem;$/;"	m	class:PropertiesSet
myOSystem	./src/emucore/Settings.hxx	/^    OSystem* myOSystem;$/;"	m	class:Settings
myOSystem	./src/emucore/Sound.hxx	/^    OSystem* myOSystem;$/;"	m	class:Sound
myOSystem	./src/emucore/StateManager.hxx	/^    OSystem* myOSystem;$/;"	m	class:StateManager
myOSystem	./src/gui/DialogContainer.hxx	/^    OSystem* myOSystem;$/;"	m	class:DialogContainer
myOSystem	./src/gui/GuiObject.hxx	/^    OSystem*         myOSystem;$/;"	m	class:GuiObject
myOldState	./src/debugger/CpuDebug.hxx	/^    CpuState myOldState;$/;"	m	class:CpuDebug
myOldState	./src/debugger/RamDebug.hxx	/^    RamState myOldState;$/;"	m	class:RamDebug
myOldState	./src/debugger/TIADebug.hxx	/^    TiaState myOldState;$/;"	m	class:TIADebug
myOldValueList	./src/debugger/gui/RamWidget.hxx	/^    IntArray myOldValueList;$/;"	m	class:RamWidget
myOneEvent	./src/emucore/Keyboard.hxx	/^    Event::Type myOneEvent, myTwoEvent, myThreeEvent,$/;"	m	class:Keyboard
myOptions	./src/gui/LauncherDialog.hxx	/^    OptionsDialog*    myOptions;$/;"	m	class:LauncherDialog
myOptionsButton	./src/gui/LauncherDialog.hxx	/^    ButtonWidget* myOptionsButton;$/;"	m	class:LauncherDialog
myOutputCounter	./src/emucore/TIASnd.hxx	/^    Int32  myOutputCounter;$/;"	m	class:TIASound
myOutputFrequency	./src/emucore/TIASnd.hxx	/^    Int32  myOutputFrequency;$/;"	m	class:TIASound
myOverlay	./src/emucore/EventHandler.hxx	/^    DialogContainer* myOverlay;$/;"	m	class:EventHandler
myP0AxisValue	./src/emucore/Paddles.hxx	/^    Event::Type myP0AxisValue, myP1AxisValue,$/;"	m	class:Paddles
myP0Bit	./src/emucore/TIA.hxx	/^      myP0Bit = 0x01,         \/\/ Bit for Player 0$/;"	e	enum:TIA::__anon6
myP0Controller	./src/gui/GameInfoDialog.hxx	/^    PopUpWidget* myP0Controller;$/;"	m	class:GameInfoDialog
myP0DecEvent1	./src/emucore/Paddles.hxx	/^                myP0DecEvent1, myP0DecEvent2, myP0IncEvent1, myP0IncEvent2,$/;"	m	class:Paddles
myP0DecEvent2	./src/emucore/Paddles.hxx	/^                myP0DecEvent1, myP0DecEvent2, myP0IncEvent1, myP0IncEvent2,$/;"	m	class:Paddles
myP0FireEvent1	./src/emucore/Paddles.hxx	/^                myP0FireEvent1, myP0FireEvent2, myP1FireEvent1, myP1FireEvent2;$/;"	m	class:Paddles
myP0FireEvent2	./src/emucore/Paddles.hxx	/^                myP0FireEvent1, myP0FireEvent2, myP1FireEvent1, myP1FireEvent2;$/;"	m	class:Paddles
myP0IncEvent1	./src/emucore/Paddles.hxx	/^                myP0DecEvent1, myP0DecEvent2, myP0IncEvent1, myP0IncEvent2,$/;"	m	class:Paddles
myP0IncEvent2	./src/emucore/Paddles.hxx	/^                myP0DecEvent1, myP0DecEvent2, myP0IncEvent1, myP0IncEvent2,$/;"	m	class:Paddles
myP1AxisValue	./src/emucore/Paddles.hxx	/^    Event::Type myP0AxisValue, myP1AxisValue,$/;"	m	class:Paddles
myP1Bit	./src/emucore/TIA.hxx	/^      myP1Bit = 0x04,         \/\/ Bit for Player 1$/;"	e	enum:TIA::__anon6
myP1Controller	./src/gui/GameInfoDialog.hxx	/^    PopUpWidget* myP1Controller;$/;"	m	class:GameInfoDialog
myP1DecEvent1	./src/emucore/Paddles.hxx	/^                myP1DecEvent1, myP1DecEvent2, myP1IncEvent1, myP1IncEvent2,$/;"	m	class:Paddles
myP1DecEvent2	./src/emucore/Paddles.hxx	/^                myP1DecEvent1, myP1DecEvent2, myP1IncEvent1, myP1IncEvent2,$/;"	m	class:Paddles
myP1FireEvent1	./src/emucore/Paddles.hxx	/^                myP0FireEvent1, myP0FireEvent2, myP1FireEvent1, myP1FireEvent2;$/;"	m	class:Paddles
myP1FireEvent2	./src/emucore/Paddles.hxx	/^                myP0FireEvent1, myP0FireEvent2, myP1FireEvent1, myP1FireEvent2;$/;"	m	class:Paddles
myP1IncEvent1	./src/emucore/Paddles.hxx	/^                myP1DecEvent1, myP1DecEvent2, myP1IncEvent1, myP1IncEvent2,$/;"	m	class:Paddles
myP1IncEvent2	./src/emucore/Paddles.hxx	/^                myP1DecEvent1, myP1DecEvent2, myP1IncEvent1, myP1IncEvent2,$/;"	m	class:Paddles
myP4	./src/emucore/TIASnd.hxx	/^    uInt8 myP4[2];           \/\/ 4-bit register LFSR (lower 4 bits used)$/;"	m	class:TIASound
myP5	./src/emucore/TIASnd.hxx	/^    uInt8 myP5[2];           \/\/ 5-bit register LFSR (lower 5 bits used)$/;"	m	class:TIASound
myPCGrid	./src/debugger/gui/CpuWidget.hxx	/^    DataGridWidget*  myPCGrid;$/;"	m	class:CpuWidget
myPCLabel	./src/debugger/gui/CpuWidget.hxx	/^    EditTextWidget*  myPCLabel;$/;"	m	class:CpuWidget
myPF	./src/debugger/gui/TiaWidget.hxx	/^    TogglePixelWidget* myPF[3];$/;"	m	class:TiaWidget
myPF	./src/emucore/TIA.hxx	/^    uInt32 myPF;          \/\/ Playfield graphics (19-12:PF2 11-4:PF1 3-0:PF0)$/;"	m	class:TIA
myPFBit	./src/emucore/TIA.hxx	/^      myPFBit = 0x20,         \/\/ Bit for Playfield$/;"	e	enum:TIA::__anon6
myPOSBL	./src/emucore/TIA.hxx	/^    Int16 myPOSBL;         \/\/ Ball position register$/;"	m	class:TIA
myPOSM0	./src/emucore/TIA.hxx	/^    Int16 myPOSM0;         \/\/ Missle 0 position register$/;"	m	class:TIA
myPOSM1	./src/emucore/TIA.hxx	/^    Int16 myPOSM1;         \/\/ Missle 1 position register$/;"	m	class:TIA
myPOSP0	./src/emucore/TIA.hxx	/^    Int16 myPOSP0;         \/\/ Player 0 position register$/;"	m	class:TIA
myPOSP1	./src/emucore/TIA.hxx	/^    Int16 myPOSP1;         \/\/ Player 1 position register$/;"	m	class:TIA
myPPBlend	./src/gui/GameInfoDialog.hxx	/^    SliderWidget*     myPPBlend;$/;"	m	class:GameInfoDialog
myPPBlendLabel	./src/gui/GameInfoDialog.hxx	/^    StaticTextWidget* myPPBlendLabel;$/;"	m	class:GameInfoDialog
myPSRegister	./src/debugger/gui/CpuWidget.hxx	/^    ToggleBitWidget* myPSRegister;$/;"	m	class:CpuWidget
myPaddleLabel	./src/gui/InputDialog.hxx	/^    StaticTextWidget* myPaddleLabel;$/;"	m	class:InputDialog
myPaddleMode	./src/emucore/EventHandler.hxx	/^    Int8 myPaddleMode;$/;"	m	class:EventHandler
myPaddleMode	./src/gui/InputDialog.hxx	/^    SliderWidget*     myPaddleMode;$/;"	m	class:InputDialog
myPaddleModeLabel	./src/gui/InputDialog.hxx	/^    StaticTextWidget* myPaddleModeLabel;$/;"	m	class:InputDialog
myPaddleRepeat0	./src/emucore/Paddles.hxx	/^    int myPaddleRepeat0;$/;"	m	class:Paddles
myPaddleRepeat1	./src/emucore/Paddles.hxx	/^    int myPaddleRepeat1;$/;"	m	class:Paddles
myPaddleSpeed	./src/gui/InputDialog.hxx	/^    SliderWidget*     myPaddleSpeed;$/;"	m	class:InputDialog
myPage	./src/gui/AboutDialog.hxx	/^    int myPage;$/;"	m	class:AboutDialog
myPage	./src/gui/HelpDialog.hxx	/^    uInt8 myPage;$/;"	m	class:HelpDialog
myPageAccessTable	./src/emucore/m6502/src/System.hxx	/^    PageAccess* myPageAccessTable;$/;"	m	class:System
myPageMask	./src/emucore/m6502/src/System.hxx	/^    const uInt16 myPageMask;$/;"	m	class:System
myPageShift	./src/emucore/m6502/src/System.hxx	/^    const uInt16 myPageShift;$/;"	m	class:System
myPaletteFile	./src/emucore/OSystem.hxx	/^    string myPaletteFile;$/;"	m	class:OSystem
myPaletteFile	./src/gui/FileSnapDialog.hxx	/^    EditTextWidget* myPaletteFile;$/;"	m	class:FileSnapDialog
myPalettePopup	./src/gui/UIDialog.hxx	/^    PopUpWidget* myPalettePopup;$/;"	m	class:UIDialog
myPalettePopup	./src/gui/VideoDialog.hxx	/^    PopUpWidget*      myPalettePopup;$/;"	m	class:VideoDialog
myParent	./src/gui/GuiObject.hxx	/^    DialogContainer* myParent;$/;"	m	class:GuiObject
myParser	./src/debugger/Debugger.hxx	/^    DebuggerParser* myParser;$/;"	m	class:Debugger
myPartialFrameFlag	./src/emucore/TIA.hxx	/^    bool myPartialFrameFlag;$/;"	m	class:TIA
myPausedCount	./src/emucore/FrameBuffer.hxx	/^    uInt32 myPausedCount;$/;"	m	class:FrameBuffer
myPerFrameList	./src/cheat/CheatManager.hxx	/^    CheatList myPerFrameList;$/;"	m	class:CheatManager
myPhosphor	./src/gui/GameInfoDialog.hxx	/^    PopUpWidget*      myPhosphor;$/;"	m	class:GameInfoDialog
myPhosphorBlend	./src/emucore/FrameBuffer.hxx	/^    int myPhosphorBlend;$/;"	m	class:FrameBuffer
myPinState	./src/emucore/AtariVox.hxx	/^    uInt8 myPinState;$/;"	m	class:AtariVox
myPinState	./src/emucore/Keyboard.hxx	/^    uInt8 myPinState;$/;"	m	class:Keyboard
myPitch	./src/common/FrameBufferSoft.hxx	/^    int myPitch;$/;"	m	class:FrameBufferSoft
myPitch	./src/gp2x/FrameBufferGP2X.hxx	/^    int myPitch;$/;"	m	class:FrameBufferGP2X
myPixelPosition	./src/debugger/gui/TiaInfoWidget.hxx	/^    EditTextWidget* myPixelPosition;$/;"	m	class:TiaInfoWidget
myPlayfieldPriorityAndScore	./src/emucore/TIA.hxx	/^    uInt8 myPlayfieldPriorityAndScore;$/;"	m	class:TIA
myPopUpDialog	./src/gui/PopUpWidget.hxx	/^    PopUpDialog* myPopUpDialog;$/;"	m	class:PopUpWidget
myPosBL	./src/debugger/gui/TiaWidget.hxx	/^    DataGridWidget* myPosBL;$/;"	m	class:TiaWidget
myPosM0	./src/debugger/gui/TiaWidget.hxx	/^    DataGridWidget* myPosM0;$/;"	m	class:TiaWidget
myPosM1	./src/debugger/gui/TiaWidget.hxx	/^    DataGridWidget* myPosM1;$/;"	m	class:TiaWidget
myPosP0	./src/debugger/gui/TiaWidget.hxx	/^    DataGridWidget* myPosP0;$/;"	m	class:TiaWidget
myPosP1	./src/debugger/gui/TiaWidget.hxx	/^    DataGridWidget* myPosP1;$/;"	m	class:TiaWidget
myPoundEvent	./src/emucore/Keyboard.hxx	/^                myStarEvent, myZeroEvent, myPoundEvent;$/;"	m	class:Keyboard
myPower	./src/emucore/CartAR.hxx	/^    bool myPower;$/;"	m	class:CartridgeAR
myPowerRomCycle	./src/emucore/CartAR.hxx	/^    Int32 myPowerRomCycle;$/;"	m	class:CartridgeAR
myPrevButton	./src/gui/AboutDialog.hxx	/^    ButtonWidget* myPrevButton;$/;"	m	class:AboutDialog
myPrevButton	./src/gui/HelpDialog.hxx	/^    ButtonWidget* myPrevButton;$/;"	m	class:HelpDialog
myPrevDirButton	./src/gui/LauncherDialog.hxx	/^    ButtonWidget* myPrevDirButton;$/;"	m	class:LauncherDialog
myPreviousEvents	./src/gp2x/OSystemGP2X.hxx	/^    uInt8* myPreviousEvents;$/;"	m	class:OSystemGP2X
myPreviousFrameBuffer	./src/emucore/TIA.hxx	/^    uInt8* myPreviousFrameBuffer;$/;"	m	class:TIA
myPriorityEncoder	./src/emucore/TIA.hxx	/^    uInt8 myPriorityEncoder[2][256];$/;"	m	class:TIA
myPriorityPF	./src/debugger/gui/TiaWidget.hxx	/^    CheckboxWidget* myPriorityPF;$/;"	m	class:TiaWidget
myProgramImage	./src/emucore/CartDPC.hxx	/^    uInt8 myProgramImage[8192];$/;"	m	class:CartridgeDPC
myProgressBar	./src/gui/LauncherDialog.hxx	/^    ProgressDialog*   myProgressBar;$/;"	m	class:LauncherDialog
myPrompt	./src/debugger/Debugger.hxx	/^    PromptWidget*   myPrompt;$/;"	m	class:Debugger
myPrompt	./src/debugger/gui/DebuggerDialog.hxx	/^    PromptWidget*    myPrompt;$/;"	m	class:DebuggerDialog
myPropSet	./src/emucore/OSystem.hxx	/^    PropertiesSet* myPropSet;$/;"	m	class:OSystem
myProperties	./src/emucore/Console.hxx	/^    Properties myProperties;$/;"	m	class:Console
myProperties	./src/emucore/Props.hxx	/^    string myProperties[LastPropType];$/;"	m	class:Properties
myProperties	./src/gui/RomInfoWidget.hxx	/^    Properties myProperties;$/;"	m	class:RomInfoWidget
myPropertiesFile	./src/emucore/OSystem.hxx	/^    string myPropertiesFile;$/;"	m	class:OSystem
myPropertiesLoaded	./src/gui/GameInfoDialog.hxx	/^    bool myPropertiesLoaded;$/;"	m	class:GameInfoDialog
myPropsFile	./src/gui/FileSnapDialog.hxx	/^    EditTextWidget* myPropsFile;$/;"	m	class:FileSnapDialog
myQuitButton	./src/gui/LauncherDialog.hxx	/^    ButtonWidget* myQuitButton;$/;"	m	class:LauncherDialog
myQuitLoop	./src/emucore/OSystem.hxx	/^    bool myQuitLoop;$/;"	m	class:OSystem
myRAM	./src/emucore/Cart4A50.hxx	/^    uInt8 myRAM[32768];$/;"	m	class:Cartridge4A50
myRAM	./src/emucore/CartCV.hxx	/^    uInt8 myRAM[1024];$/;"	m	class:CartridgeCV
myRAM	./src/emucore/CartE7.hxx	/^    uInt8 myRAM[2048];$/;"	m	class:CartridgeE7
myRAM	./src/emucore/CartF4SC.hxx	/^    uInt8 myRAM[128];$/;"	m	class:CartridgeF4SC
myRAM	./src/emucore/CartF6SC.hxx	/^    uInt8 myRAM[128];$/;"	m	class:CartridgeF6SC
myRAM	./src/emucore/CartF8SC.hxx	/^    uInt8 myRAM[128];$/;"	m	class:CartridgeF8SC
myRAM	./src/emucore/CartFASC.hxx	/^    uInt8 myRAM[256];$/;"	m	class:CartridgeFASC
myRAM	./src/emucore/CartMC.hxx	/^    uInt8* myRAM;$/;"	m	class:CartridgeMC
myRAM	./src/emucore/M6532.hxx	/^    uInt8 myRAM[128];$/;"	m	class:M6532
myREFP0	./src/emucore/TIA.hxx	/^    bool myREFP0;         \/\/ Indicates if player 0 is being reflected$/;"	m	class:TIA
myREFP1	./src/emucore/TIA.hxx	/^    bool myREFP1;         \/\/ Indicates if player 1 is being reflected$/;"	m	class:TIA
myRESMP0	./src/emucore/TIA.hxx	/^    bool myRESMP0;        \/\/ Indicates if missle 0 is reset to player 0$/;"	m	class:TIA
myRESMP1	./src/emucore/TIA.hxx	/^    bool myRESMP1;        \/\/ Indicates if missle 1 is reset to player 1$/;"	m	class:TIA
myRGB	./src/common/FrameBufferGL.hxx	/^    uInt32 myRGB[4];$/;"	m	class:FrameBufferGL
myRHS	./src/debugger/Expression.hxx	/^    Expression* myRHS;$/;"	m	class:Expression
myRam	./src/debugger/gui/DebuggerDialog.hxx	/^    RamWidget*       myRam;$/;"	m	class:DebuggerDialog
myRam	./src/emucore/Cart3E.hxx	/^    uInt8 myRam[32768];$/;"	m	class:Cartridge3E
myRamDebug	./src/debugger/Debugger.hxx	/^    RamDebug* myRamDebug;$/;"	m	class:Debugger
myRamGrid	./src/debugger/gui/RamWidget.hxx	/^    DataGridWidget* myRamGrid;$/;"	m	class:RamWidget
myRamGrid	./src/debugger/gui/TiaWidget.hxx	/^    DataGridWidget* myRamGrid;$/;"	m	class:TiaWidget
myRandomNumber	./src/emucore/CartDPC.hxx	/^    uInt8 myRandomNumber;$/;"	m	class:CartridgeDPC
myRarity	./src/gui/GameInfoDialog.hxx	/^    EditTextWidget*   myRarity;$/;"	m	class:GameInfoDialog
myReadTraps	./src/debugger/Debugger.hxx	/^    PackedBitArray* myReadTraps;$/;"	m	class:Debugger
myReadTraps	./src/emucore/m6502/src/M6502.hxx	/^    PackedBitArray* myReadTraps;$/;"	m	class:M6502
myRectList	./src/common/FrameBufferSoft.hxx	/^    RectList* myRectList;$/;"	m	class:FrameBufferSoft
myRefP0	./src/debugger/gui/TiaWidget.hxx	/^    CheckboxWidget* myRefP0;$/;"	m	class:TiaWidget
myRefP1	./src/debugger/gui/TiaWidget.hxx	/^    CheckboxWidget* myRefP1;$/;"	m	class:TiaWidget
myRefPF	./src/debugger/gui/TiaWidget.hxx	/^    CheckboxWidget* myRefPF;$/;"	m	class:TiaWidget
myRefreshFlag	./src/gui/DialogContainer.hxx	/^    bool myRefreshFlag;$/;"	m	class:DialogContainer
myRegWriteQueue	./src/common/SoundSDL.hxx	/^    RegWriteQueue myRegWriteQueue;$/;"	m	class:SoundSDL
myRegWriteQueue	./src/wince/SoundWinCE.hxx	/^    RegWriteQueue myRegWriteQueue;$/;"	m	class:SoundWinCE
myRemapStatus	./src/gui/EventMappingWidget.hxx	/^    bool myRemapStatus;$/;"	m	class:EventMappingWidget
myRemoveButton	./src/cheat/CheatCodeDialog.hxx	/^    ButtonWidget* myRemoveButton;$/;"	m	class:CheatCodeDialog
myRenderType	./src/common/FrameBufferSoft.hxx	/^    RenderType myRenderType;$/;"	m	class:FrameBufferSoft
myRendererPopup	./src/gui/VideoDialog.hxx	/^    PopUpWidget*      myRendererPopup;$/;"	m	class:VideoDialog
myResMP0	./src/debugger/gui/TiaWidget.hxx	/^    CheckboxWidget* myResMP0;$/;"	m	class:TiaWidget
myResMP1	./src/debugger/gui/TiaWidget.hxx	/^    CheckboxWidget* myResMP1;$/;"	m	class:TiaWidget
myResetBank	./src/emucore/CartF8.hxx	/^    uInt16 myResetBank;$/;"	m	class:CartridgeF8
myResolutions	./src/emucore/OSystem.hxx	/^    ResolutionList myResolutions;$/;"	m	class:OSystem
myRestartButton	./src/debugger/gui/RamWidget.hxx	/^    ButtonWidget* myRestartButton;$/;"	m	class:RamWidget
myResults1	./src/gui/RomAuditDialog.hxx	/^    StaticTextWidget* myResults1;$/;"	m	class:RomAuditDialog
myResults2	./src/gui/RomAuditDialog.hxx	/^    StaticTextWidget* myResults2;$/;"	m	class:RomAuditDialog
myRevMap	./src/debugger/EquateList.hxx	/^    addrToLabel myRevMap;$/;"	m	class:EquateList
myRevertButton	./src/debugger/gui/RamWidget.hxx	/^    ButtonWidget* myRevertButton;$/;"	m	class:RamWidget
myRightDiff	./src/gui/GameInfoDialog.hxx	/^    PopUpWidget* myRightDiff;$/;"	m	class:GameInfoDialog
myRightEvent	./src/emucore/Booster.hxx	/^    Event::Type myUpEvent, myDownEvent, myLeftEvent, myRightEvent,$/;"	m	class:BoosterGrip
myRightEvent	./src/emucore/Joystick.hxx	/^    Event::Type myUpEvent, myDownEvent, myLeftEvent, myRightEvent,$/;"	m	class:Joystick
myRightEvent	./src/emucore/TrackBall22.hxx	/^    Event::Type myUpEvent, myDownEvent, myLeftEvent, myRightEvent, myFireEvent;$/;"	m	class:TrackBall22
myRightPort	./src/gui/GameInfoDialog.hxx	/^    PopUpWidget* myRightPort;$/;"	m	class:GameInfoDialog
myRightPort	./src/gui/InputDialog.hxx	/^    PopUpWidget* myRightPort;$/;"	m	class:InputDialog
myRiot	./src/emucore/Console.hxx	/^    M6532 *myRiot;$/;"	m	class:Console
myRom	./src/debugger/Debugger.hxx	/^    RomWidget*       myRom;$/;"	m	class:Debugger
myRom	./src/debugger/gui/DebuggerDialog.hxx	/^    RomWidget*       myRom;$/;"	m	class:DebuggerDialog
myRomAuditButton	./src/gui/OptionsDialog.hxx	/^    ButtonWidget* myRomAuditButton;$/;"	m	class:OptionsDialog
myRomAuditDialog	./src/gui/OptionsDialog.hxx	/^    RomAuditDialog*  myRomAuditDialog;$/;"	m	class:OptionsDialog
myRomCount	./src/gui/LauncherDialog.hxx	/^    StaticTextWidget* myRomCount;$/;"	m	class:LauncherDialog
myRomFile	./src/emucore/OSystem.hxx	/^    string myRomFile;$/;"	m	class:OSystem
myRomInfo	./src/gui/RomInfoWidget.hxx	/^    StringList myRomInfo;$/;"	m	class:RomInfoWidget
myRomInfoFlag	./src/gui/LauncherDialog.hxx	/^    bool myRomInfoFlag;$/;"	m	class:LauncherDialog
myRomInfoWidget	./src/gui/LauncherDialog.hxx	/^    RomInfoWidget*    myRomInfoWidget;$/;"	m	class:LauncherDialog
myRomList	./src/debugger/gui/RomWidget.hxx	/^    RomListWidget* myRomList;$/;"	m	class:RomWidget
myRomPath	./src/gui/FileSnapDialog.hxx	/^    EditTextWidget* myRomPath;$/;"	m	class:FileSnapDialog
myRomPath	./src/gui/RomAuditDialog.hxx	/^    EditTextWidget* myRomPath;$/;"	m	class:RomAuditDialog
myRomViewerCheckbox	./src/gui/UIDialog.hxx	/^    CheckboxWidget* myRomViewerCheckbox;$/;"	m	class:UIDialog
myRoot	./src/emucore/PropsSet.hxx	/^    TreeNode* myRoot;$/;"	m	class:PropertiesSet
mySDLFlags	./src/emucore/FrameBuffer.hxx	/^    uInt32 mySDLFlags;$/;"	m	class:FrameBuffer
mySaveRom	./src/debugger/gui/RomWidget.hxx	/^    InputTextDialog* mySaveRom;$/;"	m	class:RomWidget
myScanlineCount	./src/debugger/gui/TiaInfoWidget.hxx	/^    EditTextWidget* myScanlineCount;$/;"	m	class:TiaInfoWidget
myScanlineCountForLastFrame	./src/emucore/TIA.hxx	/^    Int32 myScanlineCountForLastFrame;$/;"	m	class:TIA
myScanlineCycles	./src/debugger/gui/TiaInfoWidget.hxx	/^    EditTextWidget* myScanlineCycles;$/;"	m	class:TiaInfoWidget
myScorePF	./src/debugger/gui/TiaWidget.hxx	/^    CheckboxWidget* myScorePF;$/;"	m	class:TiaWidget
myScreen	./src/emucore/FrameBuffer.hxx	/^    SDL_Surface* myScreen;$/;"	m	class:FrameBuffer
myScreenDim	./src/emucore/FrameBuffer.hxx	/^    SDL_Rect myScreenDim;$/;"	m	class:FrameBuffer
mySearchAddr	./src/debugger/gui/RamWidget.hxx	/^    IntArray mySearchAddr;$/;"	m	class:RamWidget
mySearchButton	./src/debugger/gui/RamWidget.hxx	/^    ButtonWidget* mySearchButton;$/;"	m	class:RamWidget
mySearchValue	./src/debugger/gui/RamWidget.hxx	/^    IntArray mySearchValue;$/;"	m	class:RamWidget
mySelectedItem	./src/gui/CommandDialog.hxx	/^    int mySelectedItem;$/;"	m	class:CommandDialog
mySelectedItem	./src/gui/LauncherDialog.hxx	/^    int mySelectedItem;$/;"	m	class:LauncherDialog
mySettings	./src/emucore/OSystem.hxx	/^    Settings* mySettings;$/;"	m	class:OSystem
mySettings	./src/emucore/TIA.hxx	/^    const Settings& mySettings;$/;"	m	class:TIA
mySevenEvent	./src/emucore/Keyboard.hxx	/^                mySevenEvent, myEightEvent, myNineEvent,$/;"	m	class:Keyboard
myShiftCount	./src/emucore/AtariVox.hxx	/^    uInt8 myShiftCount;$/;"	m	class:AtariVox
myShiftRegister	./src/emucore/AtariVox.hxx	/^    uInt16 myShiftRegister;$/;"	m	class:AtariVox
mySixEvent	./src/emucore/Keyboard.hxx	/^                myFourEvent, myFiveEvent, mySixEvent,$/;"	m	class:Keyboard
mySize	./src/common/SoundSDL.hxx	/^        uInt32 mySize;$/;"	m	class:SoundSDL::RegWriteQueue
mySize	./src/emucore/Cart3E.hxx	/^    uInt32 mySize;$/;"	m	class:Cartridge3E
mySize	./src/emucore/Cart3F.hxx	/^    uInt32 mySize;$/;"	m	class:Cartridge3F
mySize	./src/emucore/CartSB.hxx	/^    uInt32 mySize;$/;"	m	class:CartridgeSB
mySize	./src/emucore/PropsSet.hxx	/^    uInt32 mySize;$/;"	m	class:PropertiesSet
mySize	./src/wince/SoundWinCE.hxx	/^        uInt32 mySize;$/;"	m	class:SoundWinCE::RegWriteQueue
mySizeBL	./src/debugger/gui/TiaWidget.hxx	/^    DataGridWidget* mySizeBL;$/;"	m	class:TiaWidget
mySliceHigh	./src/emucore/Cart4A50.hxx	/^    uInt16 mySliceHigh;    \/* index pointer for $1e00-$1eff slice *\/$/;"	m	class:Cartridge4A50
mySliceLow	./src/emucore/Cart4A50.hxx	/^    uInt16 mySliceLow;     \/* index pointer for $1000-$17ff slice *\/$/;"	m	class:Cartridge4A50
mySliceMiddle	./src/emucore/Cart4A50.hxx	/^    uInt16 mySliceMiddle;  \/* index pointer for $1800-$1dff slice *\/$/;"	m	class:Cartridge4A50
mySlider	./src/gui/ProgressDialog.hxx	/^    SliderWidget*     mySlider;$/;"	m	class:ProgressDialog
mySlot3Locked	./src/emucore/CartMC.hxx	/^    bool mySlot3Locked;$/;"	m	class:CartridgeMC
mySnapPath	./src/gui/FileSnapDialog.hxx	/^    EditTextWidget* mySnapPath;$/;"	m	class:FileSnapDialog
mySnapSingleCheckbox	./src/gui/FileSnapDialog.hxx	/^    CheckboxWidget* mySnapSingleCheckbox;$/;"	m	class:FileSnapDialog
mySound	./src/emucore/OSystem.hxx	/^    Sound* mySound;$/;"	m	class:OSystem
mySound	./src/emucore/TIA.hxx	/^    Sound* mySound;$/;"	m	class:TIA
mySound	./src/gui/GameInfoDialog.hxx	/^    PopUpWidget*      mySound;$/;"	m	class:GameInfoDialog
mySoundEnableCheckbox	./src/gui/AudioDialog.hxx	/^    CheckboxWidget*   mySoundEnableCheckbox;$/;"	m	class:AudioDialog
mySourceAvailable	./src/debugger/gui/RomWidget.hxx	/^    bool mySourceAvailable;$/;"	m	class:RomWidget
mySpeakJet	./src/emucore/AtariVox.hxx	/^    SpeakJet *mySpeakJet;$/;"	m	class:AtariVox
myStarEvent	./src/emucore/Keyboard.hxx	/^                myStarEvent, myZeroEvent, myPoundEvent;$/;"	m	class:Keyboard
myStart	./src/gui/ProgressDialog.hxx	/^    int myStart, myFinish, myStep, myCurrentStep;$/;"	m	class:ProgressDialog
myStartButton	./src/gui/LauncherDialog.hxx	/^    ButtonWidget* myStartButton;$/;"	m	class:LauncherDialog
myStartDisplayOffset	./src/emucore/TIA.hxx	/^    uInt32 myStartDisplayOffset;$/;"	m	class:TIA
myState	./src/debugger/CpuDebug.hxx	/^    CpuState myState;$/;"	m	class:CpuDebug
myState	./src/debugger/RamDebug.hxx	/^    RamState myState;$/;"	m	class:RamDebug
myState	./src/debugger/TIADebug.hxx	/^    TiaState myState;$/;"	m	class:TIADebug
myState	./src/emucore/EventHandler.hxx	/^    State myState;$/;"	m	class:EventHandler
myStateDir	./src/emucore/OSystem.hxx	/^    string myStateDir;$/;"	m	class:OSystem
myStateManager	./src/emucore/OSystem.hxx	/^    StateManager* myStateManager;$/;"	m	class:OSystem
myStatePath	./src/gui/FileSnapDialog.hxx	/^    EditTextWidget* myStatePath;$/;"	m	class:FileSnapDialog
myStaticDebugger	./src/debugger/Debugger.cxx	/^Debugger* Debugger::myStaticDebugger;$/;"	m	class:Debugger	file:
myStaticDebugger	./src/debugger/Debugger.hxx	/^    static Debugger* myStaticDebugger;$/;"	m	class:Debugger
myStep	./src/gui/ProgressDialog.hxx	/^    int myStart, myFinish, myStep, myCurrentStep;$/;"	m	class:ProgressDialog
myStopDisplayOffset	./src/emucore/TIA.hxx	/^    uInt32 myStopDisplayOffset;$/;"	m	class:TIA
myStream	./src/emucore/Deserializer.hxx	/^    fstream myStream;$/;"	m	class:Deserializer
myStream	./src/emucore/Serializer.hxx	/^    fstream myStream;$/;"	m	class:Serializer
mySurface	./src/gui/RomInfoWidget.hxx	/^    GUI::Surface* mySurface;$/;"	m	class:RomInfoWidget
mySurfaceErrorMsg	./src/gui/RomInfoWidget.hxx	/^    string mySurfaceErrorMsg;$/;"	m	class:RomInfoWidget
mySwapPaddles	./src/gui/GameInfoDialog.hxx	/^    PopUpWidget* mySwapPaddles;$/;"	m	class:GameInfoDialog
mySwitches	./src/emucore/Console.hxx	/^    Switches* mySwitches;$/;"	m	class:Console
mySwitches	./src/emucore/Switches.hxx	/^    uInt8 mySwitches;$/;"	m	class:Switches
mySystem	./src/debugger/CpuDebug.hxx	/^    System* mySystem;$/;"	m	class:CpuDebug
mySystem	./src/debugger/Debugger.hxx	/^    System*  mySystem;$/;"	m	class:Debugger
mySystem	./src/debugger/RamDebug.hxx	/^    System* mySystem;$/;"	m	class:RamDebug
mySystem	./src/debugger/TIADebug.hxx	/^    System* mySystem;$/;"	m	class:TIADebug
mySystem	./src/emucore/Console.hxx	/^    System* mySystem;$/;"	m	class:Console
mySystem	./src/emucore/Control.hxx	/^    System* mySystem;$/;"	m	class:Controller
mySystem	./src/emucore/m6502/src/Device.hxx	/^    System* mySystem;$/;"	m	class:Device
mySystem	./src/emucore/m6502/src/M6502.hxx	/^    System* mySystem;$/;"	m	class:M6502
mySystemCycles	./src/emucore/CartDPC.hxx	/^    Int32 mySystemCycles;$/;"	m	class:CartridgeDPC
mySystemCyclesPerProcessorCycle	./src/emucore/m6502/src/M6502.hxx	/^    const uInt32 mySystemCyclesPerProcessorCycle;$/;"	m	class:M6502
myTIA	./src/debugger/TIADebug.hxx	/^    TIA*    myTIA;$/;"	m	class:TIADebug
myTIA	./src/emucore/m6502/src/System.hxx	/^    TIA* myTIA;$/;"	m	class:System
myTIAFrequency	./src/emucore/TIASnd.hxx	/^    Int32  myTIAFrequency;$/;"	m	class:TIASound
myTIASound	./src/common/SoundSDL.hxx	/^    TIASound myTIASound;$/;"	m	class:SoundSDL
myTIASound	./src/wince/SoundWinCE.hxx	/^    TIASound myTIASound;$/;"	m	class:SoundWinCE
myTIAZoomLabel	./src/gui/VideoDialog.hxx	/^    StaticTextWidget* myTIAZoomLabel;$/;"	m	class:VideoDialog
myTIAZoomSlider	./src/gui/VideoDialog.hxx	/^    SliderWidget*     myTIAZoomSlider;$/;"	m	class:VideoDialog
myTVType	./src/gui/GameInfoDialog.hxx	/^    PopUpWidget* myTVType;$/;"	m	class:GameInfoDialog
myTab	./src/debugger/gui/DebuggerDialog.hxx	/^    TabWidget* myTab;$/;"	m	class:DebuggerDialog
myTab	./src/gui/GameInfoDialog.hxx	/^    TabWidget* myTab;$/;"	m	class:GameInfoDialog
myTab	./src/gui/InputDialog.hxx	/^    TabWidget* myTab;$/;"	m	class:InputDialog
myTab	./src/gui/UIDialog.hxx	/^    TabWidget* myTab;$/;"	m	class:UIDialog
myTail	./src/common/SoundSDL.hxx	/^        uInt32 myTail;$/;"	m	class:SoundSDL::RegWriteQueue
myTail	./src/wince/SoundWinCE.hxx	/^        uInt32 myTail;$/;"	m	class:SoundWinCE::RegWriteQueue
myTextY	./src/gui/PopUpWidget.hxx	/^    int myTextY;$/;"	m	class:PopUpWidget
myTexture	./src/common/FrameBufferGL.hxx	/^    SDL_Surface* myTexture;$/;"	m	class:FrameBufferGL
myThreeEvent	./src/emucore/Keyboard.hxx	/^    Event::Type myOneEvent, myTwoEvent, myThreeEvent,$/;"	m	class:Keyboard
myTiaDebug	./src/debugger/Debugger.hxx	/^    TIADebug* myTiaDebug;$/;"	m	class:Debugger
myTiaFreqPopup	./src/gui/AudioDialog.hxx	/^    PopUpWidget*      myTiaFreqPopup;$/;"	m	class:AudioDialog
myTiaInfo	./src/debugger/Debugger.hxx	/^    TiaInfoWidget*   myTiaInfo;$/;"	m	class:Debugger
myTiaInfo	./src/debugger/gui/DebuggerDialog.hxx	/^    TiaInfoWidget*   myTiaInfo;$/;"	m	class:DebuggerDialog
myTiaOutput	./src/debugger/Debugger.hxx	/^    TiaOutputWidget* myTiaOutput;$/;"	m	class:Debugger
myTiaOutput	./src/debugger/gui/DebuggerDialog.hxx	/^    TiaOutputWidget* myTiaOutput;$/;"	m	class:DebuggerDialog
myTiaZoom	./src/debugger/Debugger.hxx	/^    TiaZoomWidget*   myTiaZoom;$/;"	m	class:Debugger
myTiaZoom	./src/debugger/gui/DebuggerDialog.hxx	/^    TiaZoomWidget*   myTiaZoom;$/;"	m	class:DebuggerDialog
myTime	./src/gui/DialogContainer.hxx	/^    int myTime;$/;"	m	class:DialogContainer
myTimePerFrame	./src/emucore/OSystem.hxx	/^    uInt32 myTimePerFrame;$/;"	m	class:OSystem
myTimer	./src/emucore/M6532.hxx	/^    uInt32 myTimer;$/;"	m	class:M6532
myTimerReadAfterInterrupt	./src/emucore/M6532.hxx	/^    bool myTimerReadAfterInterrupt;$/;"	m	class:M6532
myTimingInfo	./src/emucore/OSystem.hxx	/^    TimingInfo myTimingInfo;$/;"	m	class:OSystem
myTitle	./src/gui/AboutDialog.hxx	/^    StaticTextWidget* myTitle;$/;"	m	class:AboutDialog
myTitle	./src/gui/HelpDialog.hxx	/^    StaticTextWidget* myTitle;$/;"	m	class:HelpDialog
myTitle	./src/gui/InputTextDialog.hxx	/^    StaticTextWidget* myTitle;$/;"	m	class:InputTextDialog
myTops	./src/emucore/CartDPC.hxx	/^    uInt8 myTops[8];$/;"	m	class:CartridgeDPC
myTotalInstructionCount	./src/emucore/m6502/src/M6502.hxx	/^    int myTotalInstructionCount;$/;"	m	class:M6502
myTriggerEvent	./src/emucore/Booster.hxx	/^                myFireEvent, myBoosterEvent, myTriggerEvent,$/;"	m	class:BoosterGrip
myTvHeight	./src/gp2x/FrameBufferGP2X.hxx	/^    int myTvHeight;$/;"	m	class:FrameBufferGP2X
myTwoEvent	./src/emucore/Keyboard.hxx	/^    Event::Type myOneEvent, myTwoEvent, myThreeEvent,$/;"	m	class:Keyboard
myType	./src/emucore/Control.hxx	/^    const Type myType;$/;"	m	class:Controller
myType	./src/gui/GameInfoDialog.hxx	/^    PopUpWidget*      myType;$/;"	m	class:GameInfoDialog
myUIButton	./src/gui/OptionsDialog.hxx	/^    ButtonWidget* myUIButton;$/;"	m	class:OptionsDialog
myUIDialog	./src/gui/OptionsDialog.hxx	/^    UIDialog*        myUIDialog;$/;"	m	class:OptionsDialog
myUIZoomLabel	./src/gui/VideoDialog.hxx	/^    StaticTextWidget* myUIZoomLabel;$/;"	m	class:VideoDialog
myUIZoomSlider	./src/gui/VideoDialog.hxx	/^    SliderWidget*     myUIZoomSlider;$/;"	m	class:VideoDialog
myUndoAddress	./src/debugger/gui/RamWidget.hxx	/^    int myUndoAddress;$/;"	m	class:RamWidget
myUndoButton	./src/debugger/gui/RamWidget.hxx	/^    ButtonWidget* myUndoButton;$/;"	m	class:RamWidget
myUndoValue	./src/debugger/gui/RamWidget.hxx	/^    int myUndoValue;$/;"	m	class:RamWidget
myUpEvent	./src/emucore/Booster.hxx	/^    Event::Type myUpEvent, myDownEvent, myLeftEvent, myRightEvent,$/;"	m	class:BoosterGrip
myUpEvent	./src/emucore/Joystick.hxx	/^    Event::Type myUpEvent, myDownEvent, myLeftEvent, myRightEvent,$/;"	m	class:Joystick
myUpEvent	./src/emucore/TrackBall22.hxx	/^    Event::Type myUpEvent, myDownEvent, myLeftEvent, myRightEvent, myFireEvent;$/;"	m	class:TrackBall22
myUseLauncherFlag	./src/emucore/EventHandler.hxx	/^    bool myUseLauncherFlag;$/;"	m	class:EventHandler
myUsePhosphor	./src/emucore/FrameBuffer.hxx	/^    bool myUsePhosphor;$/;"	m	class:FrameBuffer
myUseVSyncCheckbox	./src/gui/VideoDialog.hxx	/^    CheckboxWidget*   myUseVSyncCheckbox;$/;"	m	class:VideoDialog
myUserPaletteDefined	./src/emucore/Console.hxx	/^    bool myUserPaletteDefined;$/;"	m	class:Console
myVBLANK	./src/emucore/TIA.hxx	/^    uInt8 myVBLANK;       \/\/ Holds the VBLANK register value$/;"	m	class:TIA
myVBlank	./src/debugger/gui/TiaInfoWidget.hxx	/^    CheckboxWidget* myVBlank;$/;"	m	class:TiaInfoWidget
myVCounter	./src/emucore/TrackBall22.hxx	/^    uInt32 myHCounter, myVCounter;$/;"	m	class:TrackBall22
myVDELBL	./src/emucore/TIA.hxx	/^    bool myVDELBL;        \/\/ Indicates if the ball is being virtically delayed$/;"	m	class:TIA
myVDELP0	./src/emucore/TIA.hxx	/^    bool myVDELP0;        \/\/ Indicates if player 0 is being virtically delayed$/;"	m	class:TIA
myVDELP1	./src/emucore/TIA.hxx	/^    bool myVDELP1;        \/\/ Indicates if player 1 is being virtically delayed$/;"	m	class:TIA
myVSYNC	./src/emucore/TIA.hxx	/^    uInt8 myVSYNC;        \/\/ Holds the VSYNC register value$/;"	m	class:TIA
myVSYNCFinishClock	./src/emucore/TIA.hxx	/^    Int32 myVSYNCFinishClock; $/;"	m	class:TIA
myVSync	./src/debugger/gui/TiaInfoWidget.hxx	/^    CheckboxWidget* myVSync;$/;"	m	class:TiaInfoWidget
myValue	./src/debugger/DebuggerExpressions.hxx	/^    int myValue;$/;"	m	class:ConstExpression
myValue	./src/emucore/Random.hxx	/^    uInt32 myValue;$/;"	m	class:Random
myValues	./src/emucore/Event.hxx	/^    Int32 myValues[LastType];$/;"	m	class:Event
myVideoDialog	./src/gui/OptionsDialog.hxx	/^    VideoDialog*     myVideoDialog;$/;"	m	class:OptionsDialog
myVideoSettingsButton	./src/gui/OptionsDialog.hxx	/^    ButtonWidget* myVideoSettingsButton;$/;"	m	class:OptionsDialog
myVolume	./src/common/SoundSDL.hxx	/^    uInt32 myVolume;$/;"	m	class:SoundSDL
myVolume	./src/wince/SoundWinCE.hxx	/^    uInt32 myVolume;$/;"	m	class:SoundWinCE
myVolumeClip	./src/emucore/TIASnd.hxx	/^    uInt8  myVolumeClip;$/;"	m	class:TIASound
myVolumeLabel	./src/gui/AudioDialog.hxx	/^    StaticTextWidget* myVolumeLabel;$/;"	m	class:AudioDialog
myVolumePercentage	./src/emucore/TIASnd.hxx	/^    uInt32 myVolumePercentage;$/;"	m	class:TIASound
myVolumeSlider	./src/gui/AudioDialog.hxx	/^    SliderWidget*     myVolumeSlider;$/;"	m	class:AudioDialog
myWheelLinesLabel	./src/gui/UIDialog.hxx	/^    StaticTextWidget* myWheelLinesLabel;$/;"	m	class:UIDialog
myWheelLinesSlider	./src/gui/UIDialog.hxx	/^    SliderWidget*     myWheelLinesSlider;$/;"	m	class:UIDialog
myWidth	./src/debugger/Debugger.hxx	/^    uInt32 myWidth;$/;"	m	class:Debugger
myWidth	./src/gui/Launcher.hxx	/^    uInt32 myWidth;$/;"	m	class:Launcher
myWidth	./src/wince/FrameBufferWinCE.hxx	/^	uInt16 pal[256+kNumColors], myWidth, myWidthdiv4, myHeight, scrwidth, scrheight;$/;"	m	class:FrameBufferWinCE
myWidthScaleFactor	./src/common/FrameBufferGL.hxx	/^    float myWidthScaleFactor, myHeightScaleFactor;$/;"	m	class:FrameBufferGL
myWidthdiv4	./src/wince/FrameBufferWinCE.hxx	/^	uInt16 pal[256+kNumColors], myWidth, myWidthdiv4, myHeight, scrwidth, scrheight;$/;"	m	class:FrameBufferWinCE
myWindowedModeList	./src/emucore/FrameBuffer.hxx	/^    VideoModeList myWindowedModeList;$/;"	m	class:FrameBuffer
myWout	./src/wince/SoundWinCE.hxx	/^	HWAVEOUT myWout;$/;"	m	class:SoundWinCE
myWriteEnabled	./src/emucore/CartAR.hxx	/^    bool myWriteEnabled;$/;"	m	class:CartridgeAR
myWritePending	./src/emucore/CartAR.hxx	/^    bool myWritePending;$/;"	m	class:CartridgeAR
myWriteTraps	./src/debugger/Debugger.hxx	/^    PackedBitArray* myWriteTraps;$/;"	m	class:Debugger
myWriteTraps	./src/emucore/m6502/src/M6502.hxx	/^    PackedBitArray* myWriteTraps;$/;"	m	class:M6502
myXAxisValue	./src/emucore/Booster.hxx	/^                myXAxisValue, myYAxisValue;$/;"	m	class:BoosterGrip
myXAxisValue	./src/emucore/Driving.hxx	/^    Event::Type myCWEvent, myCCWEvent, myFireEvent, myXAxisValue, myYAxisValue;$/;"	m	class:Driving
myXAxisValue	./src/emucore/Joystick.hxx	/^                myXAxisValue, myYAxisValue, myFireEvent;$/;"	m	class:Joystick
myXCenter	./src/debugger/gui/TiaZoomWidget.hxx	/^    int myXCenter, myYCenter;$/;"	m	class:TiaZoomWidget
myXoff	./src/debugger/gui/TiaZoomWidget.hxx	/^    int myXoff, myYoff;$/;"	m	class:TiaZoomWidget
myYAxisValue	./src/emucore/Booster.hxx	/^                myXAxisValue, myYAxisValue;$/;"	m	class:BoosterGrip
myYAxisValue	./src/emucore/Driving.hxx	/^    Event::Type myCWEvent, myCCWEvent, myFireEvent, myXAxisValue, myYAxisValue;$/;"	m	class:Driving
myYAxisValue	./src/emucore/Joystick.hxx	/^                myXAxisValue, myYAxisValue, myFireEvent;$/;"	m	class:Joystick
myYCenter	./src/debugger/gui/TiaZoomWidget.hxx	/^    int myXCenter, myYCenter;$/;"	m	class:TiaZoomWidget
myYStart	./src/emucore/TIA.hxx	/^    uInt32 myYStart;$/;"	m	class:TIA
myYStart	./src/gui/GameInfoDialog.hxx	/^    EditTextWidget*   myYStart;$/;"	m	class:GameInfoDialog
myYoff	./src/debugger/gui/TiaZoomWidget.hxx	/^    int myXoff, myYoff;$/;"	m	class:TiaZoomWidget
myZeroEvent	./src/emucore/Keyboard.hxx	/^                myStarEvent, myZeroEvent, myPoundEvent;$/;"	m	class:Keyboard
myZoom	./src/debugger/gui/TiaOutputWidget.hxx	/^    TiaZoomWidget* myZoom;$/;"	m	class:TiaOutputWidget
myZoomLevel	./src/common/FrameBufferSoft.hxx	/^    int myZoomLevel;$/;"	m	class:FrameBufferSoft
myZoomLevel	./src/debugger/gui/TiaZoomWidget.hxx	/^    int myZoomLevel;$/;"	m	class:TiaZoomWidget
n	./src/debugger/CpuDebug.hxx	/^    int n() { return mySystem->m6502().N; }$/;"	f	class:CpuDebug
name	./src/cheat/Cheat.hxx	/^    const string& name() const { return myName; }$/;"	f	class:Cheat
name	./src/common/VideoModeList.hxx	/^  string name;$/;"	m	struct:VideoMode
name	./src/emucore/Cart0840.hxx	/^    virtual string name() const { return "Cartridge0840"; }$/;"	f	class:Cartridge0840
name	./src/emucore/Cart2K.hxx	/^    virtual string name() const { return "Cartridge2K"; }$/;"	f	class:Cartridge2K
name	./src/emucore/Cart3E.hxx	/^    virtual string name() const { return "Cartridge3E"; }$/;"	f	class:Cartridge3E
name	./src/emucore/Cart3F.hxx	/^    virtual string name() const { return "Cartridge3F"; }$/;"	f	class:Cartridge3F
name	./src/emucore/Cart4A50.hxx	/^    virtual string name() const { return "Cartridge4A50"; }$/;"	f	class:Cartridge4A50
name	./src/emucore/Cart4K.hxx	/^    virtual string name() const { return "Cartridge4K"; }$/;"	f	class:Cartridge4K
name	./src/emucore/CartAR.hxx	/^    virtual string name() const { return "CartridgeAR"; }$/;"	f	class:CartridgeAR
name	./src/emucore/CartCV.hxx	/^    virtual string name() const { return "CartridgeCV"; }$/;"	f	class:CartridgeCV
name	./src/emucore/CartDPC.hxx	/^    virtual string name() const { return "CartridgeDPC"; }$/;"	f	class:CartridgeDPC
name	./src/emucore/CartE0.hxx	/^    virtual string name() const { return "CartridgeE0"; }$/;"	f	class:CartridgeE0
name	./src/emucore/CartE7.hxx	/^    virtual string name() const { return "CartridgeE7"; }$/;"	f	class:CartridgeE7
name	./src/emucore/CartF4.hxx	/^    virtual string name() const { return "CartridgeF4"; }$/;"	f	class:CartridgeF4
name	./src/emucore/CartF4SC.hxx	/^    virtual string name() const { return "CartridgeF4SC"; }$/;"	f	class:CartridgeF4SC
name	./src/emucore/CartF6.hxx	/^    virtual string name() const { return "CartridgeF6"; }$/;"	f	class:CartridgeF6
name	./src/emucore/CartF6SC.hxx	/^    virtual string name() const { return "CartridgeF6SC"; }$/;"	f	class:CartridgeF6SC
name	./src/emucore/CartF8.hxx	/^    virtual string name() const { return "CartridgeF8"; }$/;"	f	class:CartridgeF8
name	./src/emucore/CartF8SC.hxx	/^    virtual string name() const { return "CartridgeF8SC"; }$/;"	f	class:CartridgeF8SC
name	./src/emucore/CartFASC.hxx	/^    virtual string name() const { return "CartridgeFASC"; }$/;"	f	class:CartridgeFASC
name	./src/emucore/CartFE.hxx	/^    virtual string name() const { return "CartridgeFE"; }$/;"	f	class:CartridgeFE
name	./src/emucore/CartMB.hxx	/^    virtual string name() const { return "CartridgeMB"; }$/;"	f	class:CartridgeMB
name	./src/emucore/CartMC.hxx	/^    virtual string name() const { return "CartridgeMC"; }$/;"	f	class:CartridgeMC
name	./src/emucore/CartSB.hxx	/^    virtual string name() const { return "CartridgeSB"; }$/;"	f	class:CartridgeSB
name	./src/emucore/CartUA.hxx	/^    virtual string name() const { return "CartridgeUA"; }$/;"	f	class:CartridgeUA
name	./src/emucore/CartX07.hxx	/^    virtual string name() const { return "CartridgeX07"; }$/;"	f	class:CartridgeX07
name	./src/emucore/Console.hxx	/^    string name() const { return "Console"; }$/;"	f	class:Console
name	./src/emucore/Control.cxx	/^string Controller::name() const$/;"	f	class:Controller
name	./src/emucore/EventHandler.hxx	/^      string        name;$/;"	m	struct:EventHandler::Stella_Joystick
name	./src/emucore/M6532.hxx	/^    virtual string name() const { return "M6532"; }$/;"	f	class:M6532
name	./src/emucore/OSystem.hxx	/^  string name;$/;"	m	struct:Resolution
name	./src/emucore/Switches.hxx	/^    string name() const { return "Switches"; }$/;"	f	class:Switches
name	./src/emucore/TIA.hxx	/^    virtual string name() const { return "TIA"; }$/;"	f	class:TIA
name	./src/emucore/m6502/src/M6502Hi.cxx	/^const char* M6502High::name() const$/;"	f	class:M6502High
name	./src/emucore/m6502/src/M6502Low.cxx	/^const char* M6502Low::name() const$/;"	f	class:M6502Low
name	./src/emucore/m6502/src/NullDev.hxx	/^    string name() const { return "NullDevice"; }$/;"	f	class:NullDevice
name	./src/emucore/m6502/src/System.hxx	/^    virtual string name() const { return "System"; }$/;"	f	class:System
name	./src/gui/Font.hxx	/^  const char*   name;        \/* font name *\/$/;"	m	struct:__anon35
name	./src/gui/GameInfoDialog.hxx	/^      const char* name;$/;"	m	struct:GameInfoDialog::PropType
name	./src/gui/GameList.hxx	/^    inline const string& name(int i)$/;"	f	class:GameList
name	./src/gui/PopUpWidget.hxx	/^    string name;$/;"	m	struct:PopUpWidget::Entry
needParameter	./src/emucore/SpeakJet.hxx	/^    bool needParameter;$/;"	m	class:SpeakJet
negateCell	./src/debugger/gui/DataGridWidget.cxx	/^void DataGridWidget::negateCell()$/;"	f	class:DataGridWidget
next	./src/common/VideoModeList.hxx	/^    const VideoMode& next()$/;"	f	class:VideoModeList
next	./src/emucore/Random.cxx	/^uInt32 Random::next()$/;"	f	class:Random
next	./src/emucore/SpeakJet.hxx	/^    SpeechBuffer *next;$/;"	m	struct:SpeechBuffer
nextFrame	./src/debugger/Debugger.cxx	/^void Debugger::nextFrame(int frames)$/;"	f	class:Debugger
nextLine	./src/debugger/gui/PromptWidget.cxx	/^void PromptWidget::nextLine()$/;"	f	class:PromptWidget
nextScanline	./src/debugger/Debugger.cxx	/^void Debugger::nextScanline(int lines)$/;"	f	class:Debugger
nmi	./src/emucore/m6502/src/M6502.cxx	/^void M6502::nmi()$/;"	f	class:M6502
nopen	./src/emucore/rsynth/opsynth.c	/^    long nopen;			\/* Number of samples in open phase of period  *\/$/;"	m	struct:rsynth_private	file:
notZ	./src/emucore/m6502/src/M6502.hxx	/^    bool notZ;  \/\/ Z flag complement for processor status register$/;"	m	class:M6502
nper	./src/emucore/rsynth/opsynth.c	/^    long nper;			\/* Current loc in voicing period 4*sample_rate *\/$/;"	m	struct:rsynth_private	file:
ns	./src/emucore/rsynth/opsynth.c	/^    unsigned long ns;$/;"	m	struct:rsynth_private	file:
nullDevice	./src/emucore/m6502/src/System.hxx	/^    NullDevice& nullDevice()$/;"	f	class:System
numRects	./src/common/RectList.cxx	/^Uint32 RectList::numRects()$/;"	f	class:RectList
num_Elements	./src/emucore/rsynth/elements.c	/^unsigned num_Elements = (sizeof(Elements) \/ sizeof(Elm_t));$/;"	v
num_file	./src/emucore/unzip.c	/^	uLong num_file;             \/* number of the current file in the zipfile*\/$/;"	m	struct:__anon2	file:
numberOfPages	./src/emucore/m6502/src/System.hxx	/^    uInt16 numberOfPages() const$/;"	f	class:System
nusiz0	./src/debugger/TIADebug.cxx	/^uInt8 TIADebug::nusiz0(int newVal)$/;"	f	class:TIADebug
nusiz1	./src/debugger/TIADebug.cxx	/^uInt8 TIADebug::nusiz1(int newVal)$/;"	f	class:TIADebug
nusizM0	./src/debugger/TIADebug.cxx	/^uInt8 TIADebug::nusizM0(int newVal)$/;"	f	class:TIADebug
nusizM1	./src/debugger/TIADebug.cxx	/^uInt8 TIADebug::nusizM1(int newVal)$/;"	f	class:TIADebug
nusizP0	./src/debugger/TIADebug.cxx	/^uInt8 TIADebug::nusizP0(int newVal)$/;"	f	class:TIADebug
nusizP0String	./src/debugger/TIADebug.hxx	/^    const string& nusizP0String() { return nusizStrings[nusizP0()]; }$/;"	f	class:TIADebug
nusizP1	./src/debugger/TIADebug.cxx	/^uInt8 TIADebug::nusizP1(int newVal)$/;"	f	class:TIADebug
nusizP1String	./src/debugger/TIADebug.hxx	/^    const string& nusizP1String() { return nusizStrings[nusizP1()]; }$/;"	f	class:TIADebug
nusizStrings	./src/debugger/TIADebug.hxx	/^    string nusizStrings[8];$/;"	m	class:TIADebug
offset	./src/gui/Font.hxx	/^  const uInt16* offset;      \/* offsets into bitmap data *\/$/;"	m	struct:__anon35
offset_central_dir	./src/emucore/unzip.c	/^	uLong offset_central_dir;   \/* offset of start of central directory with$/;"	m	struct:__anon2	file:
offset_curfile	./src/emucore/unzip.c	/^    uLong offset_curfile;\/* relative offset of local header 4 bytes *\/$/;"	m	struct:unz_file_info_internal_s	file:
offset_local_extrafield	./src/emucore/unzip.c	/^	uLong offset_local_extrafield;\/* offset of the local extra field *\/$/;"	m	struct:__anon1	file:
old_val	./src/emucore/EventHandler.hxx	/^      int x, y, x_amt, y_amt, amt, val, old_val;$/;"	m	struct:EventHandler::JoyMouse
open	./src/emucore/Deserializer.cxx	/^bool Deserializer::open(const string& fileName)$/;"	f	class:Deserializer
open	./src/emucore/Serializer.cxx	/^bool Serializer::open(const string& fileName)$/;"	f	class:Serializer
open	./src/gui/Dialog.cxx	/^void Dialog::open()$/;"	f	class:Dialog
openBrowser	./src/gui/FileSnapDialog.cxx	/^void FileSnapDialog::openBrowser(const string& title, const string& startpath,$/;"	f	class:FileSnapDialog
openBrowser	./src/gui/RomAuditDialog.cxx	/^void RomAuditDialog::openBrowser(const string& title, const string& startpath,$/;"	f	class:RomAuditDialog
openROM	./src/emucore/OSystem.cxx	/^bool OSystem::openROM(const string& rom, string& md5, uInt8** image, int* size)$/;"	f	class:OSystem
operator !=	./src/gui/Rect.hxx	/^  bool operator!=(const Point & p) const { return x != p.x || y != p.y; };$/;"	f	struct:GUI::Point
operator <	./src/emucore/FSNode.hxx	/^    virtual bool operator< (const AbstractFilesystemNode& node) const$/;"	f	class:AbstractFilesystemNode
operator <	./src/gui/GameList.cxx	/^bool GameList::Entry::operator< (const Entry& g) const$/;"	f	class:GameList::Entry
operator <<	./src/emucore/m6502/src/M6502.cxx	/^ostream& operator<<(ostream& out, const M6502::AddressingMode& mode)$/;"	f
operator =	./src/common/Array.hxx	/^    Array<T>& operator  =(const Array<T>& array)$/;"	f	class:Common::Array
operator =	./src/emucore/Cart.cxx	/^Cartridge& Cartridge::operator = (const Cartridge&)$/;"	f	class:Cartridge
operator =	./src/emucore/Console.cxx	/^Console& Console::operator = (const Console&)$/;"	f	class:Console
operator =	./src/emucore/Control.cxx	/^Controller& Controller::operator = (const Controller&)$/;"	f	class:Controller
operator =	./src/emucore/FSNode.cxx	/^FilesystemNode &FilesystemNode::operator  =(const FilesystemNode &node)$/;"	f	class:FilesystemNode
operator =	./src/emucore/M6532.cxx	/^M6532& M6532::operator = (const M6532&)$/;"	f	class:M6532
operator =	./src/emucore/MediaSrc.cxx	/^MediaSource& MediaSource::operator = (const MediaSource&)$/;"	f	class:MediaSource
operator =	./src/emucore/OSystem.cxx	/^OSystem& OSystem::operator = (const OSystem&)$/;"	f	class:OSystem
operator =	./src/emucore/Props.cxx	/^Properties& Properties::operator = (const Properties& properties)$/;"	f	class:Properties
operator =	./src/emucore/Settings.cxx	/^Settings& Settings::operator = (const Settings&)$/;"	f	class:Settings
operator =	./src/emucore/StateManager.cxx	/^StateManager& StateManager::operator = (const StateManager&)$/;"	f	class:StateManager
operator =	./src/emucore/TIA.cxx	/^TIA& TIA::operator = (const TIA&)$/;"	f	class:TIA
operator =	./src/emucore/m6502/src/System.cxx	/^System& System::operator = (const System&)$/;"	f	class:System
operator =	./src/gui/Rect.hxx	/^  Point & operator=(const Point & p) { x = p.x; y = p.y; return *this; };$/;"	f	struct:GUI::Point
operator ==	./src/gui/Rect.hxx	/^  bool operator==(const Point & p) const { return x == p.x && y == p.y; };$/;"	f	struct:GUI::Point
operator []	./src/common/Array.hxx	/^    T& operator [](int idx)$/;"	f	class:Common::Array
operator []	./src/common/Array.hxx	/^    const T& operator [](int idx) const$/;"	f	class:Common::Array
operator []	./src/gui/Stack.hxx	/^    T operator [](int i)$/;"	f	class:FixedStack
optgreenmask	./src/wince/FrameBufferWinCE.hxx	/^	uInt16 minydim, optgreenmaskN, optgreenmask;$/;"	m	class:FrameBufferWinCE
optgreenmaskN	./src/wince/FrameBufferWinCE.hxx	/^	uInt16 minydim, optgreenmaskN, optgreenmask;$/;"	m	class:FrameBufferWinCE
otherwise	./src/emucore/rsynth/trie.c	/^    struct trie_s *otherwise;$/;"	m	struct:trie_s	typeref:struct:trie_s::trie_s	file:
ourAddressingModeTable	./src/emucore/m6502/src/M6502.cxx	/^M6502::AddressingMode M6502::ourAddressingModeTable[256] = {$/;"	m	class:M6502	file:
ourAddressingModeTable	./src/emucore/m6502/src/M6502.hxx	/^    static AddressingMode ourAddressingModeTable[256];$/;"	m	class:M6502
ourBCDTable	./src/emucore/m6502/src/M6502.cxx	/^uInt8 M6502::ourBCDTable[2][256];$/;"	m	class:M6502	file:
ourBCDTable	./src/emucore/m6502/src/M6502.hxx	/^    static uInt8 ourBCDTable[2][256];$/;"	m	class:M6502
ourBallMaskTable	./src/emucore/TIA.cxx	/^uInt8 TIA::ourBallMaskTable[4][4][320];$/;"	m	class:TIA	file:
ourBallMaskTable	./src/emucore/TIA.hxx	/^    static uInt8 ourBallMaskTable[4][4][320];$/;"	m	class:TIA
ourButtonPin	./src/emucore/Paddles.cxx	/^const Controller::DigitalPin Paddles::ourButtonPin[2] = { Four, Three };$/;"	m	class:Paddles	file:
ourButtonPin	./src/emucore/Paddles.hxx	/^    static const Controller::DigitalPin ourButtonPin[2];$/;"	m	class:Paddles
ourCartridgeList	./src/gui/GameInfoDialog.cxx	/^const char* GameInfoDialog::ourCartridgeList[kNumCartTypes][2] = {$/;"	m	class:GameInfoDialog	file:
ourCartridgeList	./src/gui/GameInfoDialog.hxx	/^    static const char* ourCartridgeList[kNumCartTypes][2];$/;"	m	class:GameInfoDialog
ourCollisionTable	./src/emucore/TIA.cxx	/^uInt16 TIA::ourCollisionTable[64];$/;"	m	class:TIA	file:
ourCollisionTable	./src/emucore/TIA.hxx	/^    static uInt16 ourCollisionTable[64];$/;"	m	class:TIA
ourCompleteMotionTable	./src/emucore/TIA.cxx	/^const Int32 TIA::ourCompleteMotionTable[76][16] = {$/;"	m	class:TIA	file:
ourCompleteMotionTable	./src/emucore/TIA.hxx	/^    static const Int32 ourCompleteMotionTable[76][16];$/;"	m	class:TIA
ourControllerList	./src/gui/GameInfoDialog.cxx	/^const char* GameInfoDialog::ourControllerList[kNumControllerTypes][2] = {$/;"	m	class:GameInfoDialog	file:
ourControllerList	./src/gui/GameInfoDialog.hxx	/^    static const char* ourControllerList[kNumControllerTypes][2];$/;"	m	class:GameInfoDialog
ourCurrentWriteBuffer	./src/emucore/SpeakJet.hxx	/^static SpeechBuffer *ourCurrentWriteBuffer;$/;"	v
ourCurrentWritePosition	./src/emucore/SpeakJet.hxx	/^static uInt8 ourCurrentWritePosition;$/;"	v
ourDefaultProperties	./src/emucore/Props.cxx	/^const char* Properties::ourDefaultProperties[LastPropType] = {$/;"	m	class:Properties	file:
ourDefaultProperties	./src/emucore/Props.hxx	/^    static const char* ourDefaultProperties[LastPropType];$/;"	m	class:Properties
ourDisabledMaskTable	./src/emucore/TIA.cxx	/^uInt8 TIA::ourDisabledMaskTable[640];$/;"	m	class:TIA	file:
ourDisabledMaskTable	./src/emucore/TIA.hxx	/^    static uInt8 ourDisabledMaskTable[640];$/;"	m	class:TIA
ourEmulActionList	./src/emucore/EventHandler.cxx	/^EventHandler::ActionList EventHandler::ourEmulActionList[kEmulActionListSize] = {$/;"	m	class:EventHandler	file:
ourEmulActionList	./src/emucore/EventHandler.hxx	/^    static ActionList ourEmulActionList[kEmulActionListSize];$/;"	m	class:EventHandler
ourGUIColors	./src/emucore/OSystem.cxx	/^uInt32 OSystem::ourGUIColors[kNumUIPalettes][kNumColors-256] = {$/;"	m	class:OSystem	file:
ourGUIColors	./src/emucore/OSystem.hxx	/^    static uInt32 ourGUIColors[kNumUIPalettes][kNumColors-256];$/;"	m	class:OSystem
ourHMOVEBlankEnableCycles	./src/emucore/TIA.cxx	/^const bool TIA::ourHMOVEBlankEnableCycles[76] = {$/;"	m	class:TIA	file:
ourHMOVEBlankEnableCycles	./src/emucore/TIA.hxx	/^    static const bool ourHMOVEBlankEnableCycles[76];$/;"	m	class:TIA
ourInputCount	./src/emucore/SpeakJet.hxx	/^static uInt16 ourInputCount;$/;"	v
ourInputSemaphore	./src/emucore/SpeakJet.hxx	/^static SDL_sem *ourInputSemaphore;$/;"	v
ourInstructionMnemonicTable	./src/emucore/m6502/src/M6502.cxx	/^const char* M6502::ourInstructionMnemonicTable[256] = {$/;"	m	class:M6502	file:
ourInstructionMnemonicTable	./src/emucore/m6502/src/M6502.hxx	/^    static const char* ourInstructionMnemonicTable[256];$/;"	m	class:M6502
ourInstructionProcessorCycleTable	./src/emucore/m6502/src/M6502.cxx	/^uInt32 M6502::ourInstructionProcessorCycleTable[256] = {$/;"	m	class:M6502	file:
ourInstructionProcessorCycleTable	./src/emucore/m6502/src/M6502.hxx	/^    static uInt32 ourInstructionProcessorCycleTable[256];$/;"	m	class:M6502
ourJoysticks	./src/emucore/EventHandler.hxx	/^    Stella_Joystick ourJoysticks[kNumJoysticks];$/;"	m	class:EventHandler
ourMenuActionList	./src/emucore/EventHandler.cxx	/^EventHandler::ActionList EventHandler::ourMenuActionList[kMenuActionListSize] = {$/;"	m	class:EventHandler	file:
ourMenuActionList	./src/emucore/EventHandler.hxx	/^    static ActionList ourMenuActionList[kMenuActionListSize];$/;"	m	class:EventHandler
ourMessageTable	./src/emucore/EventHandler.hxx	/^    string ourMessageTable[Event::LastType];$/;"	m	class:EventHandler
ourMissleMaskTable	./src/emucore/TIA.cxx	/^uInt8 TIA::ourMissleMaskTable[4][8][4][320];$/;"	m	class:TIA	file:
ourMissleMaskTable	./src/emucore/TIA.hxx	/^    static uInt8 ourMissleMaskTable[4][8][4][320];$/;"	m	class:TIA
ourNTSCPalette	./src/emucore/Console.cxx	/^uInt32 Console::ourNTSCPalette[256] = {$/;"	m	class:Console	file:
ourNTSCPalette	./src/emucore/Console.hxx	/^    static uInt32 ourNTSCPalette[256];$/;"	m	class:Console
ourNTSCPaletteZ26	./src/emucore/Console.cxx	/^uInt32 Console::ourNTSCPaletteZ26[256] = {$/;"	m	class:Console	file:
ourNTSCPaletteZ26	./src/emucore/Console.hxx	/^    static uInt32 ourNTSCPaletteZ26[256];$/;"	m	class:Console
ourPALPalette	./src/emucore/Console.cxx	/^uInt32 Console::ourPALPalette[256] = {$/;"	m	class:Console	file:
ourPALPalette	./src/emucore/Console.hxx	/^    static uInt32 ourPALPalette[256];$/;"	m	class:Console
ourPALPaletteZ26	./src/emucore/Console.cxx	/^uInt32 Console::ourPALPaletteZ26[256] = {$/;"	m	class:Console	file:
ourPALPaletteZ26	./src/emucore/Console.hxx	/^    static uInt32 ourPALPaletteZ26[256];$/;"	m	class:Console
ourPhonemeTable	./src/emucore/SpeakJet.cxx	/^const char *SpeakJet::ourPhonemeTable[] = {$/;"	m	class:SpeakJet	file:
ourPhonemeTable	./src/emucore/SpeakJet.hxx	/^    static const char *ourPhonemeTable[];$/;"	m	class:SpeakJet
ourPlayerMaskTable	./src/emucore/TIA.cxx	/^uInt8 TIA::ourPlayerMaskTable[4][2][8][320];$/;"	m	class:TIA	file:
ourPlayerMaskTable	./src/emucore/TIA.hxx	/^    static uInt8 ourPlayerMaskTable[4][2][8][320];$/;"	m	class:TIA
ourPlayerPositionResetWhenTable	./src/emucore/TIA.cxx	/^Int8 TIA::ourPlayerPositionResetWhenTable[8][160][160];$/;"	m	class:TIA	file:
ourPlayerPositionResetWhenTable	./src/emucore/TIA.hxx	/^    static Int8 ourPlayerPositionResetWhenTable[8][160][160];$/;"	m	class:TIA
ourPlayerReflectTable	./src/emucore/TIA.cxx	/^uInt8 TIA::ourPlayerReflectTable[256];$/;"	m	class:TIA	file:
ourPlayerReflectTable	./src/emucore/TIA.hxx	/^    static uInt8 ourPlayerReflectTable[256];$/;"	m	class:TIA
ourPlayfieldTable	./src/emucore/TIA.cxx	/^uInt32 TIA::ourPlayfieldTable[2][160];$/;"	m	class:TIA	file:
ourPlayfieldTable	./src/emucore/TIA.hxx	/^    static uInt32 ourPlayfieldTable[2][160];$/;"	m	class:TIA
ourPokeDelayTable	./src/emucore/TIA.cxx	/^const Int16 TIA::ourPokeDelayTable[64] = {$/;"	m	class:TIA	file:
ourPokeDelayTable	./src/emucore/TIA.hxx	/^    static const Int16 ourPokeDelayTable[64];$/;"	m	class:TIA
ourPropertyNames	./src/emucore/Props.cxx	/^const char* Properties::ourPropertyNames[LastPropType] = {$/;"	m	class:Properties	file:
ourPropertyNames	./src/emucore/Props.hxx	/^    static const char* ourPropertyNames[LastPropType];$/;"	m	class:Properties
ourSDLMapping	./src/emucore/EventHandler.hxx	/^    string ourSDLMapping[SDLK_LAST];$/;"	m	class:EventHandler
ourSECAMPalette	./src/emucore/Console.cxx	/^uInt32 Console::ourSECAMPalette[256] = {$/;"	m	class:Console	file:
ourSECAMPalette	./src/emucore/Console.hxx	/^    static uInt32 ourSECAMPalette[256];$/;"	m	class:Console
ourSECAMPaletteZ26	./src/emucore/Console.cxx	/^uInt32 Console::ourSECAMPaletteZ26[256] = {$/;"	m	class:Console	file:
ourSECAMPaletteZ26	./src/emucore/Console.hxx	/^    static uInt32 ourSECAMPaletteZ26[256];$/;"	m	class:Console
ourSeed	./src/emucore/Random.cxx	/^uInt32 Random::ourSeed = 0;$/;"	m	class:Random	file:
ourSeed	./src/emucore/Random.hxx	/^    static uInt32 ourSeed;$/;"	m	class:Random
ourSeeded	./src/emucore/Random.cxx	/^bool Random::ourSeeded = false;$/;"	m	class:Random	file:
ourSeeded	./src/emucore/Random.hxx	/^    static bool ourSeeded;$/;"	m	class:Random
ourThread	./src/emucore/SpeakJet.hxx	/^    SDL_Thread *ourThread;$/;"	m	class:SpeakJet
ourUserNTSCPalette	./src/emucore/Console.cxx	/^uInt32 Console::ourUserNTSCPalette[256]  = { 0 }; \/\/ filled from external file$/;"	m	class:Console	file:
ourUserNTSCPalette	./src/emucore/Console.hxx	/^    static uInt32 ourUserNTSCPalette[256];$/;"	m	class:Console
ourUserPALPalette	./src/emucore/Console.cxx	/^uInt32 Console::ourUserPALPalette[256]   = { 0 }; \/\/ filled from external file$/;"	m	class:Console	file:
ourUserPALPalette	./src/emucore/Console.hxx	/^    static uInt32 ourUserPALPalette[256];$/;"	m	class:Console
ourUserSECAMPalette	./src/emucore/Console.cxx	/^uInt32 Console::ourUserSECAMPalette[256] = { 0 }; \/\/ filled from external file$/;"	m	class:Console	file:
ourUserSECAMPalette	./src/emucore/Console.hxx	/^    static uInt32 ourUserSECAMPalette[256];$/;"	m	class:Console
outputBuffers	./src/emucore/SpeakJet.hxx	/^static SpeechBuffer outputBuffers[SPEECH_BUFFERS];$/;"	v
outputFrequency	./src/emucore/TIASnd.cxx	/^void TIASound::outputFrequency(Int32 freq)$/;"	f	class:TIASound
p1	./src/emucore/rsynth/opsynth.c	/^    float p1;$/;"	m	struct:__anon8	file:
p1	./src/emucore/rsynth/opsynth.c	/^    float p1;$/;"	m	struct:__anon9	file:
p2	./src/emucore/rsynth/opsynth.c	/^    float p2;$/;"	m	struct:__anon8	file:
pFramePointer	./src/wince/FrameBufferWinCE.hxx	/^   VOID *pFramePointer;$/;"	m	struct:_RawFrameBufferInfo
p_glBegin	./src/common/FrameBufferGL.cxx	/^static void (APIENTRY* p_glBegin)( GLenum );$/;"	v	file:
p_glBindTexture	./src/common/FrameBufferGL.cxx	/^static void (APIENTRY* p_glBindTexture)( GLenum, GLuint );   \/\/ 1.1$/;"	v	file:
p_glClear	./src/common/FrameBufferGL.cxx	/^static void (APIENTRY* p_glClear)( GLbitfield );$/;"	v	file:
p_glDeleteTextures	./src/common/FrameBufferGL.cxx	/^static void (APIENTRY* p_glDeleteTextures)( GLsizei, const GLuint* ); \/\/ 1.1$/;"	v	file:
p_glDisable	./src/common/FrameBufferGL.cxx	/^static void (APIENTRY* p_glDisable)( GLenum );$/;"	v	file:
p_glEnable	./src/common/FrameBufferGL.cxx	/^static void (APIENTRY* p_glEnable)( GLenum );$/;"	v	file:
p_glEnd	./src/common/FrameBufferGL.cxx	/^static void (APIENTRY* p_glEnd)( void );$/;"	v	file:
p_glGenTextures	./src/common/FrameBufferGL.cxx	/^static void (APIENTRY* p_glGenTextures)( GLsizei, GLuint* ); \/\/ 1.1$/;"	v	file:
p_glGetString	./src/common/FrameBufferGL.cxx	/^static const GLubyte* (APIENTRY* p_glGetString)( GLenum );$/;"	v	file:
p_glHint	./src/common/FrameBufferGL.cxx	/^static void (APIENTRY* p_glHint)( GLenum, GLenum );$/;"	v	file:
p_glLoadIdentity	./src/common/FrameBufferGL.cxx	/^static void (APIENTRY* p_glLoadIdentity)( void );$/;"	v	file:
p_glMatrixMode	./src/common/FrameBufferGL.cxx	/^static void (APIENTRY* p_glMatrixMode)( GLenum );$/;"	v	file:
p_glOrtho	./src/common/FrameBufferGL.cxx	/^static void (APIENTRY* p_glOrtho)( GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble );$/;"	v	file:
p_glPixelStorei	./src/common/FrameBufferGL.cxx	/^static void (APIENTRY* p_glPixelStorei)( GLenum, GLint );$/;"	v	file:
p_glPushAttrib	./src/common/FrameBufferGL.cxx	/^static void (APIENTRY* p_glPushAttrib)( GLbitfield );$/;"	v	file:
p_glPushMatrix	./src/common/FrameBufferGL.cxx	/^static void (APIENTRY* p_glPushMatrix)( void );$/;"	v	file:
p_glReadPixels	./src/common/FrameBufferGL.cxx	/^static void (APIENTRY* p_glReadPixels)( GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLvoid* );$/;"	v	file:
p_glShadeModel	./src/common/FrameBufferGL.cxx	/^static void (APIENTRY* p_glShadeModel)( GLenum );$/;"	v	file:
p_glTexCoord2f	./src/common/FrameBufferGL.cxx	/^static void (APIENTRY* p_glTexCoord2f)( GLfloat, GLfloat );$/;"	v	file:
p_glTexEnvf	./src/common/FrameBufferGL.cxx	/^static void (APIENTRY* p_glTexEnvf)( GLenum, GLenum, GLfloat );$/;"	v	file:
p_glTexImage2D	./src/common/FrameBufferGL.cxx	/^static void (APIENTRY* p_glTexImage2D)( GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, const GLvoid* );$/;"	v	file:
p_glTexParameteri	./src/common/FrameBufferGL.cxx	/^static void (APIENTRY* p_glTexParameteri)( GLenum, GLenum, GLint );$/;"	v	file:
p_glTexSubImage2D	./src/common/FrameBufferGL.cxx	/^static void (APIENTRY* p_glTexSubImage2D)( GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, const GLvoid* ); \/\/ 1.1$/;"	v	file:
p_glVertex2i	./src/common/FrameBufferGL.cxx	/^static void (APIENTRY* p_glVertex2i)( GLint, GLint );$/;"	v	file:
p_glViewport	./src/common/FrameBufferGL.cxx	/^static void (APIENTRY* p_glViewport)( GLint, GLint, GLsizei, GLsizei );$/;"	v	file:
pageMask	./src/emucore/m6502/src/System.hxx	/^    uInt16 pageMask() const$/;"	f	class:System
pageShift	./src/emucore/m6502/src/System.hxx	/^    uInt16 pageShift() const$/;"	f	class:System
pal	./src/wince/FrameBufferWinCE.hxx	/^	uInt16 pal[256+kNumColors], myWidth, myWidthdiv4, myHeight, scrwidth, scrheight;$/;"	m	class:FrameBufferWinCE
paldouble	./src/wince/FrameBufferWinCE.hxx	/^	uInt32 paldouble[256+kNumColors], displacement;$/;"	m	class:FrameBufferWinCE
paletteFile	./src/emucore/OSystem.hxx	/^    const string& paletteFile() const { return myPaletteFile; }$/;"	f	class:OSystem
parameters	./src/debugger/DebuggerParser.hxx	/^    } parameters;$/;"	t	class:DebuggerParser	typeref:enum:DebuggerParser::__anon61
parent	./src/emucore/FSNode.hxx	/^    virtual AbstractFilesystemNode* parent() const { return 0; }$/;"	f	class:FilesystemNode
parent	./src/gp2x/FSNodeGP2X.cxx	/^AbstractFilesystemNode *POSIXFilesystemNode::parent() const$/;"	f	class:POSIXFilesystemNode
parent	./src/gui/GuiObject.hxx	/^    DialogContainer* parent() { return myParent; }$/;"	f	class:GuiObject
parent	./src/unix/FSNodePOSIX.cxx	/^AbstractFilesystemNode *POSIXFilesystemNode::parent() const$/;"	f	class:POSIXFilesystemNode
parent	./src/win32/FSNodeWin32.cxx	/^AbstractFilesystemNode* WindowsFilesystemNode::parent() const$/;"	f	class:WindowsFilesystemNode
parent	./src/wince/FSNodeWinCE.cxx	/^AbstractFilesystemNode* WindowsFilesystemNode::parent() const$/;"	f	class:WindowsFilesystemNode
parentWidget	./src/gui/TabWidget.hxx	/^    Widget* parentWidget;$/;"	m	struct:TabWidget::Tab
parms	./src/debugger/DebuggerParser.hxx	/^      parameters parms[kMAX_ARG_TYPES];$/;"	m	struct:DebuggerParser::Command
parmsRequired	./src/debugger/DebuggerParser.hxx	/^      bool parmsRequired;$/;"	m	struct:DebuggerParser::Command
parse	./src/cheat/CheatManager.cxx	/^void CheatManager::parse(const string& cheats)$/;"	f	class:CheatManager
parse	./src/yacc/YaccParser.cxx	/^int parse(const char *in) {$/;"	f	namespace:YaccParser
parse4hex	./src/debugger/EquateList.cxx	/^int EquateList::parse4hex(char *c)$/;"	f	class:EquateList
parseIDATChunk	./src/gui/RomInfoWidget.cxx	/^bool RomInfoWidget::parseIDATChunk(const FrameBuffer& fb, GUI::Surface* surface,$/;"	f	class:RomInfoWidget
parseIHDR	./src/gui/RomInfoWidget.cxx	/^bool RomInfoWidget::parseIHDR(int& width, int& height, uInt8* data, int size)$/;"	f	class:RomInfoWidget
parseProperties	./src/gui/RomInfoWidget.cxx	/^void RomInfoWidget::parseProperties()$/;"	f	class:RomInfoWidget
parseTextChunk	./src/gui/RomInfoWidget.cxx	/^string RomInfoWidget::parseTextChunk(uInt8* data, int size)$/;"	f	class:RomInfoWidget
parser	./src/debugger/Debugger.hxx	/^    DebuggerParser& parser() const      { return *myParser;      }$/;"	f	class:Debugger
pasteSelectedText	./src/gui/EditableWidget.cxx	/^void EditableWidget::pasteSelectedText()$/;"	f	class:EditableWidget
patch	./src/emucore/Cart0840.cxx	/^bool Cartridge0840::patch(uInt16 address, uInt8 value)$/;"	f	class:Cartridge0840
patch	./src/emucore/Cart2K.cxx	/^bool Cartridge2K::patch(uInt16 address, uInt8 value)$/;"	f	class:Cartridge2K
patch	./src/emucore/Cart3E.cxx	/^bool Cartridge3E::patch(uInt16 address, uInt8 value)$/;"	f	class:Cartridge3E
patch	./src/emucore/Cart3F.cxx	/^bool Cartridge3F::patch(uInt16 address, uInt8 value)$/;"	f	class:Cartridge3F
patch	./src/emucore/Cart4A50.cxx	/^bool Cartridge4A50::patch(uInt16 address, uInt8 value)$/;"	f	class:Cartridge4A50
patch	./src/emucore/Cart4K.cxx	/^bool Cartridge4K::patch(uInt16 address, uInt8 value)$/;"	f	class:Cartridge4K
patch	./src/emucore/CartAR.cxx	/^bool CartridgeAR::patch(uInt16 address, uInt8 value)$/;"	f	class:CartridgeAR
patch	./src/emucore/CartCV.cxx	/^bool CartridgeCV::patch(uInt16 address, uInt8 value)$/;"	f	class:CartridgeCV
patch	./src/emucore/CartDPC.cxx	/^bool CartridgeDPC::patch(uInt16 address, uInt8 value)$/;"	f	class:CartridgeDPC
patch	./src/emucore/CartE0.cxx	/^bool CartridgeE0::patch(uInt16 address, uInt8 value)$/;"	f	class:CartridgeE0
patch	./src/emucore/CartE7.cxx	/^bool CartridgeE7::patch(uInt16 address, uInt8 value)$/;"	f	class:CartridgeE7
patch	./src/emucore/CartF4.cxx	/^bool CartridgeF4::patch(uInt16 address, uInt8 value)$/;"	f	class:CartridgeF4
patch	./src/emucore/CartF4SC.cxx	/^bool CartridgeF4SC::patch(uInt16 address, uInt8 value)$/;"	f	class:CartridgeF4SC
patch	./src/emucore/CartF6.cxx	/^bool CartridgeF6::patch(uInt16 address, uInt8 value)$/;"	f	class:CartridgeF6
patch	./src/emucore/CartF6SC.cxx	/^bool CartridgeF6SC::patch(uInt16 address, uInt8 value)$/;"	f	class:CartridgeF6SC
patch	./src/emucore/CartF8.cxx	/^bool CartridgeF8::patch(uInt16 address, uInt8 value)$/;"	f	class:CartridgeF8
patch	./src/emucore/CartF8SC.cxx	/^bool CartridgeF8SC::patch(uInt16 address, uInt8 value)$/;"	f	class:CartridgeF8SC
patch	./src/emucore/CartFASC.cxx	/^bool CartridgeFASC::patch(uInt16 address, uInt8 value)$/;"	f	class:CartridgeFASC
patch	./src/emucore/CartFE.cxx	/^bool CartridgeFE::patch(uInt16 address, uInt8 value)$/;"	f	class:CartridgeFE
patch	./src/emucore/CartMB.cxx	/^bool CartridgeMB::patch(uInt16 address, uInt8 value)$/;"	f	class:CartridgeMB
patch	./src/emucore/CartMC.cxx	/^bool CartridgeMC::patch(uInt16 address, uInt8 value)$/;"	f	class:CartridgeMC
patch	./src/emucore/CartSB.cxx	/^bool CartridgeSB::patch(uInt16 address, uInt8 value)$/;"	f	class:CartridgeSB
patch	./src/emucore/CartUA.cxx	/^bool CartridgeUA::patch(uInt16 address, uInt8 value)$/;"	f	class:CartridgeUA
patch	./src/emucore/CartX07.cxx	/^bool CartridgeX07::patch(uInt16 address, uInt8 value)$/;"	f	class:CartridgeX07
patchROM	./src/debugger/Debugger.cxx	/^bool Debugger::patchROM(int addr, int value)$/;"	f	class:Debugger
patchROM	./src/debugger/gui/RomWidget.cxx	/^void RomWidget::patchROM(int data, const string& bytes)$/;"	f	class:RomWidget
path	./src/emucore/FSNode.hxx	/^    virtual string path() const { return _realNode->path(); }$/;"	f	class:FilesystemNode
path	./src/gp2x/FSNodeGP2X.cxx	/^    virtual string path() const { return _path; }$/;"	f	class:POSIXFilesystemNode
path	./src/gui/GameList.hxx	/^    inline const string& path(int i)$/;"	f	class:GameList
path	./src/unix/FSNodePOSIX.cxx	/^    virtual string path() const { return _path; }$/;"	f	class:POSIXFilesystemNode
path	./src/win32/FSNodeWin32.cxx	/^    virtual string path() const { return _path; }$/;"	f	class:WindowsFilesystemNode
path	./src/wince/FSNodeWinCE.cxx	/^    virtual string path() const { return _path; }$/;"	f	class:WindowsFilesystemNode
pc	./src/debugger/CpuDebug.hxx	/^    int pc() { return mySystem->m6502().PC; }$/;"	f	class:CpuDebug
peek	./src/debugger/Debugger.cxx	/^int Debugger::peek(int addr)$/;"	f	class:Debugger
peek	./src/emucore/Cart0840.cxx	/^uInt8 Cartridge0840::peek(uInt16 address)$/;"	f	class:Cartridge0840
peek	./src/emucore/Cart2K.cxx	/^uInt8 Cartridge2K::peek(uInt16 address)$/;"	f	class:Cartridge2K
peek	./src/emucore/Cart3E.cxx	/^uInt8 Cartridge3E::peek(uInt16 address)$/;"	f	class:Cartridge3E
peek	./src/emucore/Cart3F.cxx	/^uInt8 Cartridge3F::peek(uInt16 address)$/;"	f	class:Cartridge3F
peek	./src/emucore/Cart4A50.cxx	/^uInt8 Cartridge4A50::peek(uInt16 address)$/;"	f	class:Cartridge4A50
peek	./src/emucore/Cart4K.cxx	/^uInt8 Cartridge4K::peek(uInt16 address)$/;"	f	class:Cartridge4K
peek	./src/emucore/CartAR.cxx	/^uInt8 CartridgeAR::peek(uInt16 addr)$/;"	f	class:CartridgeAR
peek	./src/emucore/CartCV.cxx	/^uInt8 CartridgeCV::peek(uInt16 address)$/;"	f	class:CartridgeCV
peek	./src/emucore/CartDPC.cxx	/^uInt8 CartridgeDPC::peek(uInt16 address)$/;"	f	class:CartridgeDPC
peek	./src/emucore/CartE0.cxx	/^uInt8 CartridgeE0::peek(uInt16 address)$/;"	f	class:CartridgeE0
peek	./src/emucore/CartE7.cxx	/^uInt8 CartridgeE7::peek(uInt16 address)$/;"	f	class:CartridgeE7
peek	./src/emucore/CartF4.cxx	/^uInt8 CartridgeF4::peek(uInt16 address)$/;"	f	class:CartridgeF4
peek	./src/emucore/CartF4SC.cxx	/^uInt8 CartridgeF4SC::peek(uInt16 address)$/;"	f	class:CartridgeF4SC
peek	./src/emucore/CartF6.cxx	/^uInt8 CartridgeF6::peek(uInt16 address)$/;"	f	class:CartridgeF6
peek	./src/emucore/CartF6SC.cxx	/^uInt8 CartridgeF6SC::peek(uInt16 address)$/;"	f	class:CartridgeF6SC
peek	./src/emucore/CartF8.cxx	/^uInt8 CartridgeF8::peek(uInt16 address)$/;"	f	class:CartridgeF8
peek	./src/emucore/CartF8SC.cxx	/^uInt8 CartridgeF8SC::peek(uInt16 address)$/;"	f	class:CartridgeF8SC
peek	./src/emucore/CartFASC.cxx	/^uInt8 CartridgeFASC::peek(uInt16 address)$/;"	f	class:CartridgeFASC
peek	./src/emucore/CartFE.cxx	/^uInt8 CartridgeFE::peek(uInt16 address)$/;"	f	class:CartridgeFE
peek	./src/emucore/CartMB.cxx	/^uInt8 CartridgeMB::peek(uInt16 address)$/;"	f	class:CartridgeMB
peek	./src/emucore/CartMC.cxx	/^uInt8 CartridgeMC::peek(uInt16 address)$/;"	f	class:CartridgeMC
peek	./src/emucore/CartSB.cxx	/^uInt8 CartridgeSB::peek(uInt16 address)$/;"	f	class:CartridgeSB
peek	./src/emucore/CartUA.cxx	/^uInt8 CartridgeUA::peek(uInt16 address)$/;"	f	class:CartridgeUA
peek	./src/emucore/CartX07.cxx	/^uInt8 CartridgeX07::peek(uInt16 address)$/;"	f	class:CartridgeX07
peek	./src/emucore/M6532.cxx	/^uInt8 M6532::peek(uInt16 addr)$/;"	f	class:M6532
peek	./src/emucore/TIA.cxx	/^uInt8 TIA::peek(uInt16 addr)$/;"	f	class:TIA
peek	./src/emucore/m6502/src/M6502Hi.cxx	/^inline uInt8 M6502High::peek(uInt16 address)$/;"	f	class:M6502High
peek	./src/emucore/m6502/src/M6502Low.cxx	/^inline uInt8 M6502Low::peek(uInt16 address)$/;"	f	class:M6502Low
peek	./src/emucore/m6502/src/NullDev.cxx	/^uInt8 NullDevice::peek(uInt16 address)$/;"	f	class:NullDevice
peek	./src/emucore/m6502/src/System.cxx	/^uInt8 System::peek(uInt16 addr)$/;"	f	class:System
perFrame	./src/cheat/CheatManager.hxx	/^    const CheatList& perFrame() { return myPerFrameList; }$/;"	f	class:CheatManager
pf	./src/debugger/TIADebug.hxx	/^    IntArray pf;$/;"	m	class:TiaState
pf0	./src/debugger/TIADebug.cxx	/^uInt8 TIADebug::pf0(int newVal)$/;"	f	class:TIADebug
pf1	./src/debugger/TIADebug.cxx	/^uInt8 TIADebug::pf1(int newVal)$/;"	f	class:TIADebug
pf2	./src/debugger/TIADebug.cxx	/^uInt8 TIADebug::pf2(int newVal)$/;"	f	class:TIADebug
pfile_in_zip_read	./src/emucore/unzip.c	/^    file_in_zip_read_info_s* pfile_in_zip_read; \/* structure about the current$/;"	m	struct:__anon2	file:
ph_am	./src/emucore/rsynth/phones.c	/^char *ph_am[] =$/;"	v
ph_br	./src/emucore/rsynth/phones.c	/^char *ph_br[] =$/;"	v
ph_name	./src/emucore/rsynth/phones.c	/^char *ph_name[] =$/;"	v
phone_to_elm	./src/emucore/rsynth/phtoelm.c	/^phone_to_elm(rsynth_t * rsynth, int n, char *phone, darray_ptr elm,$/;"	f	file:
phonemeBuffer	./src/emucore/SpeakJet.hxx	/^static char phonemeBuffer[INPUT_BUFFER_SIZE];$/;"	v
phtoelm	./src/emucore/rsynth/phtoelm.c	/^trie_ptr phtoelm = NULL;$/;"	v
phtoelm_id	./src/emucore/rsynth/phtoelm.c	/^char *phtoelm_id = "$Id: phtoelm.c,v 1.2 2006\/06\/12 14:12:52 stephena Exp $";$/;"	v
pitch	./src/common/FrameBufferGL.hxx	/^      int     pitch;$/;"	m	struct:FrameBufferGL::glBufferType
pitch_sync	./src/emucore/rsynth/opsynth.c	/^pitch_sync(rsynth_t * rsynth)$/;"	f	file:
pixels	./src/common/FrameBufferGL.hxx	/^      void*   pixels;$/;"	m	struct:FrameBufferGL::glBufferType
pixelstep	./src/wince/FrameBufferWinCE.hxx	/^	Int32 pixelstep, pixelstepdouble, linestep, linestepdouble, scrpixelstep, scrlinestep;$/;"	m	class:FrameBufferWinCE
pixelstepdouble	./src/wince/FrameBufferWinCE.hxx	/^	Int32 pixelstep, pixelstepdouble, linestep, linestepdouble, scrpixelstep, scrlinestep;$/;"	m	class:FrameBufferWinCE
pixelsteptimes12	./src/wince/FrameBufferWinCE.hxx	/^	Int32 pixelsteptimes5, pixelsteptimes6, pixelsteptimes8, pixelsteptimes12, pixelsteptimes16;$/;"	m	class:FrameBufferWinCE
pixelsteptimes16	./src/wince/FrameBufferWinCE.hxx	/^	Int32 pixelsteptimes5, pixelsteptimes6, pixelsteptimes8, pixelsteptimes12, pixelsteptimes16;$/;"	m	class:FrameBufferWinCE
pixelsteptimes5	./src/wince/FrameBufferWinCE.hxx	/^	Int32 pixelsteptimes5, pixelsteptimes6, pixelsteptimes8, pixelsteptimes12, pixelsteptimes16;$/;"	m	class:FrameBufferWinCE
pixelsteptimes6	./src/wince/FrameBufferWinCE.hxx	/^	Int32 pixelsteptimes5, pixelsteptimes6, pixelsteptimes8, pixelsteptimes12, pixelsteptimes16;$/;"	m	class:FrameBufferWinCE
pixelsteptimes8	./src/wince/FrameBufferWinCE.hxx	/^	Int32 pixelsteptimes5, pixelsteptimes6, pixelsteptimes8, pixelsteptimes12, pixelsteptimes16;$/;"	m	class:FrameBufferWinCE
poke	./src/emucore/Cart0840.cxx	/^void Cartridge0840::poke(uInt16 address, uInt8 value)$/;"	f	class:Cartridge0840
poke	./src/emucore/Cart2K.cxx	/^void Cartridge2K::poke(uInt16, uInt8)$/;"	f	class:Cartridge2K
poke	./src/emucore/Cart3E.cxx	/^void Cartridge3E::poke(uInt16 address, uInt8 value)$/;"	f	class:Cartridge3E
poke	./src/emucore/Cart3F.cxx	/^void Cartridge3F::poke(uInt16 address, uInt8 value)$/;"	f	class:Cartridge3F
poke	./src/emucore/Cart4A50.cxx	/^void Cartridge4A50::poke(uInt16 address, uInt8 value)$/;"	f	class:Cartridge4A50
poke	./src/emucore/Cart4K.cxx	/^void Cartridge4K::poke(uInt16, uInt8)$/;"	f	class:Cartridge4K
poke	./src/emucore/CartAR.cxx	/^void CartridgeAR::poke(uInt16 addr, uInt8)$/;"	f	class:CartridgeAR
poke	./src/emucore/CartCV.cxx	/^void CartridgeCV::poke(uInt16, uInt8)$/;"	f	class:CartridgeCV
poke	./src/emucore/CartDPC.cxx	/^void CartridgeDPC::poke(uInt16 address, uInt8 value)$/;"	f	class:CartridgeDPC
poke	./src/emucore/CartE0.cxx	/^void CartridgeE0::poke(uInt16 address, uInt8)$/;"	f	class:CartridgeE0
poke	./src/emucore/CartE7.cxx	/^void CartridgeE7::poke(uInt16 address, uInt8)$/;"	f	class:CartridgeE7
poke	./src/emucore/CartF4.cxx	/^void CartridgeF4::poke(uInt16 address, uInt8)$/;"	f	class:CartridgeF4
poke	./src/emucore/CartF4SC.cxx	/^void CartridgeF4SC::poke(uInt16 address, uInt8)$/;"	f	class:CartridgeF4SC
poke	./src/emucore/CartF6.cxx	/^void CartridgeF6::poke(uInt16 address, uInt8)$/;"	f	class:CartridgeF6
poke	./src/emucore/CartF6SC.cxx	/^void CartridgeF6SC::poke(uInt16 address, uInt8)$/;"	f	class:CartridgeF6SC
poke	./src/emucore/CartF8.cxx	/^void CartridgeF8::poke(uInt16 address, uInt8)$/;"	f	class:CartridgeF8
poke	./src/emucore/CartF8SC.cxx	/^void CartridgeF8SC::poke(uInt16 address, uInt8)$/;"	f	class:CartridgeF8SC
poke	./src/emucore/CartFASC.cxx	/^void CartridgeFASC::poke(uInt16 address, uInt8)$/;"	f	class:CartridgeFASC
poke	./src/emucore/CartFE.cxx	/^void CartridgeFE::poke(uInt16, uInt8)$/;"	f	class:CartridgeFE
poke	./src/emucore/CartMB.cxx	/^void CartridgeMB::poke(uInt16 address, uInt8)$/;"	f	class:CartridgeMB
poke	./src/emucore/CartMC.cxx	/^void CartridgeMC::poke(uInt16 address, uInt8 value)$/;"	f	class:CartridgeMC
poke	./src/emucore/CartSB.cxx	/^void CartridgeSB::poke(uInt16 address, uInt8 value)$/;"	f	class:CartridgeSB
poke	./src/emucore/CartUA.cxx	/^void CartridgeUA::poke(uInt16 address, uInt8 value)$/;"	f	class:CartridgeUA
poke	./src/emucore/CartX07.cxx	/^void CartridgeX07::poke(uInt16 address, uInt8 value)$/;"	f	class:CartridgeX07
poke	./src/emucore/M6532.cxx	/^void M6532::poke(uInt16 addr, uInt8 value)$/;"	f	class:M6532
poke	./src/emucore/TIA.cxx	/^void TIA::poke(uInt16 addr, uInt8 value)$/;"	f	class:TIA
poke	./src/emucore/m6502/src/M6502Hi.cxx	/^inline void M6502High::poke(uInt16 address, uInt8 value)$/;"	f	class:M6502High
poke	./src/emucore/m6502/src/M6502Low.cxx	/^inline void M6502Low::poke(uInt16 address, uInt8 value)$/;"	f	class:M6502Low
poke	./src/emucore/m6502/src/NullDev.cxx	/^void NullDevice::poke(uInt16 address, uInt8 value)$/;"	f	class:NullDevice
poke	./src/emucore/m6502/src/System.cxx	/^void System::poke(uInt16 addr, uInt8 value)$/;"	f	class:System
poll	./src/emucore/EventHandler.cxx	/^void EventHandler::poll(uInt32 time)$/;"	f	class:EventHandler
pollEvent	./src/emucore/OSystem.cxx	/^void OSystem::pollEvent()$/;"	f	class:OSystem
pollEvent	./src/gp2x/OSystemGP2X.cxx	/^void OSystemGP2X::pollEvent()$/;"	f	class:OSystemGP2X
pop	./src/gui/Stack.hxx	/^    T pop()$/;"	f	class:FixedStack
pos	./src/debugger/TIADebug.hxx	/^    IntArray pos;$/;"	m	class:TiaState
posBL	./src/debugger/TIADebug.cxx	/^uInt8 TIADebug::posBL(int newVal)$/;"	f	class:TIADebug
posM0	./src/debugger/TIADebug.cxx	/^uInt8 TIADebug::posM0(int newVal)$/;"	f	class:TIADebug
posM1	./src/debugger/TIADebug.cxx	/^uInt8 TIADebug::posM1(int newVal)$/;"	f	class:TIADebug
posP0	./src/debugger/TIADebug.cxx	/^uInt8 TIADebug::posP0(int newVal)$/;"	f	class:TIADebug
posP1	./src/debugger/TIADebug.cxx	/^uInt8 TIADebug::posP1(int newVal)$/;"	f	class:TIADebug
posToValue	./src/gui/Widget.cxx	/^int SliderWidget::posToValue(int pos)$/;"	f	class:SliderWidget
pos_in_central_dir	./src/emucore/unzip.c	/^	uLong pos_in_central_dir;   \/* pos of the current file in the central dir*\/$/;"	m	struct:__anon2	file:
pos_in_zipfile	./src/emucore/unzip.c	/^	uLong pos_in_zipfile;       \/* position in byte on the zipfile, for fseek*\/$/;"	m	struct:__anon1	file:
pos_local_extrafield	./src/emucore/unzip.c	/^	uLong pos_local_extrafield;   \/* position in the local extra field in read*\/$/;"	m	struct:__anon1	file:
postFrameUpdate	./src/common/FrameBufferGL.cxx	/^void FrameBufferGL::postFrameUpdate()$/;"	f	class:FrameBufferGL
postFrameUpdate	./src/common/FrameBufferSoft.cxx	/^void FrameBufferSoft::postFrameUpdate()$/;"	f	class:FrameBufferSoft
postFrameUpdate	./src/gp2x/FrameBufferGP2X.cxx	/^void FrameBufferGP2X::postFrameUpdate()$/;"	f	class:FrameBufferGP2X
power_of_two	./src/common/FrameBufferGL.hxx	/^    inline uInt32 power_of_two(uInt32 input)$/;"	f	class:FrameBufferGL
preFrameUpdate	./src/common/FrameBufferGL.cxx	/^void FrameBufferGL::preFrameUpdate()$/;"	f	class:FrameBufferGL
preFrameUpdate	./src/common/FrameBufferSoft.cxx	/^void FrameBufferSoft::preFrameUpdate()$/;"	f	class:FrameBufferSoft
preFrameUpdate	./src/gp2x/FrameBufferGP2X.cxx	/^void FrameBufferGP2X::preFrameUpdate()$/;"	f	class:FrameBufferGP2X
previous	./src/common/VideoModeList.hxx	/^    const VideoMode& previous()$/;"	f	class:VideoModeList
previousFrameBuffer	./src/emucore/TIA.hxx	/^    uInt8* previousFrameBuffer() const { return myPreviousFrameBuffer; }$/;"	f	class:TIA
print	./src/debugger/gui/PromptWidget.cxx	/^void PromptWidget::print(const string& str)$/;"	f	class:PromptWidget
print	./src/emucore/Props.cxx	/^void Properties::print() const$/;"	f	class:Properties
print	./src/emucore/PropsSet.cxx	/^void PropertiesSet::print() const$/;"	f	class:PropertiesSet
printNode	./src/emucore/PropsSet.cxx	/^void PropertiesSet::printNode(TreeNode *node) const$/;"	f	class:PropertiesSet
printPrompt	./src/debugger/gui/PromptWidget.cxx	/^void PromptWidget::printPrompt()$/;"	f	class:PromptWidget
printf	./src/debugger/gui/PromptWidget.cxx	/^int PromptWidget::printf(const char *format, ...)$/;"	f	class:PromptWidget
priorityPF	./src/debugger/TIADebug.cxx	/^bool TIADebug::priorityPF(int newVal)$/;"	f	class:TIADebug
process	./src/emucore/TIASnd.cxx	/^void TIASound::process(uInt8* buffer, uInt32 samples)$/;"	f	class:TIASound
processFragment	./src/common/SoundSDL.cxx	/^void SoundSDL::processFragment(uInt8* stream, Int32 length)$/;"	f	class:SoundSDL
processFragment	./src/wince/SoundWinCE.cxx	/^void SoundWinCE::processFragment(uInt8* stream, Int32 length)$/;"	f	class:SoundWinCE
prompt	./src/debugger/Debugger.hxx	/^    PromptWidget *prompt() { return myPrompt; }$/;"	f	class:Debugger
prompt	./src/debugger/gui/DebuggerDialog.hxx	/^    PromptWidget* prompt()       { return myPrompt;     }$/;"	f	class:DebuggerDialog
propSet	./src/emucore/OSystem.hxx	/^    inline PropertiesSet& propSet() const { return *myPropSet; }$/;"	f	class:OSystem
properties	./src/emucore/Console.hxx	/^    const Properties& properties() const { return myProperties; }$/;"	f	class:Console
propertiesFile	./src/emucore/OSystem.hxx	/^    const string& propertiesFile() const { return myPropertiesFile; }$/;"	f	class:OSystem
props	./src/emucore/PropsSet.hxx	/^      Properties* props;$/;"	m	struct:PropertiesSet::TreeNode
push	./src/gui/Stack.hxx	/^    void push(const T& x)$/;"	f	class:FixedStack
push_back	./src/common/Array.hxx	/^    void push_back(const Array<T>& array)$/;"	f	class:Common::Array
push_back	./src/common/Array.hxx	/^    void push_back(const T& element)$/;"	f	class:Common::Array
push_back	./src/gui/StringList.hxx	/^    void push_back(const char *str)$/;"	f	class:StringList
push_back	./src/gui/StringList.hxx	/^    void push_back(const string& str)$/;"	f	class:StringList
putBool	./src/emucore/Serializer.cxx	/^void Serializer::putBool(bool b)$/;"	f	class:Serializer
putByte	./src/emucore/Serializer.cxx	/^void Serializer::putByte(char value)$/;"	f	class:Serializer
putInt	./src/emucore/Serializer.cxx	/^void Serializer::putInt(int value)$/;"	f	class:Serializer
putString	./src/emucore/Serializer.cxx	/^void Serializer::putString(const string& str)$/;"	f	class:Serializer
putchar	./src/debugger/gui/PromptWidget.cxx	/^void PromptWidget::putchar(int c)$/;"	f	class:PromptWidget
putchar	./src/debugger/gui/PromptWidget.hxx	44;"	d
putcharIntern	./src/debugger/gui/PromptWidget.cxx	/^void PromptWidget::putcharIntern(int c)$/;"	f	class:PromptWidget
queryConsoleInfo	./src/emucore/OSystem.cxx	/^bool OSystem::queryConsoleInfo(const uInt8* image, uInt32 size,$/;"	f	class:OSystem
queryVideoHardware	./src/emucore/OSystem.cxx	/^void OSystem::queryVideoHardware()$/;"	f	class:OSystem
quit	./src/debugger/Debugger.cxx	/^void Debugger::quit()$/;"	f	class:Debugger
quit	./src/emucore/EventHandler.hxx	/^    void quit() { handleEvent(Event::Quit, 1); }$/;"	f	class:EventHandler
quit	./src/emucore/OSystem.hxx	/^    void quit() { myQuitLoop = true; }$/;"	f	class:OSystem
r1c	./src/emucore/rsynth/opsynth.c	/^    resonator_t r1c;$/;"	m	struct:rsynth_private	file:
r2c	./src/emucore/rsynth/opsynth.c	/^    resonator_t r2c;$/;"	m	struct:rsynth_private	file:
r2p	./src/emucore/rsynth/opsynth.c	/^    resonator_t r2p;$/;"	m	struct:rsynth_private	file:
r3c	./src/emucore/rsynth/opsynth.c	/^    resonator_t r3c;$/;"	m	struct:rsynth_private	file:
r3p	./src/emucore/rsynth/opsynth.c	/^    resonator_t r3p;$/;"	m	struct:rsynth_private	file:
r4c	./src/emucore/rsynth/opsynth.c	/^    resonator_t r4c;$/;"	m	struct:rsynth_private	file:
r4p	./src/emucore/rsynth/opsynth.c	/^    resonator_t r4p;$/;"	m	struct:rsynth_private	file:
r5c	./src/emucore/rsynth/opsynth.c	/^    resonator_t r5c;$/;"	m	struct:rsynth_private	file:
r5p	./src/emucore/rsynth/opsynth.c	/^    resonator_t r5p;$/;"	m	struct:rsynth_private	file:
r6p	./src/emucore/rsynth/opsynth.c	/^    resonator_t r6p;$/;"	m	struct:rsynth_private	file:
ram	./src/debugger/RamDebug.hxx	/^    IntArray ram;$/;"	m	class:RamState
ram	./src/debugger/TIADebug.hxx	/^    IntArray ram;$/;"	m	class:TiaState
ramDebug	./src/debugger/Debugger.hxx	/^    RamDebug& ramDebug() const { return *myRamDebug; }$/;"	f	class:Debugger
range_ln	./src/emucore/rsynth/opsynth.c	/^static int range_ln = 0;	\/* Line number it occurred *\/$/;"	v	file:
range_max	./src/emucore/rsynth/opsynth.c	/^static float range_max = 0.0;	\/* largest value seen *\/$/;"	v	file:
reStack	./src/gui/DialogContainer.cxx	/^void DialogContainer::reStack()$/;"	f	class:DialogContainer
read	./src/debugger/RamDebug.cxx	/^int RamDebug::read(int offset)$/;"	f	class:RamDebug
read	./src/emucore/AtariVox.cxx	/^Int32 AtariVox::read(AnalogPin)$/;"	f	class:AtariVox
read	./src/emucore/AtariVox.cxx	/^bool AtariVox::read(DigitalPin pin)$/;"	f	class:AtariVox
read	./src/emucore/Control.cxx	/^Int32 Controller::read(AnalogPin pin) const$/;"	f	class:Controller
read	./src/emucore/Control.cxx	/^bool Controller::read(DigitalPin pin) const$/;"	f	class:Controller
read	./src/emucore/Switches.hxx	/^    uInt8 read() const { return mySwitches; }$/;"	f	class:Switches
readPNGChunk	./src/gui/RomInfoWidget.cxx	/^void RomInfoWidget::readPNGChunk(ifstream& in, string& type,$/;"	f	class:RomInfoWidget
readQuotedString	./src/emucore/Props.cxx	/^string Properties::readQuotedString(istream& in)$/;"	f	class:Properties
readTrap	./src/debugger/Debugger.cxx	/^bool Debugger::readTrap(int t)$/;"	f	class:Debugger
read_buffer	./src/emucore/unzip.c	/^	char  *read_buffer;         \/* internal buffer for compressed data *\/$/;"	m	struct:__anon1	file:
readtraps	./src/debugger/Debugger.hxx	/^    PackedBitArray& readtraps() const   { return *myReadTraps;   }$/;"	f	class:Debugger
recalc	./src/debugger/gui/TiaZoomWidget.cxx	/^void TiaZoomWidget::recalc()$/;"	f	class:TiaZoomWidget
recalc	./src/gui/ListWidget.cxx	/^void ListWidget::recalc()$/;"	f	class:ListWidget
recalc	./src/gui/PopUpWidget.cxx	/^void PopUpDialog::recalc()$/;"	f	class:PopUpDialog
recalc	./src/gui/ScrollBarWidget.cxx	/^void ScrollBarWidget::recalc()$/;"	f	class:ScrollBarWidget
receivedFocus	./src/gui/Widget.cxx	/^void Widget::receivedFocus()$/;"	f	class:Widget
receivedFocusWidget	./src/debugger/gui/DataGridWidget.cxx	/^void DataGridWidget::receivedFocusWidget()$/;"	f	class:DataGridWidget
receivedFocusWidget	./src/gui/Widget.hxx	/^    virtual void receivedFocusWidget() {}$/;"	f	class:Widget
rectArray	./src/common/RectList.hxx	/^    SDL_Rect* rectArray;$/;"	m	class:RectList
rects	./src/common/RectList.cxx	/^SDL_Rect* RectList::rects()$/;"	f	class:RectList
red	./src/debugger/DebuggerParser.hxx	/^    static inline string red(const string& msg = "")$/;"	f	class:DebuggerParser
redrawFocus	./src/gui/Dialog.cxx	/^void Dialog::redrawFocus()$/;"	f	class:Dialog
redrawFocus	./src/gui/GuiObject.hxx	/^    virtual void redrawFocus() {}$/;"	f	class:GuiObject
refCount	./src/debugger/Expression.cxx	/^    int refCount = 0;$/;"	v
refP0	./src/debugger/TIADebug.cxx	/^bool TIADebug::refP0(int newVal)$/;"	f	class:TIADebug
refP1	./src/debugger/TIADebug.cxx	/^bool TIADebug::refP1(int newVal)$/;"	f	class:TIADebug
refPF	./src/debugger/TIADebug.cxx	/^bool TIADebug::refPF(int newVal)$/;"	f	class:TIADebug
refresh	./src/emucore/FrameBuffer.cxx	/^void FrameBuffer::refresh()$/;"	f	class:FrameBuffer
refresh	./src/gui/DialogContainer.hxx	/^    void refresh() { myRefreshFlag = true; }$/;"	f	class:DialogContainer
refreshDisplay	./src/emucore/EventHandler.cxx	/^void EventHandler::refreshDisplay(bool forceUpdate)$/;"	f	class:EventHandler
refreshRequired	./src/debugger/DebuggerParser.hxx	/^      bool refreshRequired;$/;"	m	struct:DebuggerParser::Command
releaseFocus	./src/gui/Dialog.cxx	/^void Dialog::releaseFocus()$/;"	f	class:Dialog
releaseFocus	./src/gui/Widget.hxx	/^    void releaseFocus() { assert(_boss); _boss->releaseFocus(); }$/;"	f	class:Widget
reloadROM	./src/debugger/Debugger.cxx	/^void Debugger::reloadROM()$/;"	f	class:Debugger
remapMode	./src/gui/EventMappingWidget.hxx	/^    bool remapMode() { return myRemapStatus; }$/;"	f	class:EventMappingWidget
remove	./src/cheat/CheatManager.cxx	/^void CheatManager::remove(int idx)$/;"	f	class:CheatManager
remove	./src/win32/SDL_win32_main.c	21;"	d	file:
removeCheat	./src/cheat/CheatCodeDialog.cxx	/^void CheatCodeDialog::removeCheat()$/;"	f	class:CheatCodeDialog
removeDialog	./src/gui/DialogContainer.cxx	/^void DialogContainer::removeDialog()$/;"	f	class:DialogContainer
removeMD5	./src/emucore/PropsSet.cxx	/^void PropertiesSet::removeMD5(const string& md5)$/;"	f	class:PropertiesSet
removePattern	./src/gui/StringList.hxx	/^    static string removePattern(const string& str, const string& pattern)$/;"	f	class:StringList
remove_at	./src/common/Array.hxx	/^    T remove_at(int idx)$/;"	f	class:Common::Array
rename	./src/wince/FSNodeWinCE.cxx	/^bool AbstractFilesystemNode::rename(const string& oldpath,$/;"	f	class:AbstractFilesystemNode
renameFile	./src/gp2x/FSNodeGP2X.cxx	/^bool AbstractFilesystemNode::renameFile(const string& oldfile,$/;"	f	class:AbstractFilesystemNode
renameFile	./src/unix/FSNodePOSIX.cxx	/^bool AbstractFilesystemNode::renameFile(const string& oldfile,$/;"	f	class:AbstractFilesystemNode
renameFile	./src/win32/FSNodeWin32.cxx	/^bool AbstractFilesystemNode::renameFile(const string& oldfile,$/;"	f	class:AbstractFilesystemNode
resMP0	./src/debugger/TIADebug.cxx	/^bool TIADebug::resMP0(int newVal)$/;"	f	class:TIADebug
resMP1	./src/debugger/TIADebug.cxx	/^bool TIADebug::resMP1(int newVal)$/;"	f	class:TIADebug
reset	./src/common/SoundNull.hxx	/^    void reset() { }$/;"	f	class:SoundNull
reset	./src/common/SoundSDL.cxx	/^void SoundSDL::reset()$/;"	f	class:SoundSDL
reset	./src/debugger/Debugger.cxx	/^void Debugger::reset()$/;"	f	class:Debugger
reset	./src/emucore/Cart0840.cxx	/^void Cartridge0840::reset()$/;"	f	class:Cartridge0840
reset	./src/emucore/Cart2K.cxx	/^void Cartridge2K::reset()$/;"	f	class:Cartridge2K
reset	./src/emucore/Cart3E.cxx	/^void Cartridge3E::reset()$/;"	f	class:Cartridge3E
reset	./src/emucore/Cart3F.cxx	/^void Cartridge3F::reset()$/;"	f	class:Cartridge3F
reset	./src/emucore/Cart4A50.cxx	/^void Cartridge4A50::reset()$/;"	f	class:Cartridge4A50
reset	./src/emucore/Cart4K.cxx	/^void Cartridge4K::reset()$/;"	f	class:Cartridge4K
reset	./src/emucore/CartAR.cxx	/^void CartridgeAR::reset()$/;"	f	class:CartridgeAR
reset	./src/emucore/CartCV.cxx	/^void CartridgeCV::reset()$/;"	f	class:CartridgeCV
reset	./src/emucore/CartDPC.cxx	/^void CartridgeDPC::reset()$/;"	f	class:CartridgeDPC
reset	./src/emucore/CartE0.cxx	/^void CartridgeE0::reset()$/;"	f	class:CartridgeE0
reset	./src/emucore/CartE7.cxx	/^void CartridgeE7::reset()$/;"	f	class:CartridgeE7
reset	./src/emucore/CartF4.cxx	/^void CartridgeF4::reset()$/;"	f	class:CartridgeF4
reset	./src/emucore/CartF4SC.cxx	/^void CartridgeF4SC::reset()$/;"	f	class:CartridgeF4SC
reset	./src/emucore/CartF6.cxx	/^void CartridgeF6::reset()$/;"	f	class:CartridgeF6
reset	./src/emucore/CartF6SC.cxx	/^void CartridgeF6SC::reset()$/;"	f	class:CartridgeF6SC
reset	./src/emucore/CartF8.cxx	/^void CartridgeF8::reset()$/;"	f	class:CartridgeF8
reset	./src/emucore/CartF8SC.cxx	/^void CartridgeF8SC::reset()$/;"	f	class:CartridgeF8SC
reset	./src/emucore/CartFASC.cxx	/^void CartridgeFASC::reset()$/;"	f	class:CartridgeFASC
reset	./src/emucore/CartFE.cxx	/^void CartridgeFE::reset()$/;"	f	class:CartridgeFE
reset	./src/emucore/CartMB.cxx	/^void CartridgeMB::reset()$/;"	f	class:CartridgeMB
reset	./src/emucore/CartMC.cxx	/^void CartridgeMC::reset()$/;"	f	class:CartridgeMC
reset	./src/emucore/CartSB.cxx	/^void CartridgeSB::reset()$/;"	f	class:CartridgeSB
reset	./src/emucore/CartUA.cxx	/^void CartridgeUA::reset()$/;"	f	class:CartridgeUA
reset	./src/emucore/CartX07.cxx	/^void CartridgeX07::reset()$/;"	f	class:CartridgeX07
reset	./src/emucore/EventHandler.cxx	/^void EventHandler::reset(State state)$/;"	f	class:EventHandler
reset	./src/emucore/M6532.cxx	/^void M6532::reset()$/;"	f	class:M6532
reset	./src/emucore/StateManager.cxx	/^void StateManager::reset()$/;"	f	class:StateManager
reset	./src/emucore/TIA.cxx	/^void TIA::reset()$/;"	f	class:TIA
reset	./src/emucore/TIASnd.cxx	/^void TIASound::reset()$/;"	f	class:TIASound
reset	./src/emucore/m6502/src/M6502.cxx	/^void M6502::reset()$/;"	f	class:M6502
reset	./src/emucore/m6502/src/NullDev.cxx	/^void NullDevice::reset()$/;"	f	class:NullDevice
reset	./src/emucore/m6502/src/System.cxx	/^void System::reset()$/;"	f	class:System
reset	./src/gui/DialogContainer.cxx	/^void DialogContainer::reset()$/;"	f	class:DialogContainer
reset	./src/wince/SoundWinCE.cxx	/^void SoundWinCE::reset()$/;"	f	class:SoundWinCE
resetCycles	./src/emucore/m6502/src/System.cxx	/^void System::resetCycles()$/;"	f	class:System
resetLoopTiming	./src/emucore/OSystem.cxx	/^void OSystem::resetLoopTiming()$/;"	f	class:OSystem
resonator	./src/emucore/rsynth/opsynth.c	/^resonator(resonator_ptr r, char *name, float input)$/;"	f	file:
resonator_ptr	./src/emucore/rsynth/opsynth.c	/^} resonator_t, *resonator_ptr;$/;"	t	typeref:struct:__anon8	file:
resonator_t	./src/emucore/rsynth/opsynth.c	/^} resonator_t, *resonator_ptr;$/;"	t	typeref:struct:__anon8	file:
rest_read_compressed	./src/emucore/unzip.c	/^	uLong rest_read_compressed; \/* number of byte to be decompressed *\/$/;"	m	struct:__anon1	file:
rest_read_uncompressed	./src/emucore/unzip.c	/^	uLong rest_read_uncompressed;\/*number of byte to be obtained after decomp*\/$/;"	m	struct:__anon1	file:
result	./src/yacc/YaccParser.cxx	/^yystype result;$/;"	v
rgl	./src/emucore/rsynth/opsynth.c	/^    resonator_t rgl;$/;"	m	struct:rsynth_private	file:
right	./src/emucore/PropsSet.hxx	/^      TreeNode* right;$/;"	m	struct:PropertiesSet::TreeNode
right	./src/gui/Rect.hxx	/^  int bottom, right;    \/\/!< The point at the bottom right of the rectangle (not part of the rect).$/;"	m	struct:GUI::Rect
riot	./src/emucore/Console.hxx	/^    M6532& riot() const { return *myRiot; }$/;"	f	class:Console
riotState	./src/debugger/Debugger.cxx	/^const string Debugger::riotState()$/;"	f	class:Debugger
rnpc	./src/emucore/rsynth/opsynth.c	/^    resonator_t rnpc;$/;"	m	struct:rsynth_private	file:
rnz	./src/emucore/rsynth/opsynth.c	/^    resonator_t rnz;$/;"	m	struct:rsynth_private	file:
rom	./src/debugger/gui/DebuggerDialog.hxx	/^    RomWidget* rom()             { return myRom;        }$/;"	f	class:DebuggerDialog
romFile	./src/emucore/OSystem.hxx	/^    const string& romFile() const { return myRomFile; }$/;"	f	class:OSystem
rout	./src/emucore/rsynth/opsynth.c	/^    resonator_t rout;$/;"	m	struct:rsynth_private	file:
rows	./src/gui/ListWidget.hxx	/^    int rows() const        { return _rows; }$/;"	f	class:ListWidget
rsc	./src/emucore/rsynth/opsynth.c	/^    resonator_t rsc;$/;"	m	struct:rsynth_private	file:
rshiftCell	./src/debugger/gui/DataGridWidget.cxx	/^void DataGridWidget::rshiftCell()$/;"	f	class:DataGridWidget
rsynth	./src/emucore/SpeakJet.hxx	/^static rsynth_t *rsynth;$/;"	v
rsynthSamples	./src/emucore/SpeakJet.hxx	/^static darray_t rsynthSamples;$/;"	v
rsynth_filter	./src/emucore/rsynth/opsynth.c	/^rsynth_filter(rsynth_t * rsynth, float voice, float noise)$/;"	f
rsynth_flush	./src/emucore/rsynth/opsynth.c	/^rsynth_flush(rsynth_t * rsynth, unsigned nsamp)$/;"	f
rsynth_frame	./src/emucore/rsynth/opsynth.c	/^rsynth_frame(rsynth_t * rsynth, float F0Hz, float *frame, const char *name)$/;"	f
rsynth_init	./src/emucore/rsynth/opsynth.c	/^rsynth_init(long sr, float ms_per_frame, speaker_t * speaker,$/;"	f
rsynth_interpolate	./src/emucore/rsynth/holmes.c	/^rsynth_interpolate(rsynth_t * rsynth, $/;"	f
rsynth_pho	./src/emucore/rsynth/phtoelm.c	/^rsynth_pho(rsynth_t * rsynth, const char *path, int dodur, char *trans)$/;"	f
rsynth_phones	./src/emucore/rsynth/phtoelm.c	/^rsynth_phones(rsynth_t * rsynth, char *phone, int len)$/;"	f
rsynth_private	./src/emucore/rsynth/opsynth.c	/^struct rsynth_private {$/;"	s	file:
rsynth_speaker	./src/emucore/rsynth/elements.c	/^rsynth_speaker(float F0Hz, float gain, Elm_t * e)$/;"	f
rsynth_term	./src/emucore/rsynth/phtoelm.c	/^rsynth_term(rsynth_t * rsynth)$/;"	f
run	./src/debugger/Debugger.cxx	/^const string Debugger::run(const string& command)$/;"	f	class:Debugger
run	./src/debugger/DebuggerParser.cxx	/^string DebuggerParser::run(const string& command)$/;"	f	class:DebuggerParser
save	./src/common/SoundNull.cxx	/^bool SoundNull::save(Serializer& out)$/;"	f	class:SoundNull
save	./src/common/SoundSDL.cxx	/^bool SoundSDL::save(Serializer& out)$/;"	f	class:SoundSDL
save	./src/emucore/Cart.cxx	/^bool Cartridge::save(ofstream& out)$/;"	f	class:Cartridge
save	./src/emucore/Cart0840.cxx	/^bool Cartridge0840::save(Serializer& out) const$/;"	f	class:Cartridge0840
save	./src/emucore/Cart2K.cxx	/^bool Cartridge2K::save(Serializer& out) const$/;"	f	class:Cartridge2K
save	./src/emucore/Cart3E.cxx	/^bool Cartridge3E::save(Serializer& out) const$/;"	f	class:Cartridge3E
save	./src/emucore/Cart3F.cxx	/^bool Cartridge3F::save(Serializer& out) const$/;"	f	class:Cartridge3F
save	./src/emucore/Cart4A50.cxx	/^bool Cartridge4A50::save(Serializer& out) const$/;"	f	class:Cartridge4A50
save	./src/emucore/Cart4K.cxx	/^bool Cartridge4K::save(Serializer& out) const$/;"	f	class:Cartridge4K
save	./src/emucore/CartAR.cxx	/^bool CartridgeAR::save(Serializer& out) const$/;"	f	class:CartridgeAR
save	./src/emucore/CartCV.cxx	/^bool CartridgeCV::save(Serializer& out) const$/;"	f	class:CartridgeCV
save	./src/emucore/CartDPC.cxx	/^bool CartridgeDPC::save(Serializer& out) const$/;"	f	class:CartridgeDPC
save	./src/emucore/CartE0.cxx	/^bool CartridgeE0::save(Serializer& out) const$/;"	f	class:CartridgeE0
save	./src/emucore/CartE7.cxx	/^bool CartridgeE7::save(Serializer& out) const$/;"	f	class:CartridgeE7
save	./src/emucore/CartF4.cxx	/^bool CartridgeF4::save(Serializer& out) const$/;"	f	class:CartridgeF4
save	./src/emucore/CartF4SC.cxx	/^bool CartridgeF4SC::save(Serializer& out) const$/;"	f	class:CartridgeF4SC
save	./src/emucore/CartF6.cxx	/^bool CartridgeF6::save(Serializer& out) const$/;"	f	class:CartridgeF6
save	./src/emucore/CartF6SC.cxx	/^bool CartridgeF6SC::save(Serializer& out) const$/;"	f	class:CartridgeF6SC
save	./src/emucore/CartF8.cxx	/^bool CartridgeF8::save(Serializer& out) const$/;"	f	class:CartridgeF8
save	./src/emucore/CartF8SC.cxx	/^bool CartridgeF8SC::save(Serializer& out) const$/;"	f	class:CartridgeF8SC
save	./src/emucore/CartFASC.cxx	/^bool CartridgeFASC::save(Serializer& out) const$/;"	f	class:CartridgeFASC
save	./src/emucore/CartFE.cxx	/^bool CartridgeFE::save(Serializer& out) const$/;"	f	class:CartridgeFE
save	./src/emucore/CartMB.cxx	/^bool CartridgeMB::save(Serializer& out) const$/;"	f	class:CartridgeMB
save	./src/emucore/CartMC.cxx	/^bool CartridgeMC::save(Serializer& out) const$/;"	f	class:CartridgeMC
save	./src/emucore/CartSB.cxx	/^bool CartridgeSB::save(Serializer& out) const$/;"	f	class:CartridgeSB
save	./src/emucore/CartUA.cxx	/^bool CartridgeUA::save(Serializer& out) const$/;"	f	class:CartridgeUA
save	./src/emucore/CartX07.cxx	/^bool CartridgeX07::save(Serializer& out) const$/;"	f	class:CartridgeX07
save	./src/emucore/Console.cxx	/^bool Console::save(Serializer& out) const$/;"	f	class:Console
save	./src/emucore/Control.cxx	/^bool Controller::save(Serializer& out) const$/;"	f	class:Controller
save	./src/emucore/M6532.cxx	/^bool M6532::save(Serializer& out) const$/;"	f	class:M6532
save	./src/emucore/Props.cxx	/^void Properties::save(ostream& out) const$/;"	f	class:Properties
save	./src/emucore/PropsSet.cxx	/^bool PropertiesSet::save(const string& filename) const$/;"	f	class:PropertiesSet
save	./src/emucore/PropsSet.hxx	/^      bool save;$/;"	m	struct:PropertiesSet::TreeNode
save	./src/emucore/Switches.cxx	/^bool Switches::save(Serializer& out) const$/;"	f	class:Switches
save	./src/emucore/TIA.cxx	/^bool TIA::save(Serializer& out) const$/;"	f	class:TIA
save	./src/emucore/m6502/src/M6502Hi.cxx	/^bool M6502High::save(Serializer& out)$/;"	f	class:M6502High
save	./src/emucore/m6502/src/M6502Low.cxx	/^bool M6502Low::save(Serializer& out)$/;"	f	class:M6502Low
save	./src/emucore/m6502/src/NullDev.cxx	/^bool NullDevice::save(Serializer& out) const$/;"	f	class:NullDevice
save	./src/emucore/m6502/src/System.cxx	/^bool System::save(Serializer& out) const$/;"	f	class:System
save	./src/wince/SoundWinCE.cxx	/^bool SoundWinCE::save(Serializer& out)$/;"	f	class:SoundWinCE
saveBuffer	./src/debugger/gui/PromptWidget.cxx	/^bool PromptWidget::saveBuffer(string& filename)$/;"	f	class:PromptWidget
saveCheatDatabase	./src/cheat/CheatManager.cxx	/^void CheatManager::saveCheatDatabase()$/;"	f	class:CheatManager
saveCheats	./src/cheat/CheatManager.cxx	/^void CheatManager::saveCheats(const string& md5sum)$/;"	f	class:CheatManager
saveConfig	./src/cheat/CheatCodeDialog.cxx	/^void CheatCodeDialog::saveConfig()$/;"	f	class:CheatCodeDialog
saveConfig	./src/emucore/Settings.cxx	/^void Settings::saveConfig()$/;"	f	class:Settings
saveConfig	./src/gui/AudioDialog.cxx	/^void AudioDialog::saveConfig()$/;"	f	class:AudioDialog
saveConfig	./src/gui/Dialog.hxx	/^    virtual void saveConfig() {}$/;"	f	class:Dialog
saveConfig	./src/gui/EventMappingWidget.cxx	/^void EventMappingWidget::saveConfig()$/;"	f	class:EventMappingWidget
saveConfig	./src/gui/FileSnapDialog.cxx	/^void FileSnapDialog::saveConfig()$/;"	f	class:FileSnapDialog
saveConfig	./src/gui/GameInfoDialog.cxx	/^void GameInfoDialog::saveConfig()$/;"	f	class:GameInfoDialog
saveConfig	./src/gui/InputDialog.cxx	/^void InputDialog::saveConfig()$/;"	f	class:InputDialog
saveConfig	./src/gui/UIDialog.cxx	/^void UIDialog::saveConfig()$/;"	f	class:UIDialog
saveConfig	./src/gui/VideoDialog.cxx	/^void VideoDialog::saveConfig()$/;"	f	class:VideoDialog
saveConfig	./src/macosx/SettingsMACOSX.cxx	/^void SettingsMACOSX::saveConfig()$/;"	f	class:SettingsMACOSX
saveFile	./src/debugger/EquateList.cxx	/^bool EquateList::saveFile(const string& file)$/;"	f	class:EquateList
saveJoyAxisMapping	./src/emucore/EventHandler.cxx	/^void EventHandler::saveJoyAxisMapping()$/;"	f	class:EventHandler
saveJoyHatMapping	./src/emucore/EventHandler.cxx	/^void EventHandler::saveJoyHatMapping()$/;"	f	class:EventHandler
saveJoyMapping	./src/emucore/EventHandler.cxx	/^void EventHandler::saveJoyMapping()$/;"	f	class:EventHandler
saveKeyMapping	./src/emucore/EventHandler.cxx	/^void EventHandler::saveKeyMapping()$/;"	f	class:EventHandler
saveNode	./src/emucore/PropsSet.cxx	/^void PropertiesSet::saveNode(ostream& out, TreeNode *node) const$/;"	f	class:PropertiesSet
saveOldState	./src/debugger/CpuDebug.cxx	/^void CpuDebug::saveOldState()$/;"	f	class:CpuDebug
saveOldState	./src/debugger/Debugger.cxx	/^void Debugger::saveOldState()$/;"	f	class:Debugger
saveOldState	./src/debugger/RamDebug.cxx	/^void RamDebug::saveOldState()$/;"	f	class:RamDebug
saveOldState	./src/debugger/TIADebug.cxx	/^void TIADebug::saveOldState()$/;"	f	class:TIADebug
savePNG	./src/common/Snapshot.cxx	/^void Snapshot::savePNG(FrameBuffer& framebuffer, const Properties& props,$/;"	f	class:Snapshot
saveROM	./src/debugger/Debugger.cxx	/^bool Debugger::saveROM(const string& filename) const$/;"	f	class:Debugger
saveROM	./src/debugger/gui/RomWidget.cxx	/^void RomWidget::saveROM(const string& rom)$/;"	f	class:RomWidget
saveScriptFile	./src/debugger/DebuggerParser.cxx	/^bool DebuggerParser::saveScriptFile(string file)$/;"	f	class:DebuggerParser
saveState	./src/debugger/Debugger.cxx	/^void Debugger::saveState(int state)$/;"	f	class:Debugger
saveState	./src/emucore/StateManager.cxx	/^void StateManager::saveState(int slot)$/;"	f	class:StateManager
save_sample	./src/emucore/SpeakJet.cxx	/^void *SpeakJet::save_sample(void *user_data,$/;"	f	class:SpeakJet
savedRom	./src/cheat/BankRomCheat.hxx	/^    uInt8  savedRom[16];$/;"	m	class:BankRomCheat
savedRom	./src/cheat/CheetahCheat.hxx	/^    uInt8  savedRom[16];$/;"	m	class:CheetahCheat
scanline	./src/common/FrameBufferGL.cxx	/^void FrameBufferGL::scanline(uInt32 row, uInt8* data) const$/;"	f	class:FrameBufferGL
scanline	./src/common/FrameBufferSoft.cxx	/^void FrameBufferSoft::scanline(uInt32 row, uInt8* data) const$/;"	f	class:FrameBufferSoft
scanline	./src/gp2x/FrameBufferGP2X.cxx	/^void FrameBufferGP2X::scanline(uInt32 row, uInt8* data) const$/;"	f	class:FrameBufferGP2X
scanline	./src/wince/FrameBufferWinCE.hxx	/^	virtual void scanline(uInt32 row, uInt8* data) { return; };$/;"	f	class:FrameBufferWinCE
scanlines	./src/debugger/TIADebug.cxx	/^int TIADebug::scanlines()$/;"	f	class:TIADebug
scanlines	./src/emucore/TIA.cxx	/^uInt32 TIA::scanlines() const$/;"	f	class:TIA
scorePF	./src/debugger/TIADebug.cxx	/^bool TIADebug::scorePF(int newVal)$/;"	f	class:TIADebug
screen_h	./src/common/VideoModeList.hxx	/^  uInt32 screen_w, screen_h;$/;"	m	struct:VideoMode
screen_w	./src/common/VideoModeList.hxx	/^  uInt32 screen_w, screen_h;$/;"	m	struct:VideoMode
screenlocked	./src/wince/FrameBufferWinCE.hxx	/^	bool issmartphone, islandscape, issquare, legacygapi, screenlocked;$/;"	m	class:FrameBufferWinCE
scrheight	./src/wince/FrameBufferWinCE.hxx	/^	uInt16 pal[256+kNumColors], myWidth, myWidthdiv4, myHeight, scrwidth, scrheight;$/;"	m	class:FrameBufferWinCE
scrlinestep	./src/wince/FrameBufferWinCE.hxx	/^	Int32 pixelstep, pixelstepdouble, linestep, linestepdouble, scrpixelstep, scrlinestep;$/;"	m	class:FrameBufferWinCE
scrollBarRecalc	./src/gui/ListWidget.cxx	/^void ListWidget::scrollBarRecalc()$/;"	f	class:ListWidget
scrollTo	./src/gui/ListWidget.cxx	/^void ListWidget::scrollTo(int item)$/;"	f	class:ListWidget
scrollToCurrent	./src/debugger/gui/PromptWidget.cxx	/^void PromptWidget::scrollToCurrent()$/;"	f	class:PromptWidget
scrollToCurrent	./src/gui/ListWidget.cxx	/^void ListWidget::scrollToCurrent(int item)$/;"	f	class:ListWidget
scrollToHighlighted	./src/gui/ListWidget.hxx	/^    void scrollToHighlighted() { scrollToCurrent(_highlightedItem); }$/;"	f	class:ListWidget
scrollToSelected	./src/gui/ListWidget.hxx	/^    void scrollToSelected()    { scrollToCurrent(_selectedItem);    }$/;"	f	class:ListWidget
scrpixelstep	./src/wince/FrameBufferWinCE.hxx	/^	Int32 pixelstep, pixelstepdouble, linestep, linestepdouble, scrpixelstep, scrlinestep;$/;"	m	class:FrameBufferWinCE
scrwidth	./src/wince/FrameBufferWinCE.hxx	/^	uInt16 pal[256+kNumColors], myWidth, myWidthdiv4, myHeight, scrwidth, scrheight;$/;"	m	class:FrameBufferWinCE
searchForBytes	./src/emucore/Cart.cxx	/^bool Cartridge::searchForBytes(const uInt8* image, uInt32 imagesize,$/;"	f	class:Cartridge
searchForBytes	./src/tools/check-sig.cxx	/^int searchForBytes(const uInt8* image, uInt32 imagesize,$/;"	f
seed	./src/emucore/Random.cxx	/^void Random::seed(uInt32 value)$/;"	f	class:Random
seed	./src/emucore/rsynth/opsynth.c	/^    unsigned long seed;$/;"	m	struct:rsynth_private	file:
segmentOne	./src/emucore/CartE0.cxx	/^void CartridgeE0::segmentOne(uInt16 slice)$/;"	f	class:CartridgeE0
segmentTwo	./src/emucore/CartE0.cxx	/^void CartridgeE0::segmentTwo(uInt16 slice)$/;"	f	class:CartridgeE0
segmentZero	./src/emucore/CartE0.cxx	/^void CartridgeE0::segmentZero(uInt16 slice)$/;"	f	class:CartridgeE0
selectedRomMD5	./src/gui/Launcher.cxx	/^string Launcher::selectedRomMD5()$/;"	f	class:Launcher
selectedRomMD5	./src/gui/LauncherDialog.cxx	/^string LauncherDialog::selectedRomMD5()$/;"	f	class:LauncherDialog
sendCommand	./src/gui/Command.hxx	/^    virtual void sendCommand(int cmd, int data, int id)$/;"	f	class:CommandSender
sendSelection	./src/debugger/gui/ContextMenu.cxx	/^void ContextMenu::sendSelection()$/;"	f	class:ContextMenu
sendSelection	./src/gui/PopUpWidget.cxx	/^void PopUpDialog::sendSelection()$/;"	f	class:PopUpDialog
set	./src/common/SoundNull.hxx	/^    void set(uInt16 addr, uInt8 value, Int32 cycle) { }$/;"	f	class:SoundNull
set	./src/common/SoundSDL.cxx	/^void SoundSDL::set(uInt16 addr, uInt8 value, Int32 cycle)$/;"	f	class:SoundSDL
set	./src/debugger/PackedBitArray.cxx	/^void PackedBitArray::set(unsigned int bit) {$/;"	f	class:PackedBitArray
set	./src/emucore/Event.cxx	/^void Event::set(Type type, Int32 value)$/;"	f	class:Event
set	./src/emucore/Props.cxx	/^void Properties::set(PropertyType key, const string& value)$/;"	f	class:Properties
set	./src/emucore/TIASnd.cxx	/^void TIASound::set(uInt16 address, uInt8 value)$/;"	f	class:TIASound
set	./src/emucore/TIASnd.hxx	/^        void set(uInt32 divideBy)$/;"	f	class:TIASound::FreqDiv
set	./src/wince/SoundWinCE.cxx	/^void SoundWinCE::set(uInt16 addr, uInt8 value, Int32 cycle)$/;"	f	class:SoundWinCE
setA	./src/debugger/CpuDebug.cxx	/^void CpuDebug::setA(int a)$/;"	f	class:CpuDebug
setActionMappings	./src/emucore/EventHandler.cxx	/^void EventHandler::setActionMappings(EventMode mode)$/;"	f	class:EventHandler
setActiveTab	./src/gui/TabWidget.cxx	/^void TabWidget::setActiveTab(int tabID, bool show)$/;"	f	class:TabWidget
setAlign	./src/gui/Widget.hxx	/^    void setAlign(TextAlignment align)  { _align = align; }$/;"	f	class:StaticTextWidget
setAspectRatio	./src/wince/FrameBufferWinCE.hxx	/^    virtual void setAspectRatio() { return; };$/;"	f	class:FrameBufferWinCE
setAvailableVidModes	./src/emucore/FrameBuffer.cxx	/^void FrameBuffer::setAvailableVidModes()$/;"	f	class:FrameBuffer
setB	./src/debugger/CpuDebug.cxx	/^void CpuDebug::setB(bool on)$/;"	f	class:CpuDebug
setBGColor	./src/gui/Widget.hxx	/^    void setBGColor(int color)     { _bgcolor = color;     }$/;"	f	class:Widget
setBGColorHi	./src/gui/Widget.hxx	/^    void setBGColorHi(int color)   { _bgcolorhi = color;   }$/;"	f	class:Widget
setBank	./src/debugger/Debugger.cxx	/^bool Debugger::setBank(int bank)$/;"	f	class:Debugger
setBase	./src/debugger/DebuggerParser.hxx	/^    void setBase(BaseFormat base) { defaultBase = base; }$/;"	f	class:DebuggerParser
setBaseDir	./src/emucore/OSystem.cxx	/^void OSystem::setBaseDir(const string& basedir)$/;"	f	class:OSystem
setBool	./src/emucore/Settings.cxx	/^void Settings::setBool(const string& key, const bool value)$/;"	f	class:Settings
setBreak	./src/debugger/gui/RomWidget.cxx	/^void RomWidget::setBreak(int data)$/;"	f	class:RomWidget
setBreakPoint	./src/debugger/Debugger.cxx	/^void Debugger::setBreakPoint(int bp, bool set)$/;"	f	class:Debugger
setBreakPoints	./src/emucore/m6502/src/M6502.cxx	/^void M6502::setBreakPoints(PackedBitArray *bp)$/;"	f	class:M6502
setByResolution	./src/common/VideoModeList.hxx	/^    void setByResolution(uInt32 width, uInt32 height)$/;"	f	class:VideoModeList
setByZoom	./src/common/VideoModeList.hxx	/^    void setByZoom(uInt32 zoom)$/;"	f	class:VideoModeList
setC	./src/debugger/CpuDebug.cxx	/^void CpuDebug::setC(bool on)$/;"	f	class:CpuDebug
setCacheFile	./src/emucore/OSystem.hxx	/^    void setCacheFile(const string& cachefile) { myGameListCacheFile = cachefile; }$/;"	f	class:OSystem
setCaretPos	./src/gui/EditableWidget.cxx	/^bool EditableWidget::setCaretPos(int newPos)$/;"	f	class:EditableWidget
setCenter	./src/gui/Dialog.hxx	/^    void setCenter(bool state) { _center = state; }$/;"	f	class:Dialog
setChannels	./src/common/SoundNull.hxx	/^    void setChannels(uInt32 channels) { }$/;"	f	class:SoundNull
setChannels	./src/common/SoundSDL.cxx	/^void SoundSDL::setChannels(uInt32 channels)$/;"	f	class:SoundSDL
setChannels	./src/wince/SoundWinCE.cxx	/^void SoundWinCE::setChannels(uInt32 channels)$/;"	f	class:SoundWinCE
setClipHeight	./src/gui/Surface.hxx	/^    inline void setClipHeight(int h) { myClipHeight = h; }$/;"	f	class:GUI::Surface
setClipWidth	./src/gui/Surface.hxx	/^    inline void setClipWidth(int w)  { myClipWidth = w;  }$/;"	f	class:GUI::Surface
setCmd	./src/gui/Widget.hxx	/^    void setCmd(int cmd)  { _cmd = cmd; }$/;"	f	class:ButtonWidget
setColor	./src/debugger/gui/ColorWidget.cxx	/^void ColorWidget::setColor(int color)$/;"	f	class:ColorWidget
setColor	./src/debugger/gui/TogglePixelWidget.hxx	/^    void setColor(int color) { _pixelColor = color; }$/;"	f	class:TogglePixelWidget
setColorLossPalette	./src/emucore/Console.cxx	/^void Console::setColorLossPalette(bool loss)$/;"	f	class:Console
setConfigFile	./src/emucore/OSystem.hxx	/^    void setConfigFile(const string& file) { myConfigFile = file; }$/;"	f	class:OSystem
setConfigPaths	./src/emucore/OSystem.cxx	/^void OSystem::setConfigPaths()$/;"	f	class:OSystem
setConsole	./src/debugger/Debugger.cxx	/^void Debugger::setConsole(Console* console)$/;"	f	class:Debugger
setCursorState	./src/emucore/FrameBuffer.cxx	/^void FrameBuffer::setCursorState()$/;"	f	class:FrameBuffer
setD	./src/debugger/CpuDebug.cxx	/^void CpuDebug::setD(bool on)$/;"	f	class:CpuDebug
setDefaultJoyAxisMap	./src/emucore/EventHandler.cxx	/^void EventHandler::setDefaultJoyAxisMap(EventMode mode)$/;"	f	class:EventHandler
setDefaultJoyAxisMap	./src/emucore/OSystem.cxx	/^void OSystem::setDefaultJoyAxisMap()$/;"	f	class:OSystem
setDefaultJoyAxisMapping	./src/emucore/EventHandler.cxx	/^void EventHandler::setDefaultJoyAxisMapping(Event::Type event, EventMode mode,$/;"	f	class:EventHandler
setDefaultJoyHatMap	./src/emucore/EventHandler.cxx	/^void EventHandler::setDefaultJoyHatMap(EventMode mode)$/;"	f	class:EventHandler
setDefaultJoyHatMap	./src/emucore/OSystem.cxx	/^void OSystem::setDefaultJoyHatMap()$/;"	f	class:OSystem
setDefaultJoyHatMapping	./src/emucore/EventHandler.cxx	/^void EventHandler::setDefaultJoyHatMapping(Event::Type event, EventMode mode,$/;"	f	class:EventHandler
setDefaultJoyMapping	./src/emucore/EventHandler.cxx	/^void EventHandler::setDefaultJoyMapping(Event::Type event, EventMode mode,$/;"	f	class:EventHandler
setDefaultJoymap	./src/emucore/EventHandler.cxx	/^void EventHandler::setDefaultJoymap(EventMode mode)$/;"	f	class:EventHandler
setDefaultJoymap	./src/emucore/OSystem.cxx	/^void OSystem::setDefaultJoymap()$/;"	f	class:OSystem
setDefaultJoymap	./src/gp2x/OSystemGP2X.cxx	/^void OSystemGP2X::setDefaultJoymap()$/;"	f	class:OSystemGP2X
setDefaultKeymap	./src/emucore/EventHandler.cxx	/^void EventHandler::setDefaultKeymap(EventMode mode)$/;"	f	class:EventHandler
setDefaultMapping	./src/emucore/EventHandler.cxx	/^void EventHandler::setDefaultMapping(EventMode mode)$/;"	f	class:EventHandler
setDefaults	./src/emucore/Props.cxx	/^void Properties::setDefaults()$/;"	f	class:Properties
setDefaults	./src/gui/AudioDialog.cxx	/^void AudioDialog::setDefaults()$/;"	f	class:AudioDialog
setDefaults	./src/gui/Dialog.hxx	/^    virtual void setDefaults() {}$/;"	f	class:Dialog
setDefaults	./src/gui/FileSnapDialog.cxx	/^void FileSnapDialog::setDefaults()$/;"	f	class:FileSnapDialog
setDefaults	./src/gui/GameInfoDialog.cxx	/^void GameInfoDialog::setDefaults()$/;"	f	class:GameInfoDialog
setDefaults	./src/gui/UIDialog.cxx	/^void UIDialog::setDefaults()$/;"	f	class:UIDialog
setDefaults	./src/gui/VideoDialog.cxx	/^void VideoDialog::setDefaults()$/;"	f	class:VideoDialog
setDigitalSpeed	./src/emucore/Paddles.hxx	/^    static void setDigitalSpeed(int speed) { _PADDLE_SPEED = speed; }$/;"	f	class:Paddles
setDirty	./src/gui/GuiObject.hxx	/^    virtual void setDirty()         { _dirty = true; }$/;"	f	class:GuiObject
setDirtyInChain	./src/gui/Widget.cxx	/^void Widget::setDirtyInChain(Widget* start)$/;"	f	class:Widget
setEditString	./src/gui/EditTextWidget.cxx	/^void EditTextWidget::setEditString(const string& str)$/;"	f	class:EditTextWidget
setEditString	./src/gui/EditableWidget.cxx	/^void EditableWidget::setEditString(const string& str)$/;"	f	class:EditableWidget
setEditString	./src/gui/InputTextDialog.cxx	/^void InputTextDialog::setEditString(const string& str, int idx)$/;"	f	class:InputTextDialog
setEditable	./src/gui/EditableWidget.cxx	/^void EditableWidget::setEditable(bool editable)$/;"	f	class:EditableWidget
setEditable	./src/gui/Widget.cxx	/^void CheckboxWidget::setEditable(bool editable)$/;"	f	class:CheckboxWidget
setEmitSignal	./src/gui/BrowserDialog.hxx	/^    void setEmitSignal(int cmd) { _cmd = cmd; }$/;"	f	class:BrowserDialog
setEmitSignal	./src/gui/InputTextDialog.hxx	/^    void setEmitSignal(int cmd) { myCmd = cmd; }$/;"	f	class:InputTextDialog
setEnabled	./src/common/SoundNull.hxx	/^    void setEnabled(bool enable) { }$/;"	f	class:SoundNull
setEnabled	./src/common/SoundSDL.cxx	/^void SoundSDL::setEnabled(bool state)$/;"	f	class:SoundSDL
setEnabled	./src/debugger/gui/DataGridOpsWidget.cxx	/^void DataGridOpsWidget::setEnabled(bool e)$/;"	f	class:DataGridOpsWidget
setEnabled	./src/gui/Widget.cxx	/^void Widget::setEnabled(bool e)$/;"	f	class:Widget
setEnabled	./src/wince/SoundWinCE.cxx	/^void SoundWinCE::setEnabled(bool state)$/;"	f	class:SoundWinCE
setEventState	./src/emucore/EventHandler.cxx	/^void EventHandler::setEventState(State state)$/;"	f	class:EventHandler
setExternal	./src/emucore/Settings.cxx	/^int Settings::setExternal(const string& key, const string& value,$/;"	f	class:Settings
setFill	./src/gui/Widget.hxx	/^    void setFill(bool fill) { _fillRect = fill; }$/;"	f	class:CheckboxWidget
setFlags	./src/gui/Widget.hxx	/^    void setFlags(int flags)    { _flags |= flags;  }$/;"	f	class:Widget
setFloat	./src/emucore/Settings.cxx	/^void Settings::setFloat(const string& key, const float value)$/;"	f	class:Settings
setFocus	./src/gui/Dialog.cxx	/^void Dialog::setFocus(Widget* w)$/;"	f	class:Dialog
setFocus	./src/gui/InputTextDialog.cxx	/^void InputTextDialog::setFocus(int idx)$/;"	f	class:InputTextDialog
setFocusForChain	./src/gui/Widget.cxx	/^Widget* Widget::setFocusForChain(GuiObject* boss, WidgetArray& arr,$/;"	f	class:Widget
setFrameRate	./src/common/SoundNull.hxx	/^    void setFrameRate(uInt32 framerate) { }$/;"	f	class:SoundNull
setFrameRate	./src/common/SoundSDL.cxx	/^void SoundSDL::setFrameRate(uInt32 framerate)$/;"	f	class:SoundSDL
setFrameRate	./src/wince/SoundWinCE.cxx	/^void SoundWinCE::setFrameRate(uInt32 framerate)$/;"	f	class:SoundWinCE
setFramerate	./src/emucore/OSystem.cxx	/^void OSystem::setFramerate(uInt32 framerate)$/;"	f	class:OSystem
setFramerate	./src/wince/OSystemWinCE.cxx	/^void OSystemWinCE::setFramerate(uInt32 framerate)$/;"	f	class:OSystemWinCE
setFullscreen	./src/emucore/FrameBuffer.cxx	/^void FrameBuffer::setFullscreen(bool enable)$/;"	f	class:FrameBuffer
setHeight	./src/gui/GuiObject.hxx	/^    virtual void setHeight(int h)     { _h = h; }$/;"	f	class:GuiObject
setHeight	./src/gui/Rect.hxx	/^	void setHeight(int aHeight) {$/;"	f	struct:GUI::Rect
setHighlighted	./src/gui/ListWidget.cxx	/^void ListWidget::setHighlighted(int item)$/;"	f	class:ListWidget
setHiliteList	./src/debugger/gui/DataGridWidget.cxx	/^void DataGridWidget::setHiliteList(const IntArray& hilitelist)$/;"	f	class:DataGridWidget
setI	./src/debugger/CpuDebug.cxx	/^void CpuDebug::setI(bool on)$/;"	f	class:CpuDebug
setID	./src/gui/Widget.hxx	/^    void setID(int id)  { _id = id;   }$/;"	f	class:Widget
setInput	./src/yacc/YaccParser.cxx	/^void setInput(const char *in) {$/;"	f	namespace:YaccParser
setInt	./src/emucore/Settings.cxx	/^void Settings::setInt(const string& key, const int value)$/;"	f	class:Settings
setIntState	./src/debugger/gui/TogglePixelWidget.cxx	/^void TogglePixelWidget::setIntState(int value, bool swap)$/;"	f	class:TogglePixelWidget
setInternal	./src/emucore/Settings.cxx	/^int Settings::setInternal(const string& key, const string& value,$/;"	f	class:Settings
setJoyAxisMap	./src/emucore/EventHandler.cxx	/^void EventHandler::setJoyAxisMap()$/;"	f	class:EventHandler
setJoyHatMap	./src/emucore/EventHandler.cxx	/^void EventHandler::setJoyHatMap()$/;"	f	class:EventHandler
setJoymap	./src/emucore/EventHandler.cxx	/^void EventHandler::setJoymap()$/;"	f	class:EventHandler
setKeymap	./src/emucore/EventHandler.cxx	/^void EventHandler::setKeymap()$/;"	f	class:EventHandler
setLabel	./src/gui/Widget.cxx	/^void StaticTextWidget::setLabel(const string& label)$/;"	f	class:StaticTextWidget
setLine	./src/gui/CheckListWidget.cxx	/^void CheckListWidget::setLine(int line, const string& str, const bool& state)$/;"	f	class:CheckListWidget
setList	./src/debugger/gui/ContextMenu.cxx	/^void ContextMenu::setList(const StringList& list)$/;"	f	class:ContextMenu
setList	./src/debugger/gui/DataGridWidget.cxx	/^void DataGridWidget::setList(const IntArray& alist, const IntArray& vlist,$/;"	f	class:DataGridWidget
setList	./src/debugger/gui/DataGridWidget.cxx	/^void DataGridWidget::setList(const int a, const int v, const bool c)$/;"	f	class:DataGridWidget
setList	./src/debugger/gui/RomListWidget.cxx	/^void RomListWidget::setList(StringList& label, StringList& bytes, StringList& disasm,$/;"	f	class:RomListWidget
setList	./src/debugger/gui/ToggleBitWidget.cxx	/^void ToggleBitWidget::setList(const StringList& off, const StringList& on)$/;"	f	class:ToggleBitWidget
setList	./src/gui/CheckListWidget.cxx	/^void CheckListWidget::setList(const StringList& list, const BoolArray& state)$/;"	f	class:CheckListWidget
setList	./src/gui/StringListWidget.cxx	/^void StringListWidget::setList(const StringList& list)$/;"	f	class:StringListWidget
setMaxValue	./src/gui/Widget.cxx	/^void SliderWidget::setMaxValue(int value)$/;"	f	class:SliderWidget
setMd5	./src/gui/GameList.hxx	/^    inline void setMd5(int i, const string& md5)$/;"	f	class:GameList
setMessage	./src/gui/ProgressDialog.cxx	/^void ProgressDialog::setMessage(const string& message)$/;"	f	class:ProgressDialog
setMinValue	./src/gui/Widget.cxx	/^void SliderWidget::setMinValue(int value)$/;"	f	class:SliderWidget
setMouseIsPaddle	./src/emucore/Paddles.cxx	/^void Paddles::setMouseIsPaddle(int number, int dir)$/;"	f	class:Paddles
setN	./src/debugger/CpuDebug.cxx	/^void CpuDebug::setN(bool on)$/;"	f	class:CpuDebug
setNumberingMode	./src/gui/StringListWidget.hxx	/^    void setNumberingMode(NumberingMode numberingMode) { _numberingMode = numberingMode; }$/;"	f	class:StringListWidget
setOpsWidget	./src/debugger/gui/CpuWidget.cxx	/^void CpuWidget::setOpsWidget(DataGridOpsWidget* w)$/;"	f	class:CpuWidget
setOpsWidget	./src/debugger/gui/DataGridWidget.hxx	/^    void setOpsWidget(DataGridOpsWidget* w) { _opsWidget = w; }$/;"	f	class:DataGridWidget
setOpsWidget	./src/debugger/gui/RamWidget.hxx	/^    void setOpsWidget(DataGridOpsWidget* w) { myRamGrid->setOpsWidget(w); }$/;"	f	class:RamWidget
setPC	./src/debugger/CpuDebug.cxx	/^void CpuDebug::setPC(int pc)$/;"	f	class:CpuDebug
setPC	./src/debugger/gui/RomWidget.cxx	/^void RomWidget::setPC(int data)$/;"	f	class:RomWidget
setPS	./src/debugger/CpuDebug.cxx	/^void CpuDebug::setPS(int ps)$/;"	f	class:CpuDebug
setPaddleMode	./src/emucore/EventHandler.cxx	/^void EventHandler::setPaddleMode(int num, bool showmessage)$/;"	f	class:EventHandler
setPageAccess	./src/emucore/m6502/src/System.cxx	/^void System::setPageAccess(uInt16 page, const PageAccess& access)$/;"	f	class:System
setPalette	./src/emucore/Console.cxx	/^void Console::setPalette(const string& type)$/;"	f	class:Console
setParentWidget	./src/gui/TabWidget.cxx	/^void TabWidget::setParentWidget(int tabID, Widget* parent)$/;"	f	class:TabWidget
setPos	./src/debugger/gui/TiaZoomWidget.cxx	/^void TiaZoomWidget::setPos(int x, int y)$/;"	f	class:TiaZoomWidget
setPos	./src/gui/GuiObject.hxx	/^    virtual void setPos(int x, int y) { _x = x; _y = y; }$/;"	f	class:GuiObject
setProgress	./src/gui/ProgressDialog.cxx	/^void ProgressDialog::setProgress(int progress)$/;"	f	class:ProgressDialog
setProperties	./src/emucore/Console.cxx	/^void Console::setProperties(const Properties& props)$/;"	f	class:Console
setProperties	./src/gui/RomInfoWidget.cxx	/^void RomInfoWidget::setProperties(const Properties& props)$/;"	f	class:RomInfoWidget
setQuitState	./src/debugger/Debugger.cxx	/^void Debugger::setQuitState()$/;"	f	class:Debugger
setRAM	./src/debugger/Debugger.cxx	/^const string Debugger::setRAM(IntArray& args)$/;"	f	class:Debugger
setRange	./src/debugger/gui/DataGridWidget.cxx	/^void DataGridWidget::setRange(int lower, int upper)$/;"	f	class:DataGridWidget
setRange	./src/gui/ProgressDialog.cxx	/^void ProgressDialog::setRange(int start, int finish, int step)$/;"	f	class:ProgressDialog
setResult	./src/gui/Dialog.hxx	/^    void setResult(int result) { _result = result; }$/;"	f	class:Dialog
setSDLMappings	./src/emucore/EventHandler.cxx	/^void EventHandler::setSDLMappings()$/;"	f	class:EventHandler
setSP	./src/debugger/CpuDebug.cxx	/^void CpuDebug::setSP(int sp)$/;"	f	class:CpuDebug
setScaler	./src/wince/FrameBufferWinCE.hxx	/^	virtual void setScaler(Scaler scaler) { return; };$/;"	f	class:FrameBufferWinCE
setSelected	./src/gui/ListWidget.cxx	/^void ListWidget::setSelected(int item)$/;"	f	class:ListWidget
setSelected	./src/gui/PopUpWidget.cxx	/^void PopUpWidget::setSelected(int item)$/;"	f	class:PopUpWidget
setSelectedMax	./src/gui/PopUpWidget.cxx	/^void PopUpWidget::setSelectedMax()$/;"	f	class:PopUpWidget
setSelectedName	./src/gui/PopUpWidget.cxx	/^void PopUpWidget::setSelectedName(const string& name)$/;"	f	class:PopUpWidget
setSelectedTag	./src/gui/PopUpWidget.cxx	/^void PopUpWidget::setSelectedTag(int tag)$/;"	f	class:PopUpWidget
setSelectedValue	./src/debugger/gui/DataGridWidget.cxx	/^void DataGridWidget::setSelectedValue(int value)$/;"	f	class:DataGridWidget
setSelection	./src/debugger/gui/ContextMenu.cxx	/^void ContextMenu::setSelection(int item)$/;"	f	class:ContextMenu
setSelection	./src/gui/PopUpWidget.cxx	/^void PopUpDialog::setSelection(int item)$/;"	f	class:PopUpDialog
setSize	./src/emucore/Settings.cxx	/^void Settings::setSize(const string& key, const int value1, const int value2)$/;"	f	class:Settings
setSound	./src/emucore/TIA.cxx	/^void TIA::setSound(Sound& sound)$/;"	f	class:TIA
setStartPath	./src/gui/BrowserDialog.cxx	/^void BrowserDialog::setStartPath(const string& startpath,$/;"	f	class:BrowserDialog
setStartState	./src/debugger/Debugger.cxx	/^void Debugger::setStartState()$/;"	f	class:Debugger
setState	./src/debugger/gui/ToggleBitWidget.cxx	/^void ToggleBitWidget::setState(const BoolArray& state, const BoolArray& changed)$/;"	f	class:ToggleBitWidget
setState	./src/debugger/gui/TogglePixelWidget.cxx	/^void TogglePixelWidget::setState(const BoolArray& state)$/;"	f	class:TogglePixelWidget
setState	./src/gui/Widget.cxx	/^void CheckboxWidget::setState(bool state)$/;"	f	class:CheckboxWidget
setStepValue	./src/gui/Widget.cxx	/^void SliderWidget::setStepValue(int value)$/;"	f	class:SliderWidget
setString	./src/emucore/Settings.cxx	/^void Settings::setString(const string& key, const string& value)$/;"	f	class:Settings
setStyle	./src/gui/CheckListWidget.cxx	/^void CheckListWidget::setStyle(CheckStyle style)$/;"	f	class:CheckListWidget
setSystem	./src/emucore/AtariVox.cxx	/^void AtariVox::setSystem(System *system) {$/;"	f	class:AtariVox
setSystem	./src/emucore/Control.hxx	/^    void setSystem(System* system) { mySystem = system; }$/;"	f	class:Controller
setTIAPalette	./src/emucore/FrameBuffer.cxx	/^void FrameBuffer::setTIAPalette(const uInt32* palette)$/;"	f	class:FrameBuffer
setTarget	./src/debugger/gui/DataGridOpsWidget.cxx	/^void DataGridOpsWidget::setTarget(CommandReceiver* target)$/;"	f	class:DataGridOpsWidget
setTarget	./src/gui/Command.hxx	/^    void setTarget(CommandReceiver* target) { _target = target; }$/;"	f	class:CommandSender
setTextColor	./src/gui/Widget.hxx	/^    void setTextColor(int color)   { _textcolor = color;   }$/;"	f	class:Widget
setTextColorHi	./src/gui/Widget.hxx	/^    void setTextColorHi(int color) { _textcolorhi = color; }$/;"	f	class:Widget
setTitle	./src/gui/BrowserDialog.hxx	/^    void setTitle(const string& title) { _title->setLabel(title); }$/;"	f	class:BrowserDialog
setTitle	./src/gui/InputTextDialog.cxx	/^void InputTextDialog::setTitle(const string& title)$/;"	f	class:InputTextDialog
setTraps	./src/emucore/m6502/src/M6502.cxx	/^void M6502::setTraps(PackedBitArray *read, PackedBitArray *write)$/;"	f	class:M6502
setUIPalette	./src/emucore/FrameBuffer.cxx	/^void FrameBuffer::setUIPalette(const uInt32* palette)$/;"	f	class:FrameBuffer
setUIPalette	./src/emucore/OSystem.cxx	/^void OSystem::setUIPalette()$/;"	f	class:OSystem
setV	./src/debugger/CpuDebug.cxx	/^void CpuDebug::setV(bool on)$/;"	f	class:CpuDebug
setValue	./src/gui/Widget.cxx	/^void SliderWidget::setValue(int value)$/;"	f	class:SliderWidget
setValue	./src/gui/Widget.cxx	/^void StaticTextWidget::setValue(int value)$/;"	f	class:StaticTextWidget
setVidMode	./src/common/FrameBufferGL.cxx	/^bool FrameBufferGL::setVidMode(VideoMode mode)$/;"	f	class:FrameBufferGL
setVidMode	./src/common/FrameBufferSoft.cxx	/^bool FrameBufferSoft::setVidMode(VideoMode mode)$/;"	f	class:FrameBufferSoft
setVidMode	./src/gp2x/FrameBufferGP2X.cxx	/^bool FrameBufferGP2X::setVidMode(VideoMode mode)$/;"	f	class:FrameBufferGP2X
setVolume	./src/common/SoundNull.hxx	/^    void setVolume(Int32 percent) { }$/;"	f	class:SoundNull
setVolume	./src/common/SoundSDL.cxx	/^void SoundSDL::setVolume(Int32 percent)$/;"	f	class:SoundSDL
setVolume	./src/wince/SoundWinCE.cxx	/^void SoundWinCE::setVolume(Int32 percent)$/;"	f	class:SoundWinCE
setWheelLines	./src/gui/ScrollBarWidget.hxx	/^    static void setWheelLines(int lines) { _WHEEL_LINES = lines; }$/;"	f	class:ScrollBarWidget
setWidth	./src/gui/GuiObject.hxx	/^    virtual void setWidth(int w)      { _w = w; }$/;"	f	class:GuiObject
setWidth	./src/gui/Rect.hxx	/^	void setWidth(int aWidth) {$/;"	f	struct:GUI::Rect
setWindowIcon	./src/emucore/FrameBuffer.cxx	/^void FrameBuffer::setWindowIcon()$/;"	f	class:FrameBuffer
setWindowTitle	./src/emucore/FrameBuffer.cxx	/^void FrameBuffer::setWindowTitle(const string& title)$/;"	f	class:FrameBuffer
setX	./src/debugger/CpuDebug.cxx	/^void CpuDebug::setX(int x)$/;"	f	class:CpuDebug
setY	./src/debugger/CpuDebug.cxx	/^void CpuDebug::setY(int y)$/;"	f	class:CpuDebug
setZ	./src/debugger/CpuDebug.cxx	/^void CpuDebug::setZ(bool on)$/;"	f	class:CpuDebug
setZoomWidget	./src/debugger/gui/TiaOutputWidget.hxx	/^    void setZoomWidget(TiaZoomWidget* w) { myZoom = w; }$/;"	f	class:TiaOutputWidget
set_bit	./src/debugger/CpuDebug.hxx	/^    static unsigned char set_bit(unsigned char input, int bit, bool on)$/;"	f	class:CpuDebug
set_cascade	./src/emucore/rsynth/opsynth.c	/^set_cascade(rsynth_t * rsynth)$/;"	f	file:
set_pole_fbw	./src/emucore/rsynth/opsynth.c	/^set_pole_fbw(long sr, float f, float bw, resonator_ptr rp, char *name,$/;"	f	file:
set_pole_fbwg	./src/emucore/rsynth/opsynth.c	/^set_pole_fbwg(long sr, float f, float bw, resonator_ptr rp, char *name,$/;"	f	file:
set_trans	./src/emucore/rsynth/holmes.c	/^set_trans(slope_t * t, int i, Elm_ptr a, Elm_ptr b, int ext, int e,$/;"	f	file:
set_zero_fbw	./src/emucore/rsynth/opsynth.c	/^set_zero_fbw(long sr, float f, float bw, resonator_ptr rp, char *name)$/;"	f	file:
setbuf	./src/win32/SDL_win32_main.c	17;"	d	file:
settings	./src/emucore/OSystem.hxx	/^    inline Settings& settings() const { return *mySettings; }$/;"	f	class:OSystem
setupJoysticks	./src/emucore/EventHandler.cxx	/^void EventHandler::setupJoysticks()$/;"	f	class:EventHandler
setup_frame	./src/emucore/rsynth/opsynth.c	/^setup_frame(rsynth_t * rsynth)$/;"	f	file:
setvbuf	./src/win32/SDL_win32_main.c	18;"	d	file:
shiftIn	./src/emucore/AtariVox.cxx	/^void AtariVox::shiftIn(bool value)$/;"	f	class:AtariVox
short	./src/yacc/y.tab.c	186;"	d	file:
show	./src/debugger/gui/ContextMenu.cxx	/^void ContextMenu::show()$/;"	f	class:ContextMenu
showCursor	./src/emucore/FrameBuffer.cxx	/^void FrameBuffer::showCursor(bool show)$/;"	f	class:FrameBuffer
showCursor	./src/gp2x/FrameBufferGP2X.cxx	/^void FrameBufferGP2X::showCursor(bool show)$/;"	f	class:FrameBufferGP2X
showMessage	./src/emucore/FrameBuffer.cxx	/^void FrameBuffer::showMessage(const string& message, MessagePosition position,$/;"	f	class:FrameBuffer
showWatches	./src/debugger/Debugger.cxx	/^string Debugger::showWatches()$/;"	f	class:Debugger
showWatches	./src/debugger/DebuggerParser.cxx	/^string DebuggerParser::showWatches()$/;"	f	class:DebuggerParser
size	./src/common/Array.hxx	/^    unsigned int size() const { return _size; }$/;"	f	class:Common::Array
size	./src/common/SoundSDL.cxx	/^uInt32 SoundSDL::RegWriteQueue::size() const$/;"	f	class:SoundSDL::RegWriteQueue
size	./src/common/VideoModeList.hxx	/^    uInt32 size() const { return myModeList.size(); }$/;"	f	class:VideoModeList
size	./src/debugger/PackedBitArray.hxx	/^		int size;$/;"	m	class:PackedBitArray
size	./src/debugger/TIADebug.hxx	/^    IntArray size;$/;"	m	class:TiaState
size	./src/emucore/PropsSet.cxx	/^uInt32 PropertiesSet::size() const$/;"	f	class:PropertiesSet
size	./src/gui/Font.hxx	/^  int           size;        \/* font size in glyphs *\/$/;"	m	struct:__anon35
size	./src/gui/GameList.hxx	/^    inline int size() { return myArray.size(); }$/;"	f	class:GameList
size	./src/gui/Stack.hxx	/^    int size() const { return _size; }$/;"	f	class:FixedStack
size	./src/wince/SoundWinCE.cxx	/^uInt32 SoundWinCE::RegWriteQueue::size() const$/;"	f	class:SoundWinCE::RegWriteQueue
sizeBL	./src/debugger/TIADebug.cxx	/^uInt8 TIADebug::sizeBL(int newVal)$/;"	f	class:TIADebug
size_central_dir	./src/emucore/unzip.c	/^	uLong size_central_dir;     \/* size of the central directory  *\/$/;"	m	struct:__anon2	file:
size_local_extrafield	./src/emucore/unzip.c	/^	uInt  size_local_extrafield;\/* size of the local extra field *\/$/;"	m	struct:__anon1	file:
slope_t	./src/emucore/rsynth/holmes.c	/^} slope_t;$/;"	t	typeref:struct:__anon10	file:
sort	./src/emucore/FSNode.cxx	/^void FSList::sort()$/;"	f	class:FSList
sortByName	./src/gui/GameList.cxx	/^void GameList::sortByName()$/;"	f	class:GameList
sound	./src/emucore/OSystem.hxx	/^    inline Sound& sound() const { return *mySound; }$/;"	f	class:OSystem
sourceLines	./src/debugger/Debugger.hxx	/^    ListFile sourceLines;$/;"	m	class:Debugger
sp	./src/debugger/CpuDebug.hxx	/^    int sp() { return mySystem->m6502().SP; }$/;"	f	class:CpuDebug
spawnThread	./src/emucore/SpeakJet.cxx	/^void SpeakJet::spawnThread()$/;"	f	class:SpeakJet
speak	./src/emucore/SpeakJet.cxx	/^void SpeakJet::speak()$/;"	f	class:SpeakJet
specialKeys	./src/debugger/gui/PromptWidget.cxx	/^void PromptWidget::specialKeys(int keycode)$/;"	f	class:PromptWidget
specialKeys	./src/gui/EditableWidget.cxx	/^bool EditableWidget::specialKeys(int keycode)$/;"	f	class:EditableWidget
start	./src/common/RectList.cxx	/^void RectList::start()$/;"	f	class:RectList
start	./src/debugger/Debugger.cxx	/^bool Debugger::start(const string& message, int address)$/;"	f	class:Debugger
start	./src/emucore/OSystem.hxx	/^      uInt32 start;$/;"	m	struct:OSystem::TimingInfo
startEditMode	./src/debugger/gui/DataGridWidget.cxx	/^void DataGridWidget::startEditMode()$/;"	f	class:DataGridWidget
startEditMode	./src/gui/EditTextWidget.cxx	/^void EditTextWidget::startEditMode()$/;"	f	class:EditTextWidget
startEditMode	./src/gui/EditableWidget.hxx	/^    virtual void startEditMode() { setFlags(WIDGET_WANTS_RAWDATA);   }$/;"	f	class:EditableWidget
startEditMode	./src/gui/ListWidget.cxx	/^void ListWidget::startEditMode()$/;"	f	class:ListWidget
startFrame	./src/emucore/TIA.cxx	/^inline void TIA::startFrame()$/;"	f	class:TIA
startRemapping	./src/gui/EventMappingWidget.cxx	/^void EventMappingWidget::startRemapping()$/;"	f	class:EventMappingWidget
state	./src/debugger/TIADebug.cxx	/^string TIADebug::state()$/;"	f	class:TIADebug
state	./src/emucore/EventHandler.hxx	/^    inline State state() { return myState; }$/;"	f	class:EventHandler
state	./src/emucore/MD5.cxx	/^  UINT4 state[4];                                   \/* state (ABCD) *\/$/;"	m	struct:__anon19	file:
state	./src/emucore/OSystem.hxx	/^    inline StateManager& state(void) const { return *myStateManager; }$/;"	f	class:OSystem
state	./src/yacc/YaccParser.cxx	/^int state = ST_DEFAULT;$/;"	v
stateChanged	./src/common/FrameBufferSoft.cxx	/^void FrameBufferSoft::stateChanged(EventHandler::State state)$/;"	f	class:FrameBufferSoft
stateChanged	./src/emucore/FrameBuffer.hxx	/^    virtual void stateChanged(EventHandler::State state) { }$/;"	f	class:FrameBuffer
stateChanged	./src/emucore/OSystem.cxx	/^void OSystem::stateChanged(EventHandler::State state)$/;"	f	class:OSystem
stateChanged	./src/macosx/OSystemMACOSX.cxx	/^void OSystemMACOSX::stateChanged(EventHandler::State state)$/;"	f	class:OSystemMACOSX
stateDir	./src/emucore/OSystem.hxx	/^    const string& stateDir() const { return myStateDir; }$/;"	f	class:OSystem
statement	./src/yacc/stella.y	/^statement:	expression { if(DEBUG_EXP) fprintf(stderr, "\\ndone\\n"); result.exp = $1; }$/;"	l
stderrPath	./src/win32/SDL_win32_main.c	/^  static char stderrPath[MAX_PATH];$/;"	v	file:
stderrPath	./src/win32/SDL_win32_main.c	/^  static wchar_t stderrPath[MAX_PATH];$/;"	v	file:
stdoutPath	./src/win32/SDL_win32_main.c	/^  static char stdoutPath[MAX_PATH];$/;"	v	file:
stdoutPath	./src/win32/SDL_win32_main.c	/^  static wchar_t stdoutPath[MAX_PATH];$/;"	v	file:
stellaDesc	./src/gui/StellaFont.hxx	/^static const FontDesc stellaDesc = {$/;"	v
stellaLargeDesc	./src/gui/StellaLargeFont.hxx	/^static const FontDesc stellaLargeDesc = {$/;"	v
stellaMain	./src/common/mainSDL.cxx	/^int stellaMain(int argc, char* argv[])$/;"	f
step	./src/debugger/Debugger.cxx	/^int Debugger::step()$/;"	f	class:Debugger
stick	./src/emucore/EventHandler.hxx	/^      SDL_Joystick* stick;$/;"	m	struct:EventHandler::Stella_Joystick
stick	./src/gui/DialogContainer.hxx	/^      int stick;$/;"	m	struct:DialogContainer::__anon40
stick	./src/gui/DialogContainer.hxx	/^      int stick;$/;"	m	struct:DialogContainer::__anon41
stick	./src/gui/DialogContainer.hxx	/^      int stick;$/;"	m	struct:DialogContainer::__anon42
stop	./src/emucore/m6502/src/M6502.cxx	/^void M6502::stop()$/;"	f	class:M6502
stopRemapping	./src/gui/EventMappingWidget.cxx	/^void EventMappingWidget::stopRemapping()$/;"	f	class:EventMappingWidget
strcmpcasenosensitive_internal	./src/emucore/unzip.c	/^local int strcmpcasenosensitive_internal (const char* fileName1, const char* fileName2)$/;"	f
stream	./src/emucore/unzip.c	/^	z_stream stream;            \/* zLib stream structure for inflate *\/$/;"	m	struct:__anon1	file:
stream_initialised	./src/emucore/unzip.c	/^	uLong stream_initialised;   \/* flag set if stream structure is initialised*\/$/;"	m	struct:__anon1	file:
stringToValue	./src/debugger/Debugger.hxx	/^    int stringToValue(const string& stringval)$/;"	f	class:Debugger
strobeCxclr	./src/debugger/TIADebug.hxx	/^    void strobeCxclr() { mySystem->poke(CXCLR, 0); }$/;"	f	class:TIADebug
strobeHmclr	./src/debugger/TIADebug.hxx	/^    void strobeHmclr() { mySystem->poke(HMCLR, 0); }$/;"	f	class:TIADebug
strobeHmove	./src/debugger/TIADebug.hxx	/^    void strobeHmove() { mySystem->poke(HMOVE, 0); }$/;"	f	class:TIADebug
strobeResBL	./src/debugger/TIADebug.hxx	/^    void strobeResBL() { mySystem->poke(RESBL, 0); }$/;"	f	class:TIADebug
strobeResM0	./src/debugger/TIADebug.hxx	/^    void strobeResM0() { mySystem->poke(RESM0, 0); }$/;"	f	class:TIADebug
strobeResM1	./src/debugger/TIADebug.hxx	/^    void strobeResM1() { mySystem->poke(RESM1, 0); }$/;"	f	class:TIADebug
strobeResP0	./src/debugger/TIADebug.hxx	/^    void strobeResP0() { mySystem->poke(RESP0, 0); }$/;"	f	class:TIADebug
strobeResP1	./src/debugger/TIADebug.hxx	/^    void strobeResP1() { mySystem->poke(RESP1, 0); }$/;"	f	class:TIADebug
strobeRsync	./src/debugger/TIADebug.hxx	/^    void strobeRsync() { mySystem->poke(RSYNC, 0); } \/\/ not emulated!$/;"	f	class:TIADebug
strobeWsync	./src/debugger/TIADebug.hxx	/^    void strobeWsync() { mySystem->poke(WSYNC, 0); }$/;"	f	class:TIADebug
supportedResolutions	./src/emucore/OSystem.hxx	/^    const ResolutionList& supportedResolutions() const { return myResolutions; }$/;"	f	class:OSystem
switches	./src/emucore/Console.hxx	/^    Switches& switches() const { return *mySwitches; }$/;"	f	class:Console
system	./src/emucore/Console.hxx	/^    System& system() const { return *mySystem; }$/;"	f	class:Console
systemCyclesReset	./src/emucore/CartAR.cxx	/^void CartridgeAR::systemCyclesReset()$/;"	f	class:CartridgeAR
systemCyclesReset	./src/emucore/CartDPC.cxx	/^void CartridgeDPC::systemCyclesReset()$/;"	f	class:CartridgeDPC
systemCyclesReset	./src/emucore/M6532.cxx	/^void M6532::systemCyclesReset()$/;"	f	class:M6532
systemCyclesReset	./src/emucore/TIA.cxx	/^void TIA::systemCyclesReset()$/;"	f	class:TIA
systemCyclesReset	./src/emucore/m6502/src/Device.cxx	/^void Device::systemCyclesReset()$/;"	f	class:Device
t	./src/emucore/rsynth/holmes.c	/^    long t;			\/* transition time *\/$/;"	m	struct:__anon10	file:
tag	./src/gui/PopUpWidget.hxx	/^    int tag;$/;"	m	struct:PopUpWidget::Entry
takeSnapshot	./src/emucore/EventHandler.cxx	/^void EventHandler::takeSnapshot()$/;"	f	class:EventHandler
target	./src/common/FrameBufferGL.hxx	/^      GLenum  target;$/;"	m	struct:FrameBufferGL::glBufferType
tex_coord	./src/common/FrameBufferGL.hxx	/^      GLfloat tex_coord[4];$/;"	m	struct:FrameBufferGL::glBufferType
text	./src/emucore/FrameBuffer.hxx	/^      string text;$/;"	m	struct:FrameBuffer::Message
texture	./src/common/FrameBufferGL.hxx	/^      GLuint  texture;$/;"	m	struct:FrameBufferGL::glBufferType
texture_height	./src/common/FrameBufferGL.hxx	/^      GLsizei texture_height;$/;"	m	struct:FrameBufferGL::glBufferType
texture_width	./src/common/FrameBufferGL.hxx	/^      GLsizei texture_width;$/;"	m	struct:FrameBufferGL::glBufferType
theOSystem	./src/common/mainSDL.cxx	/^OSystem* theOSystem = (OSystem*) NULL;$/;"	v
theRedrawTIAIndicator	./src/emucore/FrameBuffer.hxx	/^    bool theRedrawTIAIndicator;$/;"	m	class:FrameBuffer
thread	./src/emucore/SpeakJet.cxx	/^int SpeakJet::thread(void *data) {$/;"	f	class:SpeakJet
tia	./src/emucore/m6502/src/System.hxx	/^    TIA& tia()$/;"	f	class:System
tiaDebug	./src/debugger/Debugger.hxx	/^    TIADebug& tiaDebug() const { return *myTiaDebug; }$/;"	f	class:Debugger
tiaFrequency	./src/emucore/TIASnd.cxx	/^void TIASound::tiaFrequency(Int32 freq)$/;"	f	class:TIASound
tiaInfo	./src/debugger/gui/DebuggerDialog.hxx	/^    TiaInfoWidget* tiaInfo()     { return myTiaInfo;    }$/;"	f	class:DebuggerDialog
tiaMethod	./src/yacc/y.tab.c	/^	TIADEBUG_INT_METHOD tiaMethod;$/;"	m	union:YYSTYPE	file:
tiaOutput	./src/debugger/gui/DebuggerDialog.hxx	/^    TiaOutputWidget* tiaOutput() { return myTiaOutput;  }$/;"	f	class:DebuggerDialog
tiaZoom	./src/debugger/gui/DebuggerDialog.hxx	/^    TiaZoomWidget* tiaZoom()     { return myTiaZoom;    }$/;"	f	class:DebuggerDialog
time	./src/gui/DialogContainer.hxx	/^      int time;   \/\/ Time$/;"	m	struct:DialogContainer::__anon43
title	./src/gui/TabWidget.hxx	/^    string title;$/;"	m	struct:TabWidget::Tab
toAscii	./src/win32/FSNodeWin32.cxx	/^char* WindowsFilesystemNode::toAscii(TCHAR* x)$/;"	f	class:WindowsFilesystemNode
toAscii	./src/wince/FSNodeWinCE.cxx	/^char* WindowsFilesystemNode::toAscii(TCHAR* x)$/;"	f	class:WindowsFilesystemNode
toUnicode	./src/win32/FSNodeWin32.cxx	/^TCHAR* WindowsFilesystemNode::toUnicode(char* x)$/;"	f	class:WindowsFilesystemNode
toUnicode	./src/wince/FSNodeWinCE.cxx	/^TCHAR* WindowsFilesystemNode::toUnicode(char* x)$/;"	f	class:WindowsFilesystemNode
to_bin	./src/debugger/Debugger.hxx	/^    static char* to_bin(int dec, int places, char *buf) {$/;"	f	class:Debugger
to_bin_16	./src/debugger/Debugger.hxx	/^    static char* to_bin_16(int dec) {$/;"	f	class:Debugger
to_bin_8	./src/debugger/Debugger.hxx	/^    static char* to_bin_8(int dec) {$/;"	f	class:Debugger
to_hex_16	./src/debugger/Debugger.hxx	/^    static char* to_hex_16(int i)$/;"	f	class:Debugger
to_hex_4	./src/debugger/Debugger.hxx	/^    static char* to_hex_4(int i)$/;"	f	class:Debugger
to_hex_8	./src/debugger/Debugger.hxx	/^    static char* to_hex_8(int i)$/;"	f	class:Debugger
toggle	./src/debugger/PackedBitArray.cxx	/^void PackedBitArray::toggle(unsigned int bit) {$/;"	f	class:PackedBitArray
toggleB	./src/debugger/CpuDebug.cxx	/^void CpuDebug::toggleB()$/;"	f	class:CpuDebug
toggleBLBit	./src/emucore/Console.hxx	/^    void toggleBLBit() const { toggleTIABit(TIA::BL, "BL"); }$/;"	f	class:Console
toggleBit	./src/emucore/TIA.hxx	/^    bool toggleBit(TIABit b) { myBitEnabled[b] = !myBitEnabled[b]; return myBitEnabled[b]; }$/;"	f	class:TIA
toggleBreakPoint	./src/debugger/Debugger.cxx	/^void Debugger::toggleBreakPoint(int bp)$/;"	f	class:Debugger
toggleC	./src/debugger/CpuDebug.cxx	/^void CpuDebug::toggleC()$/;"	f	class:CpuDebug
toggleColorLoss	./src/emucore/Console.cxx	/^void Console::toggleColorLoss()$/;"	f	class:Console
toggleD	./src/debugger/CpuDebug.cxx	/^void CpuDebug::toggleD()$/;"	f	class:CpuDebug
toggleFilter	./src/common/FrameBufferGL.cxx	/^void FrameBufferGL::toggleFilter()$/;"	f	class:FrameBufferGL
toggleFilter	./src/common/FrameBufferSoft.cxx	/^void FrameBufferSoft::toggleFilter()$/;"	f	class:FrameBufferSoft
toggleFilter	./src/gp2x/FrameBufferGP2X.cxx	/^void FrameBufferGP2X::toggleFilter()$/;"	f	class:FrameBufferGP2X
toggleFilter	./src/wince/FrameBufferWinCE.hxx	/^    virtual void toggleFilter() { return; };$/;"	f	class:FrameBufferWinCE
toggleFormat	./src/emucore/Console.cxx	/^void Console::toggleFormat()$/;"	f	class:Console
toggleFrameBuffer	./src/emucore/OSystem.cxx	/^void OSystem::toggleFrameBuffer()$/;"	f	class:OSystem
toggleFullscreen	./src/emucore/FrameBuffer.cxx	/^void FrameBuffer::toggleFullscreen()$/;"	f	class:FrameBuffer
toggleI	./src/debugger/CpuDebug.cxx	/^void CpuDebug::toggleI()$/;"	f	class:CpuDebug
toggleM0Bit	./src/emucore/Console.hxx	/^    void toggleM0Bit() const { toggleTIABit(TIA::M0, "M0"); }$/;"	f	class:Console
toggleM1Bit	./src/emucore/Console.hxx	/^    void toggleM1Bit() const { toggleTIABit(TIA::M1, "M1"); }$/;"	f	class:Console
toggleN	./src/debugger/CpuDebug.cxx	/^void CpuDebug::toggleN()$/;"	f	class:CpuDebug
toggleP0Bit	./src/emucore/Console.hxx	/^    void toggleP0Bit() const { toggleTIABit(TIA::P0, "P0"); }$/;"	f	class:Console
toggleP1Bit	./src/emucore/Console.hxx	/^    void toggleP1Bit() const { toggleTIABit(TIA::P1, "P1"); }$/;"	f	class:Console
togglePFBit	./src/emucore/Console.hxx	/^    void togglePFBit() const { toggleTIABit(TIA::PF, "PF"); }$/;"	f	class:Console
togglePalette	./src/emucore/Console.cxx	/^void Console::togglePalette()$/;"	f	class:Console
togglePhosphor	./src/emucore/Console.cxx	/^void Console::togglePhosphor()$/;"	f	class:Console
toggleReadTrap	./src/debugger/Debugger.cxx	/^void Debugger::toggleReadTrap(int t)$/;"	f	class:Debugger
toggleRecordMode	./src/emucore/StateManager.cxx	/^bool StateManager::toggleRecordMode()$/;"	f	class:StateManager
toggleRewindMode	./src/emucore/StateManager.cxx	/^bool StateManager::toggleRewindMode()$/;"	f	class:StateManager
toggleState	./src/gui/Widget.hxx	/^    void toggleState()     { setState(!_state); }$/;"	f	class:CheckboxWidget
toggleTIABit	./src/emucore/Console.cxx	/^void Console::toggleTIABit(TIA::TIABit bit, const string& bitname, bool show) const$/;"	f	class:Console
toggleTrap	./src/debugger/Debugger.cxx	/^void Debugger::toggleTrap(int t)$/;"	f	class:Debugger
toggleV	./src/debugger/CpuDebug.cxx	/^void CpuDebug::toggleV()$/;"	f	class:CpuDebug
toggleWriteTrap	./src/debugger/Debugger.cxx	/^void Debugger::toggleWriteTrap(int t)$/;"	f	class:Debugger
toggleZ	./src/debugger/CpuDebug.cxx	/^void CpuDebug::toggleZ()$/;"	f	class:CpuDebug
top	./src/gui/Rect.hxx	/^  int top, left;        \/\/!< The point at the top left of the rectangle (part of the rect).$/;"	m	struct:GUI::Rect
top	./src/gui/Stack.hxx	/^    T top() const$/;"	f	class:FixedStack
totalFrames	./src/emucore/OSystem.hxx	/^      uInt32 totalFrames;$/;"	m	struct:OSystem::TimingInfo
totalInstructionCount	./src/emucore/m6502/src/M6502.hxx	/^    int totalInstructionCount() { return myTotalInstructionCount; }$/;"	f	class:M6502
totalTime	./src/emucore/OSystem.hxx	/^      uInt32 totalTime;$/;"	m	struct:OSystem::TimingInfo
trace	./src/debugger/Debugger.cxx	/^int Debugger::trace()$/;"	f	class:Debugger
translateCoords	./src/common/FrameBufferGL.cxx	/^void FrameBufferGL::translateCoords(Int32& x, Int32& y) const$/;"	f	class:FrameBufferGL
translateCoords	./src/common/FrameBufferSoft.cxx	/^void FrameBufferSoft::translateCoords(Int32& x, Int32& y) const$/;"	f	class:FrameBufferSoft
translateCoords	./src/gp2x/FrameBufferGP2X.cxx	/^void FrameBufferGP2X::translateCoords(Int32& x, Int32& y) const$/;"	f	class:FrameBufferGP2X
trapStatus	./src/debugger/DebuggerParser.cxx	/^string DebuggerParser::trapStatus(int addr)$/;"	f	class:DebuggerParser
trie_free	./src/emucore/rsynth/trie.c	/^trie_free(trie_ptr * r, void (*func) (void *))$/;"	f
trie_id	./src/emucore/rsynth/trie.c	/^char *trie_id = "$Id: trie.c,v 1.1 2006\/06\/11 07:13:27 urchlay Exp $";$/;"	v
trie_insert	./src/emucore/rsynth/trie.c	/^trie_insert(trie_ptr * r, char *s, void *value)$/;"	f
trie_lookup	./src/emucore/rsynth/trie.c	/^trie_lookup(trie_ptr * r, char **sp)$/;"	f
trie_s	./src/emucore/rsynth/trie.c	/^struct trie_s {$/;"	s	file:
trim	./src/emucore/Settings.hxx	/^    static string trim(string& str)$/;"	f	class:Settings
tryInsertChar	./src/debugger/gui/DataGridWidget.cxx	/^bool DataGridWidget::tryInsertChar(char c, int pos)$/;"	f	class:DataGridWidget
tryInsertChar	./src/gui/EditableWidget.cxx	/^bool EditableWidget::tryInsertChar(char c, int pos)$/;"	f	class:EditableWidget
type	./src/common/FrameBufferGL.hxx	/^      GLenum  type;$/;"	m	struct:FrameBufferGL::glBufferType
type	./src/common/FrameBufferGL.hxx	/^    BufferType type() const { return kGLBuffer; }$/;"	f	class:FrameBufferGL
type	./src/common/FrameBufferSoft.hxx	/^    BufferType type() const { return kSoftBuffer; }$/;"	f	class:FrameBufferSoft
type	./src/emucore/Control.cxx	/^const Controller::Type Controller::type() const$/;"	f	class:Controller
type	./src/emucore/EventHandler.hxx	/^      JoyType       type;$/;"	m	struct:EventHandler::Stella_Joystick
type	./src/gp2x/FrameBufferGP2X.hxx	/^    virtual BufferType type() const { return kSoftBuffer; }$/;"	f	class:FrameBufferGP2X
type	./src/wince/FrameBufferWinCE.hxx	/^	virtual BufferType type() { return kSoftBuffer; } $/;"	f	class:FrameBufferWinCE
uInt16	./src/emucore/m6502/src/bspf/src/bspf.hxx	/^typedef unsigned short uInt16;$/;"	t
uInt32	./src/emucore/m6502/src/bspf/src/bspf.hxx	/^typedef unsigned int uInt32;$/;"	t
uInt32	./src/tools/check-sig.cxx	/^typedef unsigned int uInt32;$/;"	t	file:
uInt8	./src/emucore/m6502/src/bspf/src/bspf.hxx	/^typedef unsigned char uInt8;$/;"	t
uInt8	./src/tools/check-sig.cxx	/^typedef unsigned char uInt8;$/;"	t	file:
undefine	./src/debugger/EquateList.cxx	/^bool EquateList::undefine(const string& label)$/;"	f	class:EquateList
unhex	./src/cheat/Cheat.hxx	/^    static uInt16 unhex(const string& hex)$/;"	f	class:Cheat
unlockBank	./src/emucore/Cart.hxx	/^    void unlockBank() { bankLocked = false; }$/;"	f	class:Cartridge
unlockDataBus	./src/emucore/m6502/src/System.cxx	/^void System::unlockDataBus()$/;"	f	class:System
unlockState	./src/debugger/Debugger.cxx	/^void Debugger::unlockState()$/;"	f	class:Debugger
unzClose	./src/emucore/unzip.c	/^extern int ZEXPORT unzClose (unzFile file)$/;"	f
unzCloseCurrentFile	./src/emucore/unzip.c	/^extern int ZEXPORT unzCloseCurrentFile (unzFile file)$/;"	f
unzGetCurrentFileInfo	./src/emucore/unzip.c	/^extern int ZEXPORT unzGetCurrentFileInfo$/;"	f
unzGetGlobalComment	./src/emucore/unzip.c	/^extern int ZEXPORT unzGetGlobalComment$/;"	f
unzGetGlobalInfo	./src/emucore/unzip.c	/^extern int ZEXPORT unzGetGlobalInfo (unzFile file, unz_global_info* pglobal_info)$/;"	f
unzGetLocalExtrafield	./src/emucore/unzip.c	/^extern int ZEXPORT unzGetLocalExtrafield$/;"	f
unzGoToFirstFile	./src/emucore/unzip.c	/^extern int ZEXPORT unzGoToFirstFile (unzFile file)$/;"	f
unzGoToNextFile	./src/emucore/unzip.c	/^extern int ZEXPORT unzGoToNextFile (unzFile file)$/;"	f
unzLocateFile	./src/emucore/unzip.c	/^extern int ZEXPORT unzLocateFile$/;"	f
unzOpen	./src/emucore/unzip.c	/^extern unzFile ZEXPORT unzOpen(const char *path)$/;"	f
unzOpenCurrentFile	./src/emucore/unzip.c	/^extern int ZEXPORT unzOpenCurrentFile (unzFile file)$/;"	f
unzReadCurrentFile	./src/emucore/unzip.c	/^extern int ZEXPORT unzReadCurrentFile$/;"	f
unzStringFileNameCompare	./src/emucore/unzip.c	/^extern int ZEXPORT unzStringFileNameCompare$/;"	f
unz_copyright	./src/emucore/unzip.c	/^const char unz_copyright[] =$/;"	v
unz_file_info_internal	./src/emucore/unzip.c	/^} unz_file_info_internal;$/;"	t	typeref:struct:unz_file_info_internal_s	file:
unz_file_info_internal_s	./src/emucore/unzip.c	/^typedef struct unz_file_info_internal_s$/;"	s	file:
unz_s	./src/emucore/unzip.c	/^} unz_s;$/;"	t	typeref:struct:__anon2	file:
unzeof	./src/emucore/unzip.c	/^extern int ZEXPORT unzeof (unzFile file)$/;"	f
unzlocal_CheckCurrentFileCoherencyHeader	./src/emucore/unzip.c	/^local int unzlocal_CheckCurrentFileCoherencyHeader$/;"	f
unzlocal_DosDateToTmuDate	./src/emucore/unzip.c	/^local void unzlocal_DosDateToTmuDate (uLong ulDosDate, tm_unz* ptm)$/;"	f
unzlocal_GetCurrentFileInfoInternal	./src/emucore/unzip.c	/^local int unzlocal_GetCurrentFileInfoInternal $/;"	f
unzlocal_SearchCentralDir	./src/emucore/unzip.c	/^local uLong unzlocal_SearchCentralDir(FILE* fin)$/;"	f
unzlocal_getByte	./src/emucore/unzip.c	/^local int unzlocal_getByte(FILE* fin, int* pi)$/;"	f
unzlocal_getLong	./src/emucore/unzip.c	/^local int unzlocal_getLong (FILE* fin,uLong* pX)$/;"	f
unzlocal_getShort	./src/emucore/unzip.c	/^local int unzlocal_getShort (FILE* fin,uLong* pX)$/;"	f
unztell	./src/emucore/unzip.c	/^extern z_off_t ZEXPORT unztell (unzFile file)$/;"	f
up_arrow	./src/gui/ScrollBarWidget.cxx	/^static unsigned int up_arrow[8] = {$/;"	v	file:
up_down_arrows	./src/gui/PopUpWidget.cxx	/^static unsigned int up_down_arrows[8] = {$/;"	v	file:
update	./src/emucore/Booster.cxx	/^void BoosterGrip::update()$/;"	f	class:BoosterGrip
update	./src/emucore/Driving.cxx	/^void Driving::update()$/;"	f	class:Driving
update	./src/emucore/FrameBuffer.cxx	/^void FrameBuffer::update()$/;"	f	class:FrameBuffer
update	./src/emucore/Joystick.cxx	/^void Joystick::update()$/;"	f	class:Joystick
update	./src/emucore/Keyboard.cxx	/^void Keyboard::update()$/;"	f	class:Keyboard
update	./src/emucore/Paddles.cxx	/^void Paddles::update()$/;"	f	class:Paddles
update	./src/emucore/StateManager.cxx	/^void StateManager::update()$/;"	f	class:StateManager
update	./src/emucore/Switches.cxx	/^void Switches::update()$/;"	f	class:Switches
update	./src/emucore/TIA.cxx	/^void TIA::update()$/;"	f	class:TIA
update	./src/emucore/TrackBall22.cxx	/^void TrackBall22::update()$/;"	f	class:TrackBall22
update	./src/wince/SoundWinCE.cxx	/^void SoundWinCE::update(void)$/;"	f	class:SoundWinCE
updateActiveTab	./src/gui/TabWidget.cxx	/^void TabWidget::updateActiveTab()$/;"	f	class:TabWidget
updateFrame	./src/emucore/TIA.cxx	/^inline void TIA::updateFrame(Int32 clock)$/;"	f	class:TIA
updateFrameScanline	./src/emucore/TIA.cxx	/^inline void TIA::updateFrameScanline(uInt32 clocksToUpdate, uInt32 hpos)$/;"	f	class:TIA
updateListing	./src/gui/BrowserDialog.cxx	/^void BrowserDialog::updateListing()$/;"	f	class:BrowserDialog
updateListing	./src/gui/LauncherDialog.cxx	/^void LauncherDialog::updateListing(bool fullReload)$/;"	f	class:LauncherDialog
updateMusicModeDataFetchers	./src/emucore/CartDPC.cxx	/^inline void CartridgeDPC::updateMusicModeDataFetchers()$/;"	f	class:CartridgeDPC
updateScanline	./src/emucore/TIA.cxx	/^void TIA::updateScanline()$/;"	f	class:TIA
updateScanlineByStep	./src/emucore/TIA.cxx	/^void TIA::updateScanlineByStep()$/;"	f	class:TIA
updateScanlineByTrace	./src/emucore/TIA.cxx	/^void TIA::updateScanlineByTrace(int target)$/;"	f	class:TIA
updateScrollBuffer	./src/debugger/gui/PromptWidget.cxx	/^void PromptWidget::updateScrollBuffer()$/;"	f	class:PromptWidget
updateStrings	./src/gui/AboutDialog.cxx	/^void AboutDialog::updateStrings(int page, int lines, string& title, string* &dsc)$/;"	f	class:AboutDialog
updateStrings	./src/gui/HelpDialog.cxx	/^void HelpDialog::updateStrings(uInt8 page, uInt8 lines,$/;"	f	class:HelpDialog
updateTime	./src/gui/DialogContainer.cxx	/^void DialogContainer::updateTime(uInt32 time)$/;"	f	class:DialogContainer
usage	./src/emucore/Settings.cxx	/^void Settings::usage()$/;"	f	class:Settings
useLauncher	./src/emucore/EventHandler.hxx	/^    inline bool useLauncher() { return myUseLauncherFlag; }$/;"	f	class:EventHandler
usrsamp	./src/emucore/rsynth/opsynth.c	/^    unsigned usrsamp;$/;"	m	struct:rsynth_private	file:
v	./src/debugger/CpuDebug.hxx	/^    int v() { return mySystem->m6502().V; }$/;"	f	class:CpuDebug
v	./src/emucore/rsynth/holmes.c	/^    float v;			\/* boundary value *\/$/;"	m	struct:__anon10	file:
v	./src/emucore/rsynth/holmes.c	/^    float v;$/;"	m	struct:__anon11	file:
vLine	./src/common/FrameBufferGL.cxx	/^void FrameBufferGL::vLine(uInt32 x, uInt32 y, uInt32 y2, int color)$/;"	f	class:FrameBufferGL
vLine	./src/common/FrameBufferSoft.cxx	/^void FrameBufferSoft::vLine(uInt32 x, uInt32 y, uInt32 y2, int color)$/;"	f	class:FrameBufferSoft
vLine	./src/gp2x/FrameBufferGP2X.cxx	/^void FrameBufferGP2X::vLine(uInt32 x, uInt32 y, uInt32 y2, int color)$/;"	f	class:FrameBufferGP2X
val	./src/emucore/EventHandler.hxx	/^      int x, y, x_amt, y_amt, amt, val, old_val;$/;"	m	struct:EventHandler::JoyMouse
val	./src/yacc/y.tab.c	/^	int val;$/;"	m	union:YYSTYPE	file:
valid	./src/emucore/PropsSet.hxx	/^      bool valid;$/;"	m	struct:PropertiesSet::TreeNode
validate	./src/emucore/Settings.cxx	/^void Settings::validate()$/;"	f	class:Settings
validateArgs	./src/debugger/DebuggerParser.cxx	/^bool DebuggerParser::validateArgs(int cmd)$/;"	f	class:DebuggerParser
validatePath	./src/gp2x/FSNodeGP2X.cxx	/^static string validatePath(const string& p)$/;"	f	file:
validatePath	./src/unix/FSNodePOSIX.cxx	/^static string validatePath(const string& p)$/;"	f	file:
validatePath	./src/win32/FSNodeWin32.cxx	/^static string validatePath(const string& p)$/;"	f	file:
validatePath	./src/wince/FSNodeWinCE.cxx	/^static string validatePath(const string& p)$/;"	f	file:
value	./src/cheat/BankRomCheat.hxx	/^    uInt8  value;$/;"	m	class:BankRomCheat
value	./src/cheat/CheetahCheat.hxx	/^    uInt8  value;$/;"	m	class:CheetahCheat
value	./src/cheat/RamCheat.hxx	/^    uInt8  value;$/;"	m	class:RamCheat
value	./src/common/SoundSDL.hxx	/^      uInt8 value;$/;"	m	struct:SoundSDL::RegWrite
value	./src/emucore/Settings.hxx	/^      string value;$/;"	m	struct:Settings::Setting
value	./src/emucore/rsynth/trie.c	/^    void *value;$/;"	m	struct:trie_s	file:
value	./src/gui/DialogContainer.hxx	/^      int value;$/;"	m	struct:DialogContainer::__anon41
value	./src/gui/DialogContainer.hxx	/^      int value;$/;"	m	struct:DialogContainer::__anon42
value	./src/wince/SoundWinCE.hxx	/^	uInt8 value;$/;"	m	struct:RegWrite
valueToPos	./src/gui/Widget.cxx	/^int SliderWidget::valueToPos(int value)$/;"	f	class:SliderWidget
valueToString	./src/debugger/Debugger.cxx	/^const string Debugger::valueToString(int value, BaseFormat outputBase)$/;"	f	class:Debugger
vblank	./src/debugger/TIADebug.cxx	/^bool TIADebug::vblank()$/;"	f	class:TIADebug
vdelBL	./src/debugger/TIADebug.cxx	/^bool TIADebug::vdelBL(int newVal)$/;"	f	class:TIADebug
vdelP0	./src/debugger/TIADebug.cxx	/^bool TIADebug::vdelP0(int newVal)$/;"	f	class:TIADebug
vdelP1	./src/debugger/TIADebug.cxx	/^bool TIADebug::vdelP1(int newVal)$/;"	f	class:TIADebug
virt	./src/emucore/OSystem.hxx	/^      uInt32 virt;$/;"	m	struct:OSystem::TimingInfo
volume	./src/emucore/TIASnd.cxx	/^void TIASound::volume(uInt32 percent)$/;"	f	class:TIASound
vox	./src/emucore/Console.hxx	/^    AtariVox *vox;$/;"	m	class:Console
vprintf	./src/debugger/gui/PromptWidget.cxx	/^int PromptWidget::vprintf(const char *format, va_list argptr)$/;"	f	class:PromptWidget
vsync	./src/debugger/TIADebug.cxx	/^bool TIADebug::vsync()$/;"	f	class:TIADebug
w	./src/emucore/FrameBuffer.hxx	/^      int x, y, w, h;$/;"	m	struct:FrameBuffer::Message
wBPP	./src/wince/FrameBufferWinCE.hxx	/^   WORD wBPP;$/;"	m	struct:_RawFrameBufferInfo
wFormat	./src/wince/FrameBufferWinCE.hxx	/^   WORD wFormat;$/;"	m	struct:_RawFrameBufferInfo
waitHorizontalSync	./src/emucore/TIA.cxx	/^inline void TIA::waitHorizontalSync()$/;"	f	class:TIA
wantsFocus	./src/debugger/gui/DataGridWidget.hxx	/^    virtual bool wantsFocus() { return true; }$/;"	f	class:DataGridWidget
wantsFocus	./src/debugger/gui/PromptWidget.hxx	/^    virtual bool wantsFocus() { return true; }$/;"	f	class:PromptWidget
wantsFocus	./src/debugger/gui/TiaOutputWidget.hxx	/^    bool wantsFocus() { return false; }$/;"	f	class:TiaOutputWidget
wantsFocus	./src/debugger/gui/TiaZoomWidget.hxx	/^    bool wantsFocus() { return true; }$/;"	f	class:TiaZoomWidget
wantsFocus	./src/debugger/gui/ToggleWidget.hxx	/^    virtual bool wantsFocus() { return true; }$/;"	f	class:ToggleWidget
wantsFocus	./src/gui/EditableWidget.hxx	/^    virtual bool wantsFocus() { return _editable; }$/;"	f	class:EditableWidget
wantsFocus	./src/gui/PopUpWidget.hxx	/^    bool wantsFocus()  { return true; }$/;"	f	class:PopUpWidget
wantsFocus	./src/gui/Widget.hxx	/^    bool wantsFocus() const  { return _flags & WIDGET_RETAIN_FOCUS;  }$/;"	f	class:Widget
wantsRaw	./src/gui/Widget.hxx	/^    bool wantsRaw() const    { return _flags & WIDGET_WANTS_RAWDATA; }$/;"	f	class:Widget
wantsTab	./src/gui/Widget.hxx	/^    bool wantsTab() const    { return _flags & WIDGET_WANTS_TAB;     }$/;"	f	class:Widget
watches	./src/debugger/DebuggerParser.hxx	/^    StringList watches;$/;"	m	class:DebuggerParser
width	./src/common/FrameBufferGL.hxx	/^      int     width, height;$/;"	m	struct:FrameBufferGL::glBufferType
width	./src/emucore/OSystem.hxx	/^  uInt32 width;$/;"	m	struct:Resolution
width	./src/emucore/TIA.cxx	/^uInt32 TIA::width() const $/;"	f	class:TIA
width	./src/gui/Font.hxx	/^  const uInt8*  width;       \/* character widths or NULL if fixed *\/$/;"	m	struct:__anon35
width	./src/gui/Rect.hxx	/^	int width() const { return right - left; }$/;"	f	struct:GUI::Rect
wordSize	./src/debugger/PackedBitArray.hxx	24;"	d
words	./src/debugger/PackedBitArray.hxx	/^		int words;$/;"	m	class:PackedBitArray
wrap	./src/emucore/FSNode.cxx	/^FilesystemNode AbstractFilesystemNode::wrap(AbstractFilesystemNode *node)$/;"	f	class:AbstractFilesystemNode
write	./src/debugger/RamDebug.cxx	/^void RamDebug::write(int offset, int value)$/;"	f	class:RamDebug
write	./src/emucore/AtariVox.cxx	/^void AtariVox::write(DigitalPin pin, bool value)$/;"	f	class:AtariVox
write	./src/emucore/Control.hxx	/^    virtual void write(DigitalPin pin, bool value) { };$/;"	f	class:Controller
write	./src/emucore/Keyboard.cxx	/^void Keyboard::write(DigitalPin pin, bool value)$/;"	f	class:Keyboard
write	./src/emucore/SpeakJet.cxx	/^void SpeakJet::write(uInt8 code)$/;"	f	class:SpeakJet
writePNGChunk	./src/common/Snapshot.cxx	/^void Snapshot::writePNGChunk(ofstream& out, const char* type,$/;"	f	class:Snapshot
writePNGText	./src/common/Snapshot.cxx	/^void Snapshot::writePNGText(ofstream& out, const string& key, const string& text)$/;"	f	class:Snapshot
writeQuotedString	./src/emucore/Props.cxx	/^void Properties::writeQuotedString(ostream& out, const string& s)$/;"	f	class:Properties
writeTrap	./src/debugger/Debugger.cxx	/^bool Debugger::writeTrap(int t)$/;"	f	class:Debugger
writetraps	./src/debugger/Debugger.hxx	/^    PackedBitArray& writetraps() const  { return *myWriteTraps;  }$/;"	f	class:Debugger
x	./src/debugger/CpuDebug.hxx	/^    int x() { return mySystem->m6502().X; }$/;"	f	class:CpuDebug
x	./src/emucore/EventHandler.hxx	/^      int x, y, x_amt, y_amt, amt, val, old_val;$/;"	m	struct:EventHandler::JoyMouse
x	./src/emucore/FrameBuffer.hxx	/^      int x, y, w, h;$/;"	m	struct:FrameBuffer::Message
x	./src/gui/DialogContainer.hxx	/^      int x, y;   \/\/ Position of mouse when the click occured$/;"	m	struct:DialogContainer::__anon43
x	./src/gui/DialogContainer.hxx	/^      int x;$/;"	m	struct:DialogContainer::__anon39
x	./src/gui/Rect.hxx	/^  int x;  \/\/!< The horizontal part of the point$/;"	m	struct:GUI::Point
x_amt	./src/emucore/EventHandler.hxx	/^      int x, y, x_amt, y_amt, amt, val, old_val;$/;"	m	struct:EventHandler::JoyMouse
xlatePhoneme	./src/emucore/SpeakJet.cxx	/^const char *SpeakJet::xlatePhoneme(uInt8 code)$/;"	f	class:SpeakJet
y	./src/debugger/CpuDebug.hxx	/^    int y() { return mySystem->m6502().Y; }$/;"	f	class:CpuDebug
y	./src/emucore/EventHandler.hxx	/^      int x, y, x_amt, y_amt, amt, val, old_val;$/;"	m	struct:EventHandler::JoyMouse
y	./src/emucore/FrameBuffer.hxx	/^      int x, y, w, h;$/;"	m	struct:FrameBuffer::Message
y	./src/gui/DialogContainer.hxx	/^      int x, y;   \/\/ Position of mouse when the click occured$/;"	m	struct:DialogContainer::__anon43
y	./src/gui/DialogContainer.hxx	/^      int y;$/;"	m	struct:DialogContainer::__anon39
y	./src/gui/Rect.hxx	/^  int y;  \/\/!< The vertical part of the point$/;"	m	struct:GUI::Point
y_amt	./src/emucore/EventHandler.hxx	/^      int x, y, x_amt, y_amt, amt, val, old_val;$/;"	m	struct:EventHandler::JoyMouse
yy_reduce_print	./src/yacc/y.tab.c	/^yy_reduce_print (YYSTYPE *yyvsp, int yyrule)$/;"	f	file:
yy_stack_print	./src/yacc/y.tab.c	/^yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)$/;"	f	file:
yy_symbol_print	./src/yacc/y.tab.c	/^yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)$/;"	f	file:
yy_symbol_value_print	./src/yacc/y.tab.c	/^yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)$/;"	f	file:
yyalloc	./src/yacc/y.tab.c	/^union yyalloc$/;"	u	file:
yychar	./src/yacc/y.tab.c	/^int yychar;$/;"	v
yycheck	./src/yacc/y.tab.c	/^static const yytype_int8 yycheck[] =$/;"	v	file:
yyclearin	./src/yacc/y.tab.c	643;"	d	file:
yydebug	./src/yacc/y.tab.c	/^int yydebug;$/;"	v
yydefact	./src/yacc/y.tab.c	/^static const yytype_uint8 yydefact[] =$/;"	v	file:
yydefgoto	./src/yacc/y.tab.c	/^static const yytype_int8 yydefgoto[] =$/;"	v	file:
yydestruct	./src/yacc/y.tab.c	/^yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)$/;"	f	file:
yyerrok	./src/yacc/y.tab.c	642;"	d	file:
yyerror	./src/yacc/y.tab.c	/^void yyerror(const char *e) {$/;"	f
yylex	./src/yacc/YaccParser.cxx	/^int yylex() {$/;"	f	namespace:YaccParser
yylval	./src/yacc/y.tab.c	/^YYSTYPE yylval;$/;"	v
yynerrs	./src/yacc/y.tab.c	/^int yynerrs;$/;"	v
yypact	./src/yacc/y.tab.c	/^static const yytype_int16 yypact[] =$/;"	v	file:
yyparse	./src/yacc/y.tab.c	/^yyparse (void *YYPARSE_PARAM)$/;"	f
yypgoto	./src/yacc/y.tab.c	/^static const yytype_int8 yypgoto[] =$/;"	v	file:
yyprhs	./src/yacc/y.tab.c	/^static const yytype_uint8 yyprhs[] =$/;"	v	file:
yyr1	./src/yacc/y.tab.c	/^static const yytype_uint8 yyr1[] =$/;"	v	file:
yyr2	./src/yacc/y.tab.c	/^static const yytype_uint8 yyr2[] =$/;"	v	file:
yyrhs	./src/yacc/y.tab.c	/^static const yytype_int8 yyrhs[] =$/;"	v	file:
yyrline	./src/yacc/y.tab.c	/^static const yytype_uint8 yyrline[] =$/;"	v	file:
yyss	./src/yacc/y.tab.c	/^  yytype_int16 yyss;$/;"	m	union:yyalloc	file:
yystos	./src/yacc/y.tab.c	/^static const yytype_uint8 yystos[] =$/;"	v	file:
yystpcpy	./src/yacc/y.tab.c	/^yystpcpy (char *yydest, const char *yysrc)$/;"	f	file:
yystpcpy	./src/yacc/y.tab.c	938;"	d	file:
yystrlen	./src/yacc/y.tab.c	/^yystrlen (const char *yystr)$/;"	f	file:
yystrlen	./src/yacc/y.tab.c	915;"	d	file:
yystype	./src/yacc/y.tab.c	172;"	d	file:
yysyntax_error	./src/yacc/y.tab.c	/^yysyntax_error (char *yyresult, int yystate, int yychar)$/;"	f	file:
yytable	./src/yacc/y.tab.c	/^static const yytype_int8 yytable[] =$/;"	v	file:
yytext	./src/yacc/y.tab.c	/^char *yytext;$/;"	v
yytname	./src/yacc/y.tab.c	/^static const char *const yytname[] =$/;"	v	file:
yytnamerr	./src/yacc/y.tab.c	/^yytnamerr (char *yyres, const char *yystr)$/;"	f	file:
yytokentype	./src/yacc/y.tab.c	/^   enum yytokentype {$/;"	g	file:
yytoknum	./src/yacc/y.tab.c	/^static const yytype_uint16 yytoknum[] =$/;"	v	file:
yytranslate	./src/yacc/y.tab.c	/^static const yytype_uint8 yytranslate[] =$/;"	v	file:
yytype_int16	./src/yacc/y.tab.c	/^typedef YYTYPE_INT16 yytype_int16;$/;"	t	file:
yytype_int16	./src/yacc/y.tab.c	/^typedef short int yytype_int16;$/;"	t	file:
yytype_int8	./src/yacc/y.tab.c	/^typedef YYTYPE_INT8 yytype_int8;$/;"	t	file:
yytype_int8	./src/yacc/y.tab.c	/^typedef short int yytype_int8;$/;"	t	file:
yytype_int8	./src/yacc/y.tab.c	/^typedef signed char yytype_int8;$/;"	t	file:
yytype_uint16	./src/yacc/y.tab.c	/^typedef YYTYPE_UINT16 yytype_uint16;$/;"	t	file:
yytype_uint16	./src/yacc/y.tab.c	/^typedef unsigned short int yytype_uint16;$/;"	t	file:
yytype_uint8	./src/yacc/y.tab.c	/^typedef YYTYPE_UINT8 yytype_uint8;$/;"	t	file:
yytype_uint8	./src/yacc/y.tab.c	/^typedef unsigned char yytype_uint8;$/;"	t	file:
yyvs	./src/yacc/y.tab.c	/^  YYSTYPE yyvs;$/;"	m	union:yyalloc	file:
z	./src/debugger/CpuDebug.hxx	/^    int z() { return !mySystem->m6502().notZ; }$/;"	f	class:CpuDebug
zeroCell	./src/debugger/gui/DataGridWidget.cxx	/^void DataGridWidget::zeroCell()$/;"	f	class:DataGridWidget
zoom	./src/common/VideoModeList.hxx	/^  uInt32 zoom;$/;"	m	struct:VideoMode
zoom	./src/debugger/gui/TiaZoomWidget.cxx	/^void TiaZoomWidget::zoom(int level)$/;"	f	class:TiaZoomWidget
~AboutDialog	./src/gui/AboutDialog.cxx	/^AboutDialog::~AboutDialog()$/;"	f	class:AboutDialog
~AbstractFilesystemNode	./src/emucore/FSNode.hxx	/^    virtual ~AbstractFilesystemNode() {}$/;"	f	class:AbstractFilesystemNode
~Array	./src/common/Array.hxx	/^    ~Array<T>()$/;"	f	class:Common::Array
~AtariVox	./src/emucore/AtariVox.cxx	/^AtariVox::~AtariVox()$/;"	f	class:AtariVox
~AudioDialog	./src/gui/AudioDialog.cxx	/^AudioDialog::~AudioDialog()$/;"	f	class:AudioDialog
~AudioWidget	./src/debugger/gui/AudioWidget.cxx	/^AudioWidget::~AudioWidget()$/;"	f	class:AudioWidget
~BankRomCheat	./src/cheat/BankRomCheat.cxx	/^BankRomCheat::~BankRomCheat()$/;"	f	class:BankRomCheat
~BoosterGrip	./src/emucore/Booster.cxx	/^BoosterGrip::~BoosterGrip()$/;"	f	class:BoosterGrip
~BrowserDialog	./src/gui/BrowserDialog.cxx	/^BrowserDialog::~BrowserDialog()$/;"	f	class:BrowserDialog
~Cartridge	./src/emucore/Cart.cxx	/^Cartridge::~Cartridge()$/;"	f	class:Cartridge
~Cartridge0840	./src/emucore/Cart0840.cxx	/^Cartridge0840::~Cartridge0840()$/;"	f	class:Cartridge0840
~Cartridge2K	./src/emucore/Cart2K.cxx	/^Cartridge2K::~Cartridge2K()$/;"	f	class:Cartridge2K
~Cartridge3E	./src/emucore/Cart3E.cxx	/^Cartridge3E::~Cartridge3E()$/;"	f	class:Cartridge3E
~Cartridge3F	./src/emucore/Cart3F.cxx	/^Cartridge3F::~Cartridge3F()$/;"	f	class:Cartridge3F
~Cartridge4A50	./src/emucore/Cart4A50.cxx	/^Cartridge4A50::~Cartridge4A50()$/;"	f	class:Cartridge4A50
~Cartridge4K	./src/emucore/Cart4K.cxx	/^Cartridge4K::~Cartridge4K()$/;"	f	class:Cartridge4K
~CartridgeAR	./src/emucore/CartAR.cxx	/^CartridgeAR::~CartridgeAR()$/;"	f	class:CartridgeAR
~CartridgeCV	./src/emucore/CartCV.cxx	/^CartridgeCV::~CartridgeCV()$/;"	f	class:CartridgeCV
~CartridgeDPC	./src/emucore/CartDPC.cxx	/^CartridgeDPC::~CartridgeDPC()$/;"	f	class:CartridgeDPC
~CartridgeE0	./src/emucore/CartE0.cxx	/^CartridgeE0::~CartridgeE0()$/;"	f	class:CartridgeE0
~CartridgeE7	./src/emucore/CartE7.cxx	/^CartridgeE7::~CartridgeE7()$/;"	f	class:CartridgeE7
~CartridgeF4	./src/emucore/CartF4.cxx	/^CartridgeF4::~CartridgeF4()$/;"	f	class:CartridgeF4
~CartridgeF4SC	./src/emucore/CartF4SC.cxx	/^CartridgeF4SC::~CartridgeF4SC()$/;"	f	class:CartridgeF4SC
~CartridgeF6	./src/emucore/CartF6.cxx	/^CartridgeF6::~CartridgeF6()$/;"	f	class:CartridgeF6
~CartridgeF6SC	./src/emucore/CartF6SC.cxx	/^CartridgeF6SC::~CartridgeF6SC()$/;"	f	class:CartridgeF6SC
~CartridgeF8	./src/emucore/CartF8.cxx	/^CartridgeF8::~CartridgeF8()$/;"	f	class:CartridgeF8
~CartridgeF8SC	./src/emucore/CartF8SC.cxx	/^CartridgeF8SC::~CartridgeF8SC()$/;"	f	class:CartridgeF8SC
~CartridgeFASC	./src/emucore/CartFASC.cxx	/^CartridgeFASC::~CartridgeFASC()$/;"	f	class:CartridgeFASC
~CartridgeFE	./src/emucore/CartFE.cxx	/^CartridgeFE::~CartridgeFE()$/;"	f	class:CartridgeFE
~CartridgeMB	./src/emucore/CartMB.cxx	/^CartridgeMB::~CartridgeMB()$/;"	f	class:CartridgeMB
~CartridgeMC	./src/emucore/CartMC.cxx	/^CartridgeMC::~CartridgeMC()$/;"	f	class:CartridgeMC
~CartridgeSB	./src/emucore/CartSB.cxx	/^CartridgeSB::~CartridgeSB()$/;"	f	class:CartridgeSB
~CartridgeUA	./src/emucore/CartUA.cxx	/^CartridgeUA::~CartridgeUA()$/;"	f	class:CartridgeUA
~CartridgeX07	./src/emucore/CartX07.cxx	/^CartridgeX07::~CartridgeX07()$/;"	f	class:CartridgeX07
~Cheat	./src/cheat/Cheat.hxx	/^    virtual ~Cheat() { }$/;"	f	class:Cheat
~CheatCodeDialog	./src/cheat/CheatCodeDialog.cxx	/^CheatCodeDialog::~CheatCodeDialog()$/;"	f	class:CheatCodeDialog
~CheatManager	./src/cheat/CheatManager.cxx	/^CheatManager::~CheatManager()$/;"	f	class:CheatManager
~CheckListWidget	./src/gui/CheckListWidget.cxx	/^CheckListWidget::~CheckListWidget()$/;"	f	class:CheckListWidget
~CheetahCheat	./src/cheat/CheetahCheat.cxx	/^CheetahCheat::~CheetahCheat()$/;"	f	class:CheetahCheat
~ColorWidget	./src/debugger/gui/ColorWidget.cxx	/^ColorWidget::~ColorWidget()$/;"	f	class:ColorWidget
~CommandDialog	./src/gui/CommandDialog.cxx	/^CommandDialog::~CommandDialog()$/;"	f	class:CommandDialog
~CommandMenu	./src/gui/CommandMenu.cxx	/^CommandMenu::~CommandMenu()$/;"	f	class:CommandMenu
~CommandReceiver	./src/gui/Command.hxx	/^    virtual ~CommandReceiver() {}$/;"	f	class:CommandReceiver
~CommandSender	./src/gui/Command.hxx	/^    virtual ~CommandSender() {}$/;"	f	class:CommandSender
~Console	./src/emucore/Console.cxx	/^Console::~Console()$/;"	f	class:Console
~ContextMenu	./src/debugger/gui/ContextMenu.cxx	/^ContextMenu::~ContextMenu()$/;"	f	class:ContextMenu
~Controller	./src/emucore/Control.cxx	/^Controller::~Controller()$/;"	f	class:Controller
~CpuWidget	./src/debugger/gui/CpuWidget.cxx	/^CpuWidget::~CpuWidget()$/;"	f	class:CpuWidget
~DataGridOpsWidget	./src/debugger/gui/DataGridOpsWidget.hxx	/^    virtual ~DataGridOpsWidget() {}$/;"	f	class:DataGridOpsWidget
~DataGridWidget	./src/debugger/gui/DataGridWidget.cxx	/^DataGridWidget::~DataGridWidget()$/;"	f	class:DataGridWidget
~Debugger	./src/debugger/Debugger.cxx	/^Debugger::~Debugger()$/;"	f	class:Debugger
~DebuggerDialog	./src/debugger/gui/DebuggerDialog.cxx	/^DebuggerDialog::~DebuggerDialog()$/;"	f	class:DebuggerDialog
~DebuggerParser	./src/debugger/DebuggerParser.cxx	/^DebuggerParser::~DebuggerParser()$/;"	f	class:DebuggerParser
~DebuggerState	./src/debugger/DebuggerSystem.hxx	/^    ~DebuggerState() { }$/;"	f	class:DebuggerState
~DebuggerSystem	./src/debugger/DebuggerSystem.hxx	/^    virtual ~DebuggerSystem() { }$/;"	f	class:DebuggerSystem
~Deserializer	./src/emucore/Deserializer.cxx	/^Deserializer::~Deserializer(void)$/;"	f	class:Deserializer
~Device	./src/emucore/m6502/src/Device.cxx	/^Device::~Device()$/;"	f	class:Device
~Dialog	./src/gui/Dialog.cxx	/^Dialog::~Dialog()$/;"	f	class:Dialog
~DialogContainer	./src/gui/DialogContainer.cxx	/^DialogContainer::~DialogContainer()$/;"	f	class:DialogContainer
~Driving	./src/emucore/Driving.cxx	/^Driving::~Driving()$/;"	f	class:Driving
~EditableWidget	./src/gui/EditableWidget.cxx	/^EditableWidget::~EditableWidget()$/;"	f	class:EditableWidget
~EquateList	./src/debugger/EquateList.cxx	/^EquateList::~EquateList()$/;"	f	class:EquateList
~Event	./src/emucore/Event.cxx	/^Event::~Event()$/;"	f	class:Event
~EventHandler	./src/emucore/EventHandler.cxx	/^EventHandler::~EventHandler()$/;"	f	class:EventHandler
~EventMappingWidget	./src/gui/EventMappingWidget.cxx	/^EventMappingWidget::~EventMappingWidget()$/;"	f	class:EventMappingWidget
~Expression	./src/debugger/Expression.cxx	/^Expression::~Expression()$/;"	f	class:Expression
~FileSnapDialog	./src/gui/FileSnapDialog.cxx	/^FileSnapDialog::~FileSnapDialog()$/;"	f	class:FileSnapDialog
~FilesystemNode	./src/emucore/FSNode.cxx	/^FilesystemNode::~FilesystemNode()$/;"	f	class:FilesystemNode
~FrameBuffer	./src/emucore/FrameBuffer.cxx	/^FrameBuffer::~FrameBuffer(void)$/;"	f	class:FrameBuffer
~FrameBufferGL	./src/common/FrameBufferGL.cxx	/^FrameBufferGL::~FrameBufferGL()$/;"	f	class:FrameBufferGL
~FrameBufferGP2X	./src/gp2x/FrameBufferGP2X.cxx	/^FrameBufferGP2X::~FrameBufferGP2X()$/;"	f	class:FrameBufferGP2X
~FrameBufferSoft	./src/common/FrameBufferSoft.cxx	/^FrameBufferSoft::~FrameBufferSoft()$/;"	f	class:FrameBufferSoft
~GameInfoDialog	./src/gui/GameInfoDialog.cxx	/^GameInfoDialog::~GameInfoDialog()$/;"	f	class:GameInfoDialog
~GameList	./src/gui/GameList.cxx	/^GameList::~GameList()$/;"	f	class:GameList
~GuiObject	./src/gui/GuiObject.hxx	/^    virtual ~GuiObject() {}$/;"	f	class:GuiObject
~HelpDialog	./src/gui/HelpDialog.cxx	/^HelpDialog::~HelpDialog()$/;"	f	class:HelpDialog
~InputDialog	./src/gui/InputDialog.cxx	/^InputDialog::~InputDialog()$/;"	f	class:InputDialog
~InputTextDialog	./src/gui/InputTextDialog.cxx	/^InputTextDialog::~InputTextDialog()$/;"	f	class:InputTextDialog
~Joystick	./src/emucore/Joystick.cxx	/^Joystick::~Joystick()$/;"	f	class:Joystick
~Keyboard	./src/emucore/Keyboard.cxx	/^Keyboard::~Keyboard()$/;"	f	class:Keyboard
~Launcher	./src/gui/Launcher.cxx	/^Launcher::~Launcher()$/;"	f	class:Launcher
~LauncherDialog	./src/gui/LauncherDialog.cxx	/^LauncherDialog::~LauncherDialog()$/;"	f	class:LauncherDialog
~ListWidget	./src/gui/ListWidget.cxx	/^ListWidget::~ListWidget()$/;"	f	class:ListWidget
~M6502	./src/emucore/m6502/src/M6502.cxx	/^M6502::~M6502()$/;"	f	class:M6502
~M6502High	./src/emucore/m6502/src/M6502Hi.cxx	/^M6502High::~M6502High()$/;"	f	class:M6502High
~M6502Low	./src/emucore/m6502/src/M6502Low.cxx	/^M6502Low::~M6502Low()$/;"	f	class:M6502Low
~M6532	./src/emucore/M6532.cxx	/^M6532::~M6532()$/;"	f	class:M6532
~MediaSource	./src/emucore/MediaSrc.cxx	/^MediaSource::~MediaSource()$/;"	f	class:MediaSource
~Menu	./src/gui/Menu.cxx	/^Menu::~Menu()$/;"	f	class:Menu
~NullDevice	./src/emucore/m6502/src/NullDev.cxx	/^NullDevice::~NullDevice()$/;"	f	class:NullDevice
~OSystem	./src/emucore/OSystem.cxx	/^OSystem::~OSystem()$/;"	f	class:OSystem
~OSystemGP2X	./src/gp2x/OSystemGP2X.cxx	/^OSystemGP2X::~OSystemGP2X()$/;"	f	class:OSystemGP2X
~OSystemMACOSX	./src/macosx/OSystemMACOSX.cxx	/^OSystemMACOSX::~OSystemMACOSX()$/;"	f	class:OSystemMACOSX
~OSystemUNIX	./src/unix/OSystemUNIX.cxx	/^OSystemUNIX::~OSystemUNIX()$/;"	f	class:OSystemUNIX
~OSystemWin32	./src/win32/OSystemWin32.cxx	/^OSystemWin32::~OSystemWin32()$/;"	f	class:OSystemWin32
~OSystemWinCE	./src/wince/OSystemWinCE.cxx	/^OSystemWinCE::~OSystemWinCE()$/;"	f	class:OSystemWinCE
~OptionsDialog	./src/gui/OptionsDialog.cxx	/^OptionsDialog::~OptionsDialog()$/;"	f	class:OptionsDialog
~PackedBitArray	./src/debugger/PackedBitArray.cxx	/^PackedBitArray::~PackedBitArray() {$/;"	f	class:PackedBitArray
~Paddles	./src/emucore/Paddles.cxx	/^Paddles::~Paddles()$/;"	f	class:Paddles
~PopUpWidget	./src/gui/PopUpWidget.cxx	/^PopUpWidget::~PopUpWidget()$/;"	f	class:PopUpWidget
~ProgressDialog	./src/gui/ProgressDialog.cxx	/^ProgressDialog::~ProgressDialog()$/;"	f	class:ProgressDialog
~PromptWidget	./src/debugger/gui/PromptWidget.cxx	/^PromptWidget::~PromptWidget()$/;"	f	class:PromptWidget
~Properties	./src/emucore/Props.cxx	/^Properties::~Properties()$/;"	f	class:Properties
~PropertiesSet	./src/emucore/PropsSet.cxx	/^PropertiesSet::~PropertiesSet()$/;"	f	class:PropertiesSet
~RamCheat	./src/cheat/RamCheat.cxx	/^RamCheat::~RamCheat()$/;"	f	class:RamCheat
~RamWidget	./src/debugger/gui/RamWidget.cxx	/^RamWidget::~RamWidget()$/;"	f	class:RamWidget
~RectList	./src/common/RectList.cxx	/^RectList::~RectList()$/;"	f	class:RectList
~RegWriteQueue	./src/common/SoundSDL.cxx	/^SoundSDL::RegWriteQueue::~RegWriteQueue()$/;"	f	class:SoundSDL::RegWriteQueue
~RegWriteQueue	./src/wince/SoundWinCE.cxx	/^SoundWinCE::RegWriteQueue::~RegWriteQueue()$/;"	f	class:SoundWinCE::RegWriteQueue
~RomAuditDialog	./src/gui/RomAuditDialog.cxx	/^RomAuditDialog::~RomAuditDialog()$/;"	f	class:RomAuditDialog
~RomInfoWidget	./src/gui/RomInfoWidget.cxx	/^RomInfoWidget::~RomInfoWidget()$/;"	f	class:RomInfoWidget
~RomListWidget	./src/debugger/gui/RomListWidget.cxx	/^RomListWidget::~RomListWidget()$/;"	f	class:RomListWidget
~RomWidget	./src/debugger/gui/RomWidget.cxx	/^RomWidget::~RomWidget()$/;"	f	class:RomWidget
~Serializable	./src/emucore/Serializable.hxx	/^    virtual ~Serializable() { }$/;"	f	class:Serializable
~Serializer	./src/emucore/Serializer.cxx	/^Serializer::~Serializer(void)$/;"	f	class:Serializer
~Settings	./src/emucore/Settings.cxx	/^Settings::~Settings()$/;"	f	class:Settings
~SettingsGP2X	./src/gp2x/SettingsGP2X.cxx	/^SettingsGP2X::~SettingsGP2X()$/;"	f	class:SettingsGP2X
~SettingsMACOSX	./src/macosx/SettingsMACOSX.cxx	/^SettingsMACOSX::~SettingsMACOSX()$/;"	f	class:SettingsMACOSX
~SettingsUNIX	./src/unix/SettingsUNIX.cxx	/^SettingsUNIX::~SettingsUNIX()$/;"	f	class:SettingsUNIX
~SettingsWin32	./src/win32/SettingsWin32.cxx	/^SettingsWin32::~SettingsWin32()$/;"	f	class:SettingsWin32
~Sound	./src/emucore/Sound.hxx	/^    virtual ~Sound() { };$/;"	f	class:Sound
~SoundNull	./src/common/SoundNull.cxx	/^SoundNull::~SoundNull()$/;"	f	class:SoundNull
~SoundSDL	./src/common/SoundSDL.cxx	/^SoundSDL::~SoundSDL()$/;"	f	class:SoundSDL
~SoundWinCE	./src/wince/SoundWinCE.cxx	/^SoundWinCE::~SoundWinCE()$/;"	f	class:SoundWinCE
~SpeakJet	./src/emucore/SpeakJet.cxx	/^SpeakJet::~SpeakJet()$/;"	f	class:SpeakJet
~StateManager	./src/emucore/StateManager.cxx	/^StateManager::~StateManager()$/;"	f	class:StateManager
~StringListWidget	./src/gui/StringListWidget.cxx	/^StringListWidget::~StringListWidget()$/;"	f	class:StringListWidget
~Surface	./src/gui/Surface.cxx	/^Surface::~Surface()$/;"	f	class:GUI::Surface
~Switches	./src/emucore/Switches.cxx	/^Switches::~Switches()$/;"	f	class:Switches
~System	./src/emucore/m6502/src/System.cxx	/^System::~System()$/;"	f	class:System
~TIA	./src/emucore/TIA.cxx	/^TIA::~TIA()$/;"	f	class:TIA
~TIASound	./src/emucore/TIASnd.cxx	/^TIASound::~TIASound()$/;"	f	class:TIASound
~TabWidget	./src/gui/TabWidget.cxx	/^TabWidget::~TabWidget()$/;"	f	class:TabWidget
~TiaInfoWidget	./src/debugger/gui/TiaInfoWidget.cxx	/^TiaInfoWidget::~TiaInfoWidget()$/;"	f	class:TiaInfoWidget
~TiaOutputWidget	./src/debugger/gui/TiaOutputWidget.cxx	/^TiaOutputWidget::~TiaOutputWidget()$/;"	f	class:TiaOutputWidget
~TiaWidget	./src/debugger/gui/TiaWidget.cxx	/^TiaWidget::~TiaWidget()$/;"	f	class:TiaWidget
~TiaZoomWidget	./src/debugger/gui/TiaZoomWidget.cxx	/^TiaZoomWidget::~TiaZoomWidget()$/;"	f	class:TiaZoomWidget
~ToggleBitWidget	./src/debugger/gui/ToggleBitWidget.cxx	/^ToggleBitWidget::~ToggleBitWidget()$/;"	f	class:ToggleBitWidget
~TogglePixelWidget	./src/debugger/gui/TogglePixelWidget.cxx	/^TogglePixelWidget::~TogglePixelWidget()$/;"	f	class:TogglePixelWidget
~ToggleWidget	./src/debugger/gui/ToggleWidget.cxx	/^ToggleWidget::~ToggleWidget()$/;"	f	class:ToggleWidget
~TrackBall22	./src/emucore/TrackBall22.cxx	/^TrackBall22::~TrackBall22()$/;"	f	class:TrackBall22
~UIDialog	./src/gui/UIDialog.cxx	/^UIDialog::~UIDialog()$/;"	f	class:UIDialog
~VideoDialog	./src/gui/VideoDialog.cxx	/^VideoDialog::~VideoDialog()$/;"	f	class:VideoDialog
~Widget	./src/gui/Widget.cxx	/^Widget::~Widget()$/;"	f	class:Widget
